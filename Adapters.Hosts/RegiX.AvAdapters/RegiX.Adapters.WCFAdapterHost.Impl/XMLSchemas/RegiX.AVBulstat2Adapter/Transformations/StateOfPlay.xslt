<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2017 (x64) - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:E="http://www.bulstat.bg/Entry" xmlns:PROP0="http://www.bulstat.bg/SubjectPropLifeTime" xmlns:PROP1="http://www.bulstat.bg/SubjectPropState" xmlns:PROP10="http://www.bulstat.bg/SubjectPropActivityDate" xmlns:PROP11="http://www.bulstat.bg/SubjectPropProfession" xmlns:PROP12="http://www.bulstat.bg/SubjectPropCollectiveBody" xmlns:PROP2="http://www.bulstat.bg/SubjectPropScopeOfActivity" xmlns:PROP3="http://www.bulstat.bg/SubjectPropActivityKID2008" xmlns:PROP4="http://www.bulstat.bg/SubjectPropActivityKID2003" xmlns:PROP5="http://www.bulstat.bg/SubjectPropInstallments" xmlns:PROP6="http://www.bulstat.bg/SubjectPropRepresentationType" xmlns:PROP7="http://www.bulstat.bg/SubjectPropFundingSource" xmlns:PROP8="http://www.bulstat.bg/SubjectPropOwnershipForm" xmlns:PROP9="http://www.bulstat.bg/SubjectPropAccountingRecordForm" xmlns:REL0="http://www.bulstat.bg/SubjectRelPartner" xmlns:REL1="http://www.bulstat.bg/SubjectRelManager" xmlns:REL2="http://www.bulstat.bg/SubjectRelBelonging" xmlns:REL3="http://www.bulstat.bg/SubjectRelAssignee" xmlns:REL4="http://www.bulstat.bg/SubjectRelCollectiveBodyMember" xmlns:T17="http://www.bulstat.bg/Document" xmlns:T171="http://www.bulstat.bg/IdentificationDoc" xmlns:T18="http://www.bulstat.bg/Event" xmlns:T22="http://www.bulstat.bg/LegalEntity" xmlns:T23="http://www.bulstat.bg/NaturalPerson" xmlns:T25="http://www.bulstat.bg/Subject" xmlns:T251="http://www.bulstat.bg/UIC" xmlns:T27="http://www.bulstat.bg/Case" xmlns:T28="http://www.bulstat.bg/Communication" xmlns:T3="http://www.bulstat.bg/NomenclatureEntry" xmlns:T40="http://www.bulstat.bg/SubscriptionElement" xmlns:T8="http://www.bulstat.bg/Address" xmlns:altova="http://www.altova.com" xmlns:altova-xfi="http://www.altova.com/xslt-extensions/xbrl" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:array="http://www.w3.org/2005/xpath-functions/array" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:map="http://www.w3.org/2005/xpath-functions/map" xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:tns="http://www.bulstat.bg/StateOfPlay" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xff="http://www.xbrl.org/2010/function/formula" xmlns:xfi="http://www.xbrl.org/2008/function/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="E PROP0 PROP1 PROP10 PROP11 PROP12 PROP2 PROP3 PROP4 PROP5 PROP6 PROP7 PROP8 PROP9 REL0 REL1 REL2 REL3 REL4 T17 T171 T18 T22 T23 T25 T251 T27 T28 T3 T40 T8 altova altova-xfi altovaext array clitype fn iso4217 ix java link map math sps tns xbrldi xbrli xff xfi xlink xs xsi">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:decimal-format name="format1" grouping-separator=" " decimal-separator=","/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
				<meta http-equiv="X-UA-Compatible" content="IE=9"/>
				<xsl:comment>[if IE]&gt;&lt;STYLE type=&quot;text/css&quot;&gt;.altova-rotate-left-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)} .altova-rotate-right-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)} &lt;/STYLE&gt;&lt;![endif]</xsl:comment>
				<xsl:comment>[if !IE]&gt;&lt;!</xsl:comment>
				<style type="text/css">.altova-rotate-left-textbox{-webkit-transform: rotate(-90deg) translate(-100%, 0%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(-90deg) translate(-100%, 0%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(-90deg) translate(-100%, 0%); -ms-transform-origin: 0% 0%;}.altova-rotate-right-textbox{-webkit-transform: rotate(90deg) translate(0%, -100%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(90deg) translate(0%, -100%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(90deg) translate(0%, -100%); -ms-transform-origin: 0% 0%;}</style>
				<xsl:comment>&lt;![endif]</xsl:comment>
				<style type="text/css">@page { margin-left:0.60in; margin-right:0.60in; margin-top:0.79in; margin-bottom:0.79in } @media print { br.altova-page-break { page-break-before: always; } }</style>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<h4 style="border-left-color:gray; border-left-style:solid; padding-left:10px; ">
						<span>
							<xsl:text>РЕПУБЛИКА БЪЛГАРИЯ</xsl:text>
						</span>
						<div>
							<br/>
						</div>
						<span>
							<xsl:text>Агенция по вписванията</xsl:text>
						</span>
					</h4>
					<h2 align="left">
						<span>
							<xsl:text>Справка за актуално състояние на субект на БУЛСТАТ</xsl:text>
						</span>
					</h2>
					<xsl:choose>
						<xsl:when test="count(tns:StateOfPlay/*)&gt;0">
							<xsl:for-each select="tns:StateOfPlay">
								<xsl:for-each select="tns:Subject">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_0" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Субект на БУЛСТАТ</xsl:text>
														</span>
													</h3>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_1">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_1" select="string($altova:seqContentStrings_1)"/>
															<xsl:value-of select="$altova:sContent_1"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<xsl:call-template name="Subject"/>
								</xsl:for-each>
								<div>
									<br/>
								</div>
								<xsl:for-each select="tns:Event">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_2" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Последно регистрирано събитие за субекта</xsl:text>
														</span>
													</h3>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_3">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_3" select="string($altova:seqContentStrings_3)"/>
															<xsl:value-of select="$altova:sContent_3"/>
														</span>
													</xsl:for-each>
													<xsl:for-each select="T18:EntryType">
														<div>
															<br/>
														</div>
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<xsl:for-each select="T18:EventDate">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_4" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Дата:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:apply-templates/>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="T18:EventType">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_5" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Вид:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="T18:LegalBase">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_6" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Правно основание:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="T18:Case">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_7" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Преписка:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T27:Court">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Код на съд: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T27:Year">
															<span>
																<xsl:text>, година: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T27:Number">
															<span>
																<xsl:text>, номер: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T27:Batch">
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T27:Register">
															<span>
																<xsl:text>, регистър: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T27:Chapter">
															<span>
																<xsl:text>, глава: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T27:PageNumber">
															<span>
																<xsl:text>, стр.: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td style="text-align:right; width:100px; " valign="top">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:variable name="altova:seqContentStrings_8">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:choose>
																		<xsl:when test="contains(string(string(.)), 'Z')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(string(string(.)), '+')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																			<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:variable>
																<xsl:variable name="altova:sContent_8" select="string($altova:seqContentStrings_8)"/>
																<xsl:value-of select="$altova:sContent_8"/>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="T18:Document">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_9" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Документ:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T17:DocumentType">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Вид документ (заявление, решение и т.н): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T17:DocumentNumber">
															<span>
																<xsl:text>, номер: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T17:DocumentDate">
															<span>
																<xsl:text>, дата на документа: </xsl:text>
															</span>
															<span>
																<xsl:variable name="altova:seqContentStrings_10">
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																</xsl:variable>
																<xsl:variable name="altova:sContent_10" select="string($altova:seqContentStrings_10)"/>
																<xsl:value-of select="$altova:sContent_10"/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="T17:ValidFromDate">
															<span>
																<xsl:text>, дата на която влиза в сила: </xsl:text>
															</span>
															<span>
																<xsl:variable name="altova:seqContentStrings_11">
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																</xsl:variable>
																<xsl:variable name="altova:sContent_11" select="string($altova:seqContentStrings_11)"/>
																<xsl:value-of select="$altova:sContent_11"/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="T17:DocumentName">
															<span>
																<xsl:text>, наименование: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td style="text-align:right; width:100px; " valign="top">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:variable name="altova:seqContentStrings_12">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:choose>
																		<xsl:when test="contains(string(string(.)), 'Z')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(string(string(.)), '+')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																			<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:variable>
																<xsl:variable name="altova:sContent_12" select="string($altova:seqContentStrings_12)"/>
																<xsl:value-of select="$altova:sContent_12"/>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
										<xsl:for-each select="T17:AuthorName">
											<span style="font-weight:bold; ">
												<xsl:text>Име на автора:</xsl:text>
											</span>
											<span>
												<xsl:text>&#160;</xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="T17:Author">
											<div style="background-color:silver; font-weight:bold; ">
												<span>
													<xsl:text>Автор</xsl:text>
												</span>
											</div>
											<xsl:call-template name="Subject"/>
										</xsl:for-each>
									</xsl:for-each>
									<div>
										<br/>
									</div>
								</xsl:for-each>
								<xsl:for-each select="tns:RepresentationType">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_13" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Начин на представляване</xsl:text>
														</span>
													</h3>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_14">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_14" select="string($altova:seqContentStrings_14)"/>
															<xsl:value-of select="$altova:sContent_14"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<xsl:for-each select="PROP6:Type">
										<xsl:for-each select="T3:Code">
											<table border="0" width="100%">
												<xsl:variable name="altova:CurrContextGrid_15" select="."/>
												<tbody>
													<tr>
														<td style="width:250px; " valign="top">
															<div style="font-weight:bold; ">
																<span>
																	<xsl:text>Тип:</xsl:text>
																</span>
															</div>
														</td>
														<td valign="top">
															<xsl:apply-templates/>
														</td>
													</tr>
												</tbody>
											</table>
										</xsl:for-each>
									</xsl:for-each>
									<xsl:for-each select="PROP6:Description">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_16" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Описание:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:apply-templates/>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<div>
										<br/>
									</div>
								</xsl:for-each>
								<xsl:for-each select="tns:ScopeOfActivity">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_17" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Предмет на дейност</xsl:text>
														</span>
													</h3>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_18">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_18" select="string($altova:seqContentStrings_18)"/>
															<xsl:value-of select="$altova:sContent_18"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<xsl:for-each select="PROP2:Description">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_19" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Описание:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:apply-templates/>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<div>
										<br/>
									</div>
								</xsl:for-each>
								<xsl:for-each select="tns:MainActivity2003">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_20" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Основна дейност по КИД2003</xsl:text>
														</span>
													</h3>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_21">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_21" select="string($altova:seqContentStrings_21)"/>
															<xsl:value-of select="$altova:sContent_21"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<xsl:for-each select="PROP4:NKID2003">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_22" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Описание:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<div>
										<br/>
									</div>
								</xsl:for-each>
								<xsl:for-each select="tns:MainActivity2008">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_23" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Основна дейност по КИД2008</xsl:text>
														</span>
													</h3>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_24">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_24" select="string($altova:seqContentStrings_24)"/>
															<xsl:value-of select="$altova:sContent_24"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<xsl:for-each select="PROP3:KID2008">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_25" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Описание:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<div>
										<br/>
									</div>
								</xsl:for-each>
								<xsl:if test="string-length(tns:Installments)&gt;0">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_26" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Вноски</xsl:text>
														</span>
													</h3>
												</td>
											</tr>
										</tbody>
									</table>
								</xsl:if>
								<xsl:for-each select="tns:Installments">
									<table border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_27" select="."/>
										<tbody>
											<tr>
												<td style="width:250px; " valign="top">
													<xsl:for-each select="PROP5:Count">
														<span style="font-weight:bold; ">
															<xsl:text>Брой:</xsl:text>
														</span>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top">
													<xsl:for-each select="PROP5:Amount">
														<span style="font-weight:bold; ">
															<xsl:text>Стойност:</xsl:text>
														</span>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_28">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_28" select="string($altova:seqContentStrings_28)"/>
															<xsl:value-of select="$altova:sContent_28"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:for-each select="tns:LifeTime">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_29" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Срок на съществуване</xsl:text>
														</span>
													</h3>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_30">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_30" select="string($altova:seqContentStrings_30)"/>
															<xsl:value-of select="$altova:sContent_30"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<xsl:for-each select="PROP0:Date">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_31" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Дата:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:apply-templates/>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="PROP0:Description">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_32" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Описание:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:apply-templates/>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<div>
										<br/>
									</div>
								</xsl:for-each>
								<xsl:for-each select="tns:AccountingRecordForm">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_33" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Форма на счетоводно записване</xsl:text>
														</span>
													</h3>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_34">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_34" select="string($altova:seqContentStrings_34)"/>
															<xsl:value-of select="$altova:sContent_34"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<table border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_35" select="."/>
										<tbody>
											<tr>
												<td style="width:250px; " valign="top">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Код:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="PROP9:Form">
														<xsl:for-each select="T3:Code">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
												</td>
												<td style="text-align:right; width:100px; " valign="top"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:if test="string-length(tns:OwnershipForms)&gt;0">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_36" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Форма на собственост</xsl:text>
														</span>
													</h3>
												</td>
											</tr>
										</tbody>
									</table>
								</xsl:if>
								<xsl:for-each select="tns:OwnershipForms">
									<table border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_37" select="."/>
										<tbody>
											<tr>
												<td style="width:250px; " valign="top">
													<xsl:for-each select="PROP8:Form">
														<xsl:for-each select="T3:Code">
															<span style="font-weight:bold; ">
																<xsl:text>Код: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
												</td>
												<td valign="top">
													<xsl:for-each select="PROP8:Percent">
														<span style="font-weight:bold; ">
															<xsl:text>Процент: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_38">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_38" select="string($altova:seqContentStrings_38)"/>
															<xsl:value-of select="$altova:sContent_38"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:if test="string-length(tns:FundingSources)&gt;0">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_39" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Източници на финансиране</xsl:text>
														</span>
													</h3>
												</td>
											</tr>
										</tbody>
									</table>
								</xsl:if>
								<xsl:for-each select="tns:FundingSources">
									<table border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_40" select="."/>
										<tbody>
											<tr>
												<td style="width:250px; " valign="top">
													<xsl:for-each select="PROP7:Source">
														<xsl:for-each select="T3:Code">
															<span style="font-weight:bold; ">
																<xsl:text>Код: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
												</td>
												<td valign="top">
													<xsl:for-each select="PROP7:Percent">
														<span style="font-weight:bold; ">
															<xsl:text>Процент: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_41">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_41" select="string($altova:seqContentStrings_41)"/>
															<xsl:value-of select="$altova:sContent_41"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:for-each select="tns:State">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_42" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Състояние на субект</xsl:text>
														</span>
													</h3>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_43">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_43" select="string($altova:seqContentStrings_43)"/>
															<xsl:value-of select="$altova:sContent_43"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<xsl:for-each select="PROP1:State">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_44" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Код:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<div>
										<br/>
									</div>
								</xsl:for-each>
								<xsl:for-each select="tns:ActivityDate">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_45" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Дата на започване/ спиране/ възобновяване на дейността</xsl:text>
														</span>
													</h3>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_46">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_46" select="string($altova:seqContentStrings_46)"/>
															<xsl:value-of select="$altova:sContent_46"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<xsl:for-each select="PROP10:Type">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_47" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Код:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="PROP10:Date">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_48" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Дата:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:apply-templates/>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<div>
										<br/>
									</div>
								</xsl:for-each>
								<xsl:if test="string-length(tns:CollectiveBodies)&gt;0">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_49" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Колективни органи</xsl:text>
														</span>
													</h3>
												</td>
											</tr>
										</tbody>
									</table>
								</xsl:if>
								<xsl:for-each select="tns:CollectiveBodies">
									<table border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_50" select="."/>
										<tbody>
											<tr bgcolor="#d2d2d2">
												<td valign="top">
													<xsl:for-each select="PROP12:Type">
														<xsl:for-each select="T3:Code">
															<h4>
																<span>
																	<xsl:text>Вид колективен орган: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</h4>
														</xsl:for-each>
													</xsl:for-each>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_51">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_51" select="string($altova:seqContentStrings_51)"/>
															<xsl:value-of select="$altova:sContent_51"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<xsl:for-each select="PROP12:Members">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_52" select="."/>
											<tbody>
												<tr bgcolor="#d2d2d2">
													<td valign="top">
														<div>
															<span style="font-weight:bold; ">
																<xsl:text>Член на колективен орган</xsl:text>
															</span>
														</div>
														<xsl:for-each select="REL4:Position">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Код на длъжност в управлението: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
													</td>
													<td style="text-align:right; width:100px; " valign="top">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:variable name="altova:seqContentStrings_53">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:choose>
																		<xsl:when test="contains(string(string(.)), 'Z')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(string(string(.)), '+')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																			<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:variable>
																<xsl:variable name="altova:sContent_53" select="string($altova:seqContentStrings_53)"/>
																<xsl:value-of select="$altova:sContent_53"/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="T40:OperationType">
															<div>
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:text>(</xsl:text>
																</span>
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:apply-templates/>
																</span>
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:text>)</xsl:text>
																</span>
															</div>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
										<xsl:for-each select="REL4:RelatedSubject">
											<div style="background-color:silver; font-weight:bold; ">
												<span>
													<xsl:text>Колективни органи/Член на колективен орган/Субект</xsl:text>
												</span>
											</div>
											<xsl:call-template name="Subject"/>
										</xsl:for-each>
										<xsl:for-each select="REL4:RepresentedSubjects">
											<div style="background-color:silver; font-weight:bold; ">
												<span>
													<xsl:text>Колективни органи/Член на колективен орган/Представляван субект</xsl:text>
												</span>
											</div>
											<xsl:call-template name="Subject"/>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
								<div>
									<br/>
								</div>
								<xsl:for-each select="tns:AdditionalActivities2008">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_54" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Допълнителни дейности по КИД2008</xsl:text>
														</span>
													</h3>
												</td>
												<td style="text-align:right; width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_55">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_55" select="string($altova:seqContentStrings_55)"/>
															<xsl:value-of select="$altova:sContent_55"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<xsl:for-each select="PROP3:KID2008">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_56" select="."/>
											<tbody>
												<tr>
													<td style="width:250px; " valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Код:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<div>
										<br/>
									</div>
								</xsl:for-each>
								<xsl:if test="string-length(tns:Professions)&gt;0">
									<table bgcolor="#e1e1e1" border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_57" select="."/>
										<tbody>
											<tr bgcolor="#e1e1e1" valign="top">
												<td valign="top">
													<h3 style="text-decoration:underline; ">
														<span style="font-size:24px; ">
															<xsl:text>Професии</xsl:text>
														</span>
													</h3>
												</td>
											</tr>
										</tbody>
									</table>
								</xsl:if>
								<xsl:for-each select="tns:Professions">
									<table border="0" width="100%">
										<xsl:variable name="altova:CurrContextGrid_58" select="."/>
										<tbody>
											<tr>
												<td valign="top">
													<xsl:for-each select="PROP11:Profession">
														<xsl:for-each select="T3:Code">
															<span style="font-weight:bold; ">
																<xsl:text>Код:</xsl:text>
															</span>
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
												</td>
												<td style="width:100px; " valign="top">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:variable name="altova:seqContentStrings_59">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="altova:sContent_59" select="string($altova:seqContentStrings_59)"/>
															<xsl:value-of select="$altova:sContent_59"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:if test="string-length(tns:Managers) + string-length(tns:Partners) + string-length(tns:Assignee) + string-length(tns:Belonging)&gt;0">
									<h3 style="background-color:#b3b3b3; ">
										<span>
											<xsl:text>Връзки на субекта на БУЛСТАТ с други субекти</xsl:text>
										</span>
									</h3>
									<xsl:if test="string-length(tns:Managers)&gt;0">
										<table bgcolor="#e1e1e1" border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_60" select="."/>
											<tbody>
												<tr bgcolor="#e1e1e1" valign="top">
													<td valign="top">
														<h3 style="text-decoration:underline; ">
															<span style="font-size:24px; ">
																<xsl:text>Управители</xsl:text>
															</span>
														</h3>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:if>
									<xsl:for-each select="tns:Managers">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_61" select="."/>
											<tbody>
												<tr bgcolor="#d2d2d2">
													<td valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Управител</xsl:text>
															</span>
														</div>
													</td>
													<td style="text-align:right; width:100px; " valign="top">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:variable name="altova:seqContentStrings_62">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:choose>
																		<xsl:when test="contains(string(string(.)), 'Z')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(string(string(.)), '+')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																			<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:variable>
																<xsl:variable name="altova:sContent_62" select="string($altova:seqContentStrings_62)"/>
																<xsl:value-of select="$altova:sContent_62"/>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
										<xsl:for-each select="REL1:Position">
											<table border="0" width="100%">
												<xsl:variable name="altova:CurrContextGrid_63" select="."/>
												<tbody>
													<tr>
														<td style="width:250px; " valign="top">
															<div style="font-weight:bold; ">
																<span>
																	<xsl:text>Позиция:</xsl:text>
																</span>
															</div>
														</td>
														<td valign="top">
															<xsl:for-each select="T3:Code">
																<xsl:apply-templates/>
															</xsl:for-each>
														</td>
													</tr>
												</tbody>
											</table>
										</xsl:for-each>
										<xsl:for-each select="REL1:RelatedSubject">
											<xsl:call-template name="Subject"/>
										</xsl:for-each>
										<xsl:for-each select="REL1:RepresentedSubjects">
											<div style="background-color:silver; font-weight:bold; ">
												<span>
													<xsl:text>Субект, който представлява</xsl:text>
												</span>
											</div>
											<xsl:call-template name="Subject"/>
										</xsl:for-each>
									</xsl:for-each>
									<xsl:if test="string-length(tns:Partners)&gt;0">
										<table bgcolor="#e1e1e1" border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_64" select="."/>
											<tbody>
												<tr bgcolor="#e1e1e1" valign="top">
													<td valign="top">
														<h3 style="text-decoration:underline; ">
															<span style="font-size:24px; ">
																<xsl:text>Собственици/ съдружници</xsl:text>
															</span>
														</h3>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:if>
									<xsl:for-each select="tns:Partners">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_65" select="."/>
											<tbody>
												<tr bgcolor="#d2d2d2">
													<td valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Съдружник</xsl:text>
															</span>
														</div>
													</td>
													<td style="text-align:right; width:100px; " valign="top">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:variable name="altova:seqContentStrings_66">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:choose>
																		<xsl:when test="contains(string(string(.)), 'Z')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(string(string(.)), '+')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																			<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:variable>
																<xsl:variable name="altova:sContent_66" select="string($altova:seqContentStrings_66)"/>
																<xsl:value-of select="$altova:sContent_66"/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="T40:OperationType">
															<div>
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:text>(</xsl:text>
																</span>
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:apply-templates/>
																</span>
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:text>)</xsl:text>
																</span>
															</div>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
										<xsl:for-each select="REL0:Role">
											<span style="font-weight:bold; ">
												<xsl:text>Роля в собствеността: </xsl:text>
											</span>
											<xsl:for-each select="T3:Code">
												<xsl:apply-templates/>
											</xsl:for-each>
										</xsl:for-each>
										<xsl:for-each select="REL0:Percent">
											<div>
												<br/>
											</div>
											<span style="font-weight:bold; ">
												<xsl:text>Процент разпределение на собств. без капитал: </xsl:text>
											</span>
											<span style="font-weight:bold; ">
												<xsl:apply-templates/>
											</span>
										</xsl:for-each>
										<xsl:for-each select="REL0:Amount">
											<div>
												<br/>
											</div>
											<span style="font-weight:bold; ">
												<xsl:text>Дял в собствеността: </xsl:text>
											</span>
											<span style="font-weight:bold; ">
												<xsl:apply-templates/>
											</span>
										</xsl:for-each>
										<xsl:for-each select="REL0:RelatedSubject">
											<xsl:call-template name="Subject"/>
										</xsl:for-each>
									</xsl:for-each>
									<xsl:if test="string-length(tns:Assignee)&gt;0">
										<table bgcolor="#e1e1e1" border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_67" select="."/>
											<tbody>
												<tr bgcolor="#e1e1e1" valign="top">
													<td valign="top">
														<h3 style="text-decoration:underline; ">
															<span style="font-size:24px; ">
																<xsl:text>Правоприемство</xsl:text>
															</span>
														</h3>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:if>
									<xsl:for-each select="tns:Assignee">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_68" select="."/>
											<tbody>
												<tr bgcolor="#d2d2d2">
													<td valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Правоприемник</xsl:text>
															</span>
														</div>
													</td>
													<td style="text-align:right; width:100px; " valign="top">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:variable name="altova:seqContentStrings_69">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:choose>
																		<xsl:when test="contains(string(string(.)), 'Z')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(string(string(.)), '+')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																			<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:variable>
																<xsl:variable name="altova:sContent_69" select="string($altova:seqContentStrings_69)"/>
																<xsl:value-of select="$altova:sContent_69"/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="T40:OperationType">
															<div>
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:text>(</xsl:text>
																</span>
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:apply-templates/>
																</span>
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:text>)</xsl:text>
																</span>
															</div>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
										<xsl:for-each select="REL3:Type">
											<xsl:for-each select="T3:Code">
												<span>
													<xsl:text>Вид правоприемство: </xsl:text>
												</span>
												<xsl:apply-templates/>
											</xsl:for-each>
										</xsl:for-each>
										<xsl:for-each select="REL3:RelatedSubjects">
											<xsl:call-template name="Subject"/>
										</xsl:for-each>
									</xsl:for-each>
									<xsl:if test="string-length(tns:Belonging)&gt;0">
										<table bgcolor="#e1e1e1" border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_70" select="."/>
											<tbody>
												<tr bgcolor="#e1e1e1" valign="top">
													<td valign="top">
														<h3 style="text-decoration:underline; ">
															<span style="font-size:24px; ">
																<xsl:text>Принадлежност</xsl:text>
															</span>
														</h3>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:if>
									<xsl:for-each select="tns:Belonging">
										<table border="0" width="100%">
											<xsl:variable name="altova:CurrContextGrid_71" select="."/>
											<tbody>
												<tr bgcolor="#d2d2d2">
													<td valign="top">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Субект</xsl:text>
															</span>
														</div>
													</td>
													<td style="text-align:right; width:100px; " valign="top">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:variable name="altova:seqContentStrings_72">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:choose>
																		<xsl:when test="contains(string(string(.)), 'Z')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(string(string(.)), '+')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																			<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:variable>
																<xsl:variable name="altova:sContent_72" select="string($altova:seqContentStrings_72)"/>
																<xsl:value-of select="$altova:sContent_72"/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="T40:OperationType">
															<div style="text-align:right; ">
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:text>(</xsl:text>
																</span>
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:apply-templates/>
																</span>
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:text>)</xsl:text>
																</span>
															</div>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
										<xsl:for-each select="REL2:Type">
											<xsl:for-each select="T3:Code">
												<span>
													<xsl:text>Вид принадлежност: </xsl:text>
												</span>
												<xsl:apply-templates/>
											</xsl:for-each>
										</xsl:for-each>
										<xsl:for-each select="REL2:RelatedSubject">
											<xsl:call-template name="Subject"/>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:if>
							</xsl:for-each>
						</xsl:when>
						<xsl:otherwise>
							<span>
								<xsl:text>Не е открит субект на БУЛСТАТ по зададените критерии!</xsl:text>
							</span>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
	<xsl:template name="Subject">
		<xsl:for-each select="T25:UIC">
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
				<xsl:variable name="altova:CurrContextGrid_73" select="."/>
				<tbody>
					<tr>
						<td valign="top">
							<div style="font-weight:normal; ">
								<span style="font-weight:bold; ">
									<xsl:text>Код по булстат:</xsl:text>
								</span>
								<span>
									<xsl:text>&#160;</xsl:text>
								</span>
								<xsl:for-each select="T251:UIC">
									<xsl:apply-templates/>
								</xsl:for-each>
								<xsl:for-each select="T251:UICType">
									<xsl:for-each select="T3:Code">
										<span>
											<xsl:text> (тип: </xsl:text>
										</span>
										<xsl:apply-templates/>
										<span>
											<xsl:text>)</xsl:text>
										</span>
									</xsl:for-each>
								</xsl:for-each>
							</div>
						</td>
						<td style="text-align:right; width:100px; " valign="top">
							<xsl:for-each select="E:EntryTime">
								<span style="font-size:x-small; font-style:italic; ">
									<xsl:variable name="altova:seqContentStrings_74">
										<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
										<xsl:text> </xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
										<xsl:text>:</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
										<xsl:text>:</xsl:text>
										<xsl:choose>
											<xsl:when test="contains(string(string(.)), 'Z')">
												<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
											</xsl:when>
											<xsl:when test="contains(string(string(.)), '+')">
												<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
											</xsl:when>
											<xsl:when test="contains(substring(string(string(.)), 18), '-')">
												<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:variable>
									<xsl:variable name="altova:sContent_74" select="string($altova:seqContentStrings_74)"/>
									<xsl:value-of select="$altova:sContent_74"/>
								</span>
							</xsl:for-each>
						</td>
					</tr>
				</tbody>
			</table>
		</xsl:for-each>
		<xsl:for-each select="T25:SubjectType">
			<xsl:for-each select="T3:Code">
				<div>
					<span style="font-weight:bold; ">
						<xsl:text>Вид на субект (НФЛ, ФЗЛ, Държава, Неизвестен):</xsl:text>
					</span>
					<span>
						<xsl:text>&#160;</xsl:text>
					</span>
					<xsl:apply-templates/>
				</div>
			</xsl:for-each>
		</xsl:for-each>
		<xsl:for-each select="T25:LegalEntitySubject">
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
				<xsl:variable name="altova:CurrContextGrid_75" select="."/>
				<tbody>
					<tr>
						<td valign="top">
							<div style="font-weight:bold; ">
								<span style="text-decoration:underline; ">
									<xsl:text>Юридическо лице</xsl:text>
								</span>
							</div>
						</td>
						<td style="text-align:right; width:100px; " valign="top">
							<xsl:for-each select="E:EntryTime">
								<span style="font-size:x-small; font-style:italic; ">
									<xsl:variable name="altova:seqContentStrings_76">
										<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
										<xsl:text> </xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
										<xsl:text>:</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
										<xsl:text>:</xsl:text>
										<xsl:choose>
											<xsl:when test="contains(string(string(.)), 'Z')">
												<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
											</xsl:when>
											<xsl:when test="contains(string(string(.)), '+')">
												<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
											</xsl:when>
											<xsl:when test="contains(substring(string(string(.)), 18), '-')">
												<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:variable>
									<xsl:variable name="altova:sContent_76" select="string($altova:seqContentStrings_76)"/>
									<xsl:value-of select="$altova:sContent_76"/>
								</span>
							</xsl:for-each>
						</td>
					</tr>
				</tbody>
			</table>
			<xsl:for-each select="T22:CyrillicFullName">
				<table border="0" width="100%">
					<xsl:variable name="altova:CurrContextGrid_77" select="."/>
					<tbody>
						<tr>
							<td style="width:250px; " valign="top">
								<div>
									<span>
										<xsl:text>Пълно наименование на кирилица</xsl:text>
									</span>
									<span style="font-weight:bold; ">
										<xsl:text>:</xsl:text>
									</span>
								</div>
							</td>
							<td valign="top">
								<xsl:apply-templates/>
							</td>
							<td style="width:100px; " valign="top"/>
						</tr>
					</tbody>
				</table>
			</xsl:for-each>
			<xsl:for-each select="T22:CyrillicShortName">
				<table border="0" width="100%">
					<xsl:variable name="altova:CurrContextGrid_78" select="."/>
					<tbody>
						<tr>
							<td style="width:250px; " valign="top">
								<div>
									<span>
										<xsl:text>Кратко наименование на кирилица</xsl:text>
									</span>
									<span style="font-weight:bold; ">
										<xsl:text>:</xsl:text>
									</span>
								</div>
							</td>
							<td valign="top">
								<xsl:apply-templates/>
							</td>
							<td style="width:100px; " valign="top"/>
						</tr>
					</tbody>
				</table>
			</xsl:for-each>
			<xsl:for-each select="T22:LatinFullName">
				<table border="0" width="100%">
					<xsl:variable name="altova:CurrContextGrid_79" select="."/>
					<tbody>
						<tr>
							<td style="width:250px; " valign="top">
								<div>
									<span>
										<xsl:text>Пълно наименование на латиница</xsl:text>
									</span>
									<span style="font-weight:bold; ">
										<xsl:text>:</xsl:text>
									</span>
								</div>
							</td>
							<td valign="top">
								<xsl:apply-templates/>
							</td>
							<td style="width:100px; " valign="top"/>
						</tr>
					</tbody>
				</table>
			</xsl:for-each>
			<xsl:for-each select="T22:Country">
				<xsl:for-each select="T3:Code">
					<table border="0" width="100%">
						<xsl:variable name="altova:CurrContextGrid_80" select="."/>
						<tbody>
							<tr>
								<td style="width:250px; " valign="top">
									<div>
										<span>
											<xsl:text>Държава</xsl:text>
										</span>
										<span style="font-weight:bold; ">
											<xsl:text>:</xsl:text>
										</span>
									</div>
								</td>
								<td valign="top">
									<xsl:apply-templates/>
								</td>
								<td style="width:100px; " valign="top"/>
							</tr>
						</tbody>
					</table>
				</xsl:for-each>
			</xsl:for-each>
			<xsl:for-each select="T22:LegalForm">
				<xsl:for-each select="T3:Code">
					<table border="0" width="100%">
						<xsl:variable name="altova:CurrContextGrid_81" select="."/>
						<tbody>
							<tr>
								<td style="width:250px; " valign="top">
									<div>
										<span>
											<xsl:text>Код на правна форма</xsl:text>
										</span>
										<span style="font-weight:bold; ">
											<xsl:text>:</xsl:text>
										</span>
									</div>
								</td>
								<td valign="top">
									<xsl:apply-templates/>
								</td>
								<td style="width:100px; " valign="top"/>
							</tr>
						</tbody>
					</table>
				</xsl:for-each>
			</xsl:for-each>
			<xsl:for-each select="T22:LegalStatute">
				<xsl:for-each select="T3:Code">
					<table border="0" width="100%">
						<xsl:variable name="altova:CurrContextGrid_82" select="."/>
						<tbody>
							<tr>
								<td style="width:250px; " valign="top">
									<div>
										<span>
											<xsl:text>Код на юридически статус</xsl:text>
										</span>
										<span style="font-weight:bold; ">
											<xsl:text>:</xsl:text>
										</span>
									</div>
								</td>
								<td valign="top">
									<xsl:apply-templates/>
								</td>
								<td style="width:100px; " valign="top"/>
							</tr>
						</tbody>
					</table>
				</xsl:for-each>
			</xsl:for-each>
			<xsl:for-each select="T22:SubjectGroup">
				<xsl:for-each select="T3:Code">
					<table border="0" width="100%">
						<xsl:variable name="altova:CurrContextGrid_83" select="."/>
						<tbody>
							<tr>
								<td style="width:250px; " valign="top">
									<div>
										<span>
											<xsl:text>Код на група субекти</xsl:text>
										</span>
										<span style="font-weight:bold; ">
											<xsl:text>:</xsl:text>
										</span>
									</div>
								</td>
								<td valign="top">
									<xsl:apply-templates/>
								</td>
								<td style="width:100px; " valign="top"/>
							</tr>
						</tbody>
					</table>
				</xsl:for-each>
			</xsl:for-each>
			<xsl:for-each select="T22:SubordinateLevel">
				<xsl:for-each select="T3:Code">
					<table border="0" width="100%">
						<xsl:variable name="altova:CurrContextGrid_84" select="."/>
						<tbody>
							<tr>
								<td style="width:250px; " valign="top">
									<div>
										<span>
											<xsl:text>Код на ниво на подчиненост</xsl:text>
										</span>
										<span style="font-weight:bold; ">
											<xsl:text>:</xsl:text>
										</span>
									</div>
								</td>
								<td valign="top">
									<xsl:apply-templates/>
								</td>
								<td style="width:100px; " valign="top"/>
							</tr>
						</tbody>
					</table>
				</xsl:for-each>
			</xsl:for-each>
			<xsl:for-each select="T22:TRStatus">
				<table border="0" width="100%">
					<xsl:variable name="altova:CurrContextGrid_85" select="."/>
					<tbody>
						<tr>
							<td style="width:250px; " valign="top">
								<div>
									<span>
										<xsl:text>Статус от Търговски регистър</xsl:text>
									</span>
									<span style="font-weight:bold; ">
										<xsl:text>:</xsl:text>
									</span>
								</div>
							</td>
							<td valign="top">
								<xsl:apply-templates/>
							</td>
							<td style="width:100px; " valign="top"/>
						</tr>
					</tbody>
				</table>
			</xsl:for-each>
		</xsl:for-each>
		<xsl:for-each select="T25:NaturalPersonSubject">
			<xsl:choose>
				<xsl:when test="string-length( E:EntryTime ) &gt; 0 or
string-length( T23:Country/T3:Code )&gt; 0 or
string-length( T23:EGN )&gt; 0 or
string-length( T23:LNC )&gt; 0 or
string-length( T23:CyrillicName )&gt; 0 or
string-length( T23:LatinName )&gt; 0 or
string-length( T23:BirthDate )&gt; 0 or
string-length( T23:IdentificationDoc/E:EntryTime ) &gt; 0 or
string-length(  T23:IdentificationDoc/T171:IDType/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/T171:IDNumber )  &gt; 0 or
string-length( T23:IdentificationDoc/T171:Country/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/T171:IssueDate ) &gt; 0 or
string-length( T23:IdentificationDoc/T171:ExpiryDate )&gt; 0">
					<table border="0" cellpadding="0" cellspacing="0" width="100%">
						<xsl:variable name="altova:CurrContextGrid_86" select="."/>
						<tbody>
							<tr>
								<td valign="top">
									<div style="font-weight:bold; ">
										<span style="text-decoration:underline; ">
											<xsl:text>Физическо лице:</xsl:text>
										</span>
									</div>
								</td>
								<td style="text-align:right; width:100px; " valign="top">
									<xsl:for-each select="E:EntryTime">
										<span style="font-size:x-small; font-style:italic; ">
											<xsl:variable name="altova:seqContentStrings_87">
												<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
												<xsl:text>.</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
												<xsl:text>.</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
												<xsl:text> </xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
												<xsl:text>:</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
												<xsl:text>:</xsl:text>
												<xsl:choose>
													<xsl:when test="contains(string(string(.)), 'Z')">
														<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
													</xsl:when>
													<xsl:when test="contains(string(string(.)), '+')">
														<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
													</xsl:when>
													<xsl:when test="contains(substring(string(string(.)), 18), '-')">
														<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
													</xsl:when>
													<xsl:otherwise>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:variable>
											<xsl:variable name="altova:sContent_87" select="string($altova:seqContentStrings_87)"/>
											<xsl:value-of select="$altova:sContent_87"/>
										</span>
									</xsl:for-each>
								</td>
							</tr>
						</tbody>
					</table>
					<xsl:for-each select="T23:CyrillicName">
						<table border="0" width="100%">
							<xsl:variable name="altova:CurrContextGrid_88" select="."/>
							<tbody>
								<tr>
									<td style="width:250px; " valign="top">
										<div>
											<span>
												<xsl:text>Име на кирилица</xsl:text>
											</span>
											<span style="font-weight:bold; ">
												<xsl:text>:</xsl:text>
											</span>
										</div>
									</td>
									<td valign="top">
										<xsl:apply-templates/>
									</td>
									<td style="width:100px; " valign="top"/>
								</tr>
							</tbody>
						</table>
					</xsl:for-each>
					<xsl:for-each select="T23:LatinName">
						<table border="0" width="100%">
							<xsl:variable name="altova:CurrContextGrid_89" select="."/>
							<tbody>
								<tr>
									<td style="width:250px; " valign="top">
										<div>
											<span>
												<xsl:text>Име на латиница</xsl:text>
											</span>
											<span style="font-weight:bold; ">
												<xsl:text>:</xsl:text>
											</span>
										</div>
									</td>
									<td valign="top">
										<xsl:apply-templates/>
									</td>
									<td style="width:100px; " valign="top"/>
								</tr>
							</tbody>
						</table>
					</xsl:for-each>
					<table border="0" width="100%">
						<xsl:variable name="altova:CurrContextGrid_90" select="."/>
						<tbody>
							<tr>
								<td style="width:250px; " valign="top">
									<div>
										<span>
											<xsl:text>Идентификатор:</xsl:text>
										</span>
									</div>
								</td>
								<td valign="top">
									<xsl:for-each select="T23:EGN">
										<div>
											<span>
												<xsl:text>ЕГН: </xsl:text>
											</span>
											<xsl:apply-templates/>
										</div>
									</xsl:for-each>
									<xsl:for-each select="T23:LNC">
										<div>
											<span>
												<xsl:text>ЛНЧ: </xsl:text>
											</span>
											<xsl:apply-templates/>
										</div>
									</xsl:for-each>
								</td>
								<td style="width:100px; " valign="top"/>
							</tr>
						</tbody>
					</table>
					<xsl:for-each select="T23:BirthDate">
						<table border="0" width="100%">
							<xsl:variable name="altova:CurrContextGrid_91" select="."/>
							<tbody>
								<tr>
									<td style="width:250px; " valign="top">
										<div>
											<span>
												<xsl:text>Дата на раждане:</xsl:text>
											</span>
										</div>
									</td>
									<td valign="top">
										<xsl:apply-templates/>
									</td>
									<td style="width:100px; " valign="top"/>
								</tr>
							</tbody>
						</table>
					</xsl:for-each>
					<xsl:for-each select="T23:Country">
						<xsl:for-each select="T3:Code">
							<table border="0" width="100%">
								<xsl:variable name="altova:CurrContextGrid_92" select="."/>
								<tbody>
									<tr>
										<td style="width:250px; " valign="top">
											<div>
												<span>
													<xsl:text>Гражданство (код на държава)</xsl:text>
												</span>
												<span style="font-weight:bold; ">
													<xsl:text>:</xsl:text>
												</span>
											</div>
										</td>
										<td valign="top">
											<xsl:apply-templates/>
										</td>
										<td style="width:100px; " valign="top"/>
									</tr>
								</tbody>
							</table>
						</xsl:for-each>
					</xsl:for-each>
					<xsl:for-each select="T23:BirthDate"/>
					<xsl:for-each select="T23:IdentificationDoc">
						<table border="0" cellpadding="0" cellspacing="0" width="100%">
							<xsl:variable name="altova:CurrContextGrid_93" select="."/>
							<tbody>
								<tr>
									<td valign="top">
										<div style="font-weight:bold; ">
											<span style="text-decoration:underline; ">
												<xsl:text>Документ за самоличност</xsl:text>
											</span>
										</div>
									</td>
									<td style="text-align:right; width:100px; " valign="top">
										<xsl:for-each select="T23:IdentificationDoc">
											<xsl:for-each select="E:EntryTime">
												<span style="font-size:x-small; font-style:italic; ">
													<xsl:variable name="altova:seqContentStrings_94">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:variable>
													<xsl:variable name="altova:sContent_94" select="string($altova:seqContentStrings_94)"/>
													<xsl:value-of select="$altova:sContent_94"/>
												</span>
											</xsl:for-each>
										</xsl:for-each>
									</td>
								</tr>
							</tbody>
						</table>
						<xsl:for-each select="T171:IDType">
							<xsl:for-each select="T3:Code">
								<table border="0" width="100%">
									<xsl:variable name="altova:CurrContextGrid_95" select="."/>
									<tbody>
										<tr>
											<td style="width:250px; " valign="top">
												<div>
													<span>
														<xsl:text>Вид</xsl:text>
													</span>
													<span style="font-weight:bold; ">
														<xsl:text>:</xsl:text>
													</span>
												</div>
											</td>
											<td valign="top">
												<xsl:apply-templates/>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
						</xsl:for-each>
						<xsl:for-each select="T171:IDNumber">
							<table border="0" width="100%">
								<xsl:variable name="altova:CurrContextGrid_96" select="."/>
								<tbody>
									<tr>
										<td style="width:250px; " valign="top">
											<div>
												<span>
													<xsl:text>Номер на документ</xsl:text>
												</span>
												<span style="font-weight:bold; ">
													<xsl:text>:</xsl:text>
												</span>
											</div>
										</td>
										<td valign="top">
											<xsl:apply-templates/>
										</td>
									</tr>
								</tbody>
							</table>
						</xsl:for-each>
						<xsl:for-each select="T171:Country">
							<xsl:for-each select="T3:Code">
								<table border="0" width="100%">
									<xsl:variable name="altova:CurrContextGrid_97" select="."/>
									<tbody>
										<tr>
											<td style="width:250px; " valign="top">
												<div>
													<span>
														<xsl:text>Държава издала документа</xsl:text>
													</span>
													<span style="font-weight:bold; ">
														<xsl:text>:</xsl:text>
													</span>
												</div>
											</td>
											<td valign="top">
												<xsl:apply-templates/>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
						</xsl:for-each>
						<xsl:for-each select="T171:IssueDate">
							<table border="0" width="100%">
								<xsl:variable name="altova:CurrContextGrid_98" select="."/>
								<tbody>
									<tr>
										<td style="width:250px; " valign="top">
											<div>
												<span>
													<xsl:text>Дата на издаване</xsl:text>
												</span>
												<span style="font-weight:bold; ">
													<xsl:text>:</xsl:text>
												</span>
											</div>
										</td>
										<td valign="top">
											<xsl:apply-templates/>
										</td>
									</tr>
								</tbody>
							</table>
						</xsl:for-each>
						<xsl:for-each select="T171:ExpiryDate">
							<table border="0" width="100%">
								<xsl:variable name="altova:CurrContextGrid_99" select="."/>
								<tbody>
									<tr>
										<td style="width:250px; " valign="top">
											<div>
												<span>
													<xsl:text>Дата на валидност</xsl:text>
												</span>
												<span style="font-weight:bold; ">
													<xsl:text>:</xsl:text>
												</span>
											</div>
										</td>
										<td valign="top">
											<xsl:apply-templates/>
										</td>
									</tr>
								</tbody>
							</table>
						</xsl:for-each>
					</xsl:for-each>
				</xsl:when>
				<xsl:otherwise/>
			</xsl:choose>
		</xsl:for-each>
		<xsl:for-each select="T25:CountrySubject">
			<table border="0" width="100%">
				<xsl:variable name="altova:CurrContextGrid_100" select="."/>
				<tbody>
					<tr>
						<td style="width:250px; " valign="top">
							<div>
								<span style="font-weight:bold; text-decoration:underline; ">
									<xsl:text>Държава</xsl:text>
								</span>
							</div>
						</td>
						<td valign="top">
							<xsl:for-each select="T3:Code">
								<span>
									<xsl:text>Код: </xsl:text>
								</span>
								<xsl:apply-templates/>
							</xsl:for-each>
						</td>
						<td style="width:100px; " valign="top"/>
					</tr>
				</tbody>
			</table>
		</xsl:for-each>
		<xsl:if test="string-length(T25:Communications)&gt;0">
			<div style="font-weight:bold; text-align:left; ">
				<span style="text-decoration:underline; ">
					<xsl:text>Комуникации</xsl:text>
				</span>
			</div>
		</xsl:if>
		<xsl:for-each select="T25:Communications">
			<table border="0" width="100%">
				<xsl:variable name="altova:CurrContextGrid_101" select="."/>
				<tbody>
					<tr>
						<td style="width:250px; " valign="top">
							<div style="font-weight:bold; ">
								<xsl:for-each select="T28:Type">
									<xsl:for-each select="T3:Code">
										<span>
											<xsl:text>Код: </xsl:text>
										</span>
										<xsl:apply-templates/>
									</xsl:for-each>
								</xsl:for-each>
							</div>
						</td>
						<td valign="top">
							<xsl:for-each select="T28:Value">
								<xsl:apply-templates/>
							</xsl:for-each>
						</td>
						<td style="text-align:right; width:100px; " valign="top">
							<xsl:for-each select="E:EntryTime">
								<span style="font-size:x-small; font-style:italic; ">
									<xsl:variable name="altova:seqContentStrings_102">
										<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
										<xsl:text> </xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
										<xsl:text>:</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
										<xsl:text>:</xsl:text>
										<xsl:choose>
											<xsl:when test="contains(string(string(.)), 'Z')">
												<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
											</xsl:when>
											<xsl:when test="contains(string(string(.)), '+')">
												<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
											</xsl:when>
											<xsl:when test="contains(substring(string(string(.)), 18), '-')">
												<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:variable>
									<xsl:variable name="altova:sContent_102" select="string($altova:seqContentStrings_102)"/>
									<xsl:value-of select="$altova:sContent_102"/>
								</span>
							</xsl:for-each>
						</td>
					</tr>
				</tbody>
			</table>
		</xsl:for-each>
		<xsl:if test="string-length(T25:Addresses)&gt;0">
			<div style="font-weight:bold; text-align:left; ">
				<span style="text-decoration:underline; ">
					<xsl:text>Адреси</xsl:text>
				</span>
			</div>
		</xsl:if>
		<xsl:for-each select="T25:Addresses">
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
				<xsl:variable name="altova:CurrContextGrid_103" select="."/>
				<tbody>
					<tr>
						<td valign="top">
							<xsl:for-each select="T8:AddressType">
								<xsl:for-each select="T3:Code">
									<span style="text-decoration:underline; ">
										<xsl:text>Вид на адреса (код): </xsl:text>
									</span>
									<span style="text-decoration:underline; ">
										<xsl:apply-templates/>
									</span>
								</xsl:for-each>
							</xsl:for-each>
						</td>
						<td style="text-align:right; width:100px; " valign="top">
							<xsl:for-each select="E:EntryTime">
								<span style="font-size:x-small; font-style:italic; ">
									<xsl:variable name="altova:seqContentStrings_104">
										<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
										<xsl:text> </xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
										<xsl:text>:</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
										<xsl:text>:</xsl:text>
										<xsl:choose>
											<xsl:when test="contains(string(string(.)), 'Z')">
												<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
											</xsl:when>
											<xsl:when test="contains(string(string(.)), '+')">
												<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
											</xsl:when>
											<xsl:when test="contains(substring(string(string(.)), 18), '-')">
												<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:variable>
									<xsl:variable name="altova:sContent_104" select="string($altova:seqContentStrings_104)"/>
									<xsl:value-of select="$altova:sContent_104"/>
								</span>
							</xsl:for-each>
						</td>
					</tr>
				</tbody>
			</table>
			<table border="0" width="100%">
				<xsl:variable name="altova:CurrContextGrid_105" select="."/>
				<tbody>
					<tr>
						<td style="width:250px; " valign="top">
							<div>
								<span>
									<xsl:text>Населено място</xsl:text>
								</span>
							</div>
						</td>
						<td valign="top">
							<xsl:for-each select="T8:Country">
								<xsl:for-each select="T3:Code">
									<span>
										<xsl:text>Код на държава: </xsl:text>
									</span>
									<xsl:apply-templates/>
								</xsl:for-each>
							</xsl:for-each>
							<xsl:for-each select="T8:ForeignLocation">
								<span>
									<xsl:text>, населено място в чужбина: </xsl:text>
								</span>
								<xsl:apply-templates/>
							</xsl:for-each>
							<xsl:for-each select="T8:Location">
								<xsl:for-each select="T3:Code">
									<span>
										<xsl:text>, населено място в България (код от ЕКАТТЕ): </xsl:text>
									</span>
									<xsl:apply-templates/>
								</xsl:for-each>
							</xsl:for-each>
							<xsl:for-each select="T8:Region">
								<xsl:for-each select="T3:Code">
									<span>
										<xsl:text>, район (код от ЕКАТТЕ): </xsl:text>
									</span>
									<xsl:apply-templates/>
								</xsl:for-each>
							</xsl:for-each>
						</td>
					</tr>
				</tbody>
			</table>
			<table border="0" width="100%">
				<xsl:variable name="altova:CurrContextGrid_106" select="."/>
				<tbody>
					<tr>
						<td style="width:250px; " valign="top">
							<div>
								<span>
									<xsl:text>Описание</xsl:text>
								</span>
							</div>
						</td>
						<td valign="top">
							<xsl:for-each select="T8:Street">
								<span>
									<xsl:text>ул./бул./ж.к : </xsl:text>
								</span>
								<xsl:apply-templates/>
							</xsl:for-each>
							<xsl:for-each select="T8:StreetNumber">
								<span>
									<xsl:text>, №: </xsl:text>
								</span>
								<xsl:apply-templates/>
							</xsl:for-each>
							<xsl:for-each select="T8:Building">
								<span>
									<xsl:text>, </xsl:text>
								</span>
								<xsl:apply-templates/>
							</xsl:for-each>
							<xsl:for-each select="T8:Entrance">
								<span>
									<xsl:text>, вх. </xsl:text>
								</span>
								<xsl:apply-templates/>
							</xsl:for-each>
							<xsl:for-each select="T8:Floor">
								<span>
									<xsl:text>, ет. </xsl:text>
								</span>
								<xsl:apply-templates/>
							</xsl:for-each>
							<xsl:for-each select="T8:Apartment">
								<span>
									<xsl:text>, ап. </xsl:text>
								</span>
								<xsl:apply-templates/>
							</xsl:for-each>
							<xsl:for-each select="T8:PostalCode">
								<span>
									<xsl:text>, п.код. </xsl:text>
								</span>
								<xsl:apply-templates/>
							</xsl:for-each>
							<xsl:for-each select="T8:PostalBox">
								<span>
									<xsl:text>, пощ. кут. </xsl:text>
								</span>
								<xsl:apply-templates/>
							</xsl:for-each>
						</td>
					</tr>
				</tbody>
			</table>
		</xsl:for-each>
		<xsl:for-each select="T25:Remark">
			<span style="font-weight:bold; ">
				<xsl:text>Забележки:</xsl:text>
			</span>
			<span>
				<xsl:text>&#160;</xsl:text>
			</span>
			<xsl:apply-templates/>
		</xsl:for-each>
	</xsl:template>
</xsl:stylesheet>
