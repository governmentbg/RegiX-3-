<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:common="http://egov.bg/RegiX/AV/TR" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:ns1="http://egov.bg/RegiX/AV/TR/ValidUICResponse" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.0 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:decimal-format name="format1" grouping-separator=" " decimal-separator=","/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<xsl:for-each select="ns1:ValidUICResponse">
						<h3 align="center">
							<span>
								<xsl:text>Агенция по вписванията</xsl:text>
							</span>
							<br/>
							<span>
								<xsl:text>Търговски регистър</xsl:text>
							</span>
						</h3>
						<h2 align="center">
							<span>
								<xsl:text>Справка за валидност на ЕИК номер</xsl:text>
							</span>
						</h2>
						<xsl:choose>
							<xsl:when test="string-length(  ns1:Status  ) = 0 and  string-length( ns1:UIC ) = 0  and 
 string-length(  ns1:LegalForm  ) = 0  and  string-length(  ns1:Company  )  = 0">
								<span>
									<xsl:text>Не са намерени данни в регистъра по зададения ЕИК номер.</xsl:text>
								</span>
							</xsl:when>
							<xsl:otherwise>
								<br/>
								<table border="0" width="100%">
									<tbody>
										<tr>
											<td width="172">
												<span style="font-style:italic; ">
													<xsl:text>Дружество</xsl:text>
												</span>
											</td>
											<td>
												<xsl:for-each select="ns1:Company">
													<xsl:apply-templates/>
												</xsl:for-each>
												<xsl:for-each select="ns1:LegalForm">
													<xsl:for-each select="common:LegalFormAbbr">
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:for-each>
											</td>
										</tr>
										<tr>
											<td width="172">
												<span style="font-style:italic; ">
													<xsl:text>ЕИК</xsl:text>
												</span>
											</td>
											<td>
												<xsl:for-each select="ns1:UIC">
													<xsl:apply-templates/>
												</xsl:for-each>
											</td>
										</tr>
										<tr>
											<td width="172">
												<span style="font-style:italic; ">
													<xsl:text>Статус</xsl:text>
												</span>
											</td>
											<td>
												<xsl:for-each select="ns1:Status">
													<xsl:apply-templates/>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:otherwise>
						</xsl:choose>
						<br/>
						<xsl:for-each select="ns1:DataValidForDate">
							<span>
								<xsl:text>Дата на валидност на данните: </xsl:text>
							</span>
							<span>
								<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
								<xsl:text>.</xsl:text>
								<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
								<xsl:text>.</xsl:text>
								<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
								<xsl:text> </xsl:text>
								<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
								<xsl:text>:</xsl:text>
								<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
								<xsl:text>:</xsl:text>
								<xsl:choose>
									<xsl:when test="contains(string(string(.)), 'Z')">
										<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
									</xsl:when>
									<xsl:when test="contains(string(string(.)), '+')">
										<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
									</xsl:when>
									<xsl:when test="contains(substring(string(string(.)), 18), '-')">
										<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
									</xsl:otherwise>
								</xsl:choose>
							</span>
						</xsl:for-each>
					</xsl:for-each>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
