<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:common="http://egov.bg/RegiX/AV/TR" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:n1="http://egov.bg/RegiX/AV/TR/SearchParticipationInCompaniesResponse" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.0 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<xsl:for-each select="n1:SearchParticipationInCompaniesResponse">
						<br/>
						<h3 align="center">
							<span>
								<xsl:text>Агенция по вписванията</xsl:text>
							</span>
							<br/>
							<span>
								<xsl:text>Търговски регистър</xsl:text>
							</span>
						</h3>
						<h2 align="center">
							<span>
								<xsl:text>Справка по физическо лице за участие в търговски дружества</xsl:text>
							</span>
						</h2>
						<xsl:choose>
							<xsl:when test="n1:IsFound = &apos;false&apos;">
								<span>
									<xsl:text>Не са намерени данни в регистъра за търговски дружества, в които лицето участва.</xsl:text>
								</span>
							</xsl:when>
							<xsl:otherwise>
								<xsl:for-each select="n1:PersonInformation">
									<span style="font-weight:bold; ">
										<xsl:text>Данни за лицето: </xsl:text>
									</span>
									<xsl:for-each select="common:Name">
										<span style="font-weight:bold; ">
											<xsl:apply-templates/>
										</span>
									</xsl:for-each>
									<xsl:for-each select="common:Indent">
										<span style="font-weight:bold; ">
											<xsl:text>, ЕГН: </xsl:text>
										</span>
										<span style="font-weight:bold; ">
											<xsl:apply-templates/>
										</span>
									</xsl:for-each>
								</xsl:for-each>
								<br/>
								<xsl:choose>
									<xsl:when test="string-length(  n1:CompanyParticipation  ) &gt; 0">
										<xsl:for-each select="n1:CompanyParticipation">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Участия в търговски дружества:</xsl:text>
											</span>
											<br/>
											<table border="1">
												<thead>
													<tr>
														<th width="401">
															<span>
																<xsl:text>Търговско дружество</xsl:text>
															</span>
														</th>
														<th>
															<span>
																<xsl:text>Роля</xsl:text>
															</span>
														</th>
													</tr>
												</thead>
												<tbody>
													<xsl:for-each select="common:Company">
														<tr>
															<td width="401">
																<xsl:for-each select="common:CompanyName">
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="common:LegalForm">
																	<xsl:for-each select="common:LegalFormAbbr">
																		<span>
																			<xsl:text>&#160;</xsl:text>
																		</span>
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:for-each>
																<xsl:for-each select="common:EIK">
																	<span>
																		<xsl:text>, ЕИК: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
															</td>
															<td>
																<xsl:for-each select="common:Fields">
																	<xsl:for-each select="common:Field">
																		<xsl:apply-templates/>
																		<br/>
																	</xsl:for-each>
																</xsl:for-each>
															</td>
														</tr>
													</xsl:for-each>
												</tbody>
											</table>
										</xsl:for-each>
									</xsl:when>
									<xsl:otherwise>
										<span>
											<xsl:text>Не са намерени данни в регистъра за търговски дружества, в които лицето участва.</xsl:text>
										</span>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:otherwise>
						</xsl:choose>
						<br/>
						<xsl:if test="count( n1:DataValidForDate ) &gt; 0">
							<span>
								<xsl:text>Дата на валидност на данните: </xsl:text>
							</span>
							<xsl:for-each select="n1:DataValidForDate">
								<span>
									<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
									<xsl:text>.</xsl:text>
									<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00')"/>
									<xsl:text>.</xsl:text>
									<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
									<xsl:text> </xsl:text>
									<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00')"/>
									<xsl:text>:</xsl:text>
									<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00')"/>
									<xsl:text>:</xsl:text>
									<xsl:choose>
										<xsl:when test="contains(string(string(.)), 'Z')">
											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00')"/>
										</xsl:when>
										<xsl:when test="contains(string(string(.)), '+')">
											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00')"/>
										</xsl:when>
										<xsl:when test="contains(substring(string(string(.)), 18), '-')">
											<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00')"/>
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00')"/>
										</xsl:otherwise>
									</xsl:choose>
								</span>
							</xsl:for-each>
						</xsl:if>
						<br/>
					</xsl:for-each>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
