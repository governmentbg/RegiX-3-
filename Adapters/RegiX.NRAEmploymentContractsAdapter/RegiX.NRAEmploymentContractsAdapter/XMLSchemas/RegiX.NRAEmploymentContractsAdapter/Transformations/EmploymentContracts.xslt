<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:common="http://egov.bg/RegiX/NRA/EmploymentContracts" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:n1="http://egov.bg/RegiX/NRA/EmploymentContracts/Response" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.0 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<xsl:for-each select="n1:EmploymentContractsResponse">
						<xsl:choose>
							<xsl:when test="n1:Status/common:Code =0">
								<div align="center">
									<span style="font-weight:bold; ">
										<xsl:text>Справка за трудови договори</xsl:text>
									</span>
								</div>
								<br/>
								<xsl:for-each select="n1:EContracts">
									<table border="1" cellpadding="0" cellspacing="0">
										<thead>
											<tr style="padding:5px; ">
												<th>
													<span>
														<xsl:text>ЕИК</xsl:text>
													</span>
												</th>
												<th>
													<span>
														<xsl:text>Наименование</xsl:text>
													</span>
												</th>
												<th>
													<span>
														<xsl:text>ЕГН</xsl:text>
													</span>
												</th>
												<th>
													<span>
														<xsl:text>Имена на лицето</xsl:text>
													</span>
												</th>
												<th>
													<span>
														<xsl:text>Начална дата</xsl:text>
													</span>
												</th>
												<th>
													<span>
														<xsl:text>Дата на последна промяна</xsl:text>
													</span>
												</th>
												<th>
													<span>
														<xsl:text>Крайна дата</xsl:text>
													</span>
												</th>
												<th>
													<span>
														<xsl:text>Основание</xsl:text>
													</span>
												</th>
												<th>
													<span>
														<xsl:text>Изпитателен период</xsl:text>
													</span>
												</th>
												<th>
													<span>
														<xsl:text>КИД</xsl:text>
													</span>
												</th>
												<th>
													<span>
														<xsl:text>НКПД</xsl:text>
													</span>
												</th>
												<th>
													<span>
														<xsl:text>Заплата</xsl:text>
													</span>
												</th>
												<th>
													<span>
														<xsl:text>Основание за прекратяване</xsl:text>
													</span>
												</th>
											</tr>
										</thead>
										<tbody>
											<xsl:for-each select="common:EContract">
												<tr style="padding:5px; ">
													<td>
														<xsl:choose>
															<xsl:when test="string-length(common:ContractorBulstat )&gt;0">
																<xsl:for-each select="common:ContractorBulstat">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</td>
													<td>
														<xsl:choose>
															<xsl:when test="string-length( common:ContractorName )&gt;0">
																<xsl:for-each select="common:ContractorName">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</td>
													<td>
														<xsl:choose>
															<xsl:when test="string-length( common:IndividualEIK )&gt;0">
																<xsl:for-each select="common:IndividualEIK">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</td>
													<td>
														<xsl:choose>
															<xsl:when test="string-length( common:IndividualNames )&gt;0">
																<xsl:for-each select="common:IndividualNames">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</td>
													<td>
														<xsl:choose>
															<xsl:when test="string-length( common:StartDate )&gt;0">
																<xsl:for-each select="common:StartDate">
																	<span>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
																	</span>
																	<span>
																		<xsl:text> г.</xsl:text>
																	</span>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</td>
													<td>
														<xsl:choose>
															<xsl:when test="string-length( common:LastAmendDate )&gt;0">
																<xsl:for-each select="common:LastAmendDate">
																	<span>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
																	</span>
																	<span>
																		<xsl:text> г.</xsl:text>
																	</span>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</td>
													<td>
														<xsl:choose>
															<xsl:when test="string-length( common:EndDate )&gt;0">
																<xsl:for-each select="common:EndDate">
																	<span>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
																	</span>
																	<span>
																		<xsl:text> г.</xsl:text>
																	</span>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</td>
													<td>
														<xsl:choose>
															<xsl:when test="string-length( common:Reason  )&gt;0">
																<xsl:for-each select="common:Reason">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</td>
													<td>
														<xsl:choose>
															<xsl:when test="string-length( common:TimeLimit )&gt;0">
																<xsl:for-each select="common:TimeLimit">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</td>
													<td>
														<xsl:choose>
															<xsl:when test="string-length( common:EcoCode )&gt;0">
																<xsl:for-each select="common:EcoCode">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</td>
													<td>
														<xsl:choose>
															<xsl:when test="string-length( common:ProfessionCode )&gt;0">
																<xsl:for-each select="common:ProfessionCode">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</td>
													<td>
														<xsl:choose>
															<xsl:when test="string-length( common:Remuneration )&gt;0">
																<xsl:for-each select="common:Remuneration">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</td>
													<td>
														<xsl:for-each select="common:LastTermId">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
												</tr>
											</xsl:for-each>
										</tbody>
									</table>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<xsl:for-each select="n1:Status">
									<span>
										<xsl:text>Статус</xsl:text>
									</span>
									<xsl:for-each select="common:Code">
										<br/>
										<span>
											<xsl:text>Код: </xsl:text>
										</span>
										<xsl:apply-templates/>
									</xsl:for-each>
									<xsl:for-each select="common:Message">
										<br/>
										<span>
											<xsl:text>Съобщение: </xsl:text>
										</span>
										<xsl:apply-templates/>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:for-each>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
