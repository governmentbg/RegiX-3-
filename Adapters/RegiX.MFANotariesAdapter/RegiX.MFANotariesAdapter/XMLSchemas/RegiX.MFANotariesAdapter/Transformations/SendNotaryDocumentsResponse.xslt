<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:n1="http://egov.bg/RegiX/MFA/Notaries/SendNotaryDocumentsResponse" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.0 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:decimal-format name="format1" grouping-separator=" " decimal-separator=","/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<h3 align="center">
						<span>
							<xsl:text>Министерство на външните работи</xsl:text>
						</span>
					</h3>
					<br/>
					<h2 align="center">
						<span>
							<xsl:text>Резултат от удостоверяване на заверки</xsl:text>
						</span>
					</h2>
					<table border="1">
						<tbody>
							<tr>
								<th>
									<span>
										<xsl:text>Статус</xsl:text>
									</span>
								</th>
								<xsl:for-each select="n1:SendNotaryDocumentsResponse">
									<td>
										<xsl:for-each select="n1:StatusName">
											<xsl:apply-templates/>
										</xsl:for-each>
									</td>
								</xsl:for-each>
							</tr>
							<tr>
								<th>
									<span>
										<xsl:text>Тип на заверка</xsl:text>
									</span>
								</th>
								<xsl:for-each select="n1:SendNotaryDocumentsResponse">
									<td>
										<xsl:for-each select="n1:AuthenticationTypeName">
											<xsl:apply-templates/>
										</xsl:for-each>
									</td>
								</xsl:for-each>
							</tr>
							<tr>
								<th>
									<span>
										<xsl:text>Номер на заверка</xsl:text>
									</span>
								</th>
								<xsl:for-each select="n1:SendNotaryDocumentsResponse">
									<td>
										<xsl:for-each select="n1:AuthenticationNumber">
											<xsl:apply-templates/>
										</xsl:for-each>
									</td>
								</xsl:for-each>
							</tr>
							<tr>
								<th>
									<span>
										<xsl:text>Дата на заверка</xsl:text>
									</span>
								</th>
								<xsl:for-each select="n1:SendNotaryDocumentsResponse">
									<td>
										<xsl:for-each select="n1:AuthenticationDate">
											<span>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
												<xsl:text>.</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
												<xsl:text>.</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
											</span>
											<span>
												<xsl:text> г.</xsl:text>
											</span>
										</xsl:for-each>
									</td>
								</xsl:for-each>
							</tr>
							<tr>
								<th>
									<span>
										<xsl:text>Консулска служба</xsl:text>
									</span>
								</th>
								<xsl:for-each select="n1:SendNotaryDocumentsResponse">
									<td>
										<xsl:for-each select="n1:ConsulName">
											<xsl:apply-templates/>
										</xsl:for-each>
									</td>
								</xsl:for-each>
							</tr>
							<tr>
								<th>
									<span>
										<xsl:text>Заявител</xsl:text>
									</span>
								</th>
								<xsl:for-each select="n1:SendNotaryDocumentsResponse">
									<td>
										<xsl:for-each select="n1:Name">
											<xsl:apply-templates/>
										</xsl:for-each>
									</td>
								</xsl:for-each>
							</tr>
							<tr>
								<th>
									<span>
										<xsl:text>Бележки</xsl:text>
									</span>
								</th>
								<xsl:for-each select="n1:SendNotaryDocumentsResponse">
									<td>
										<xsl:for-each select="n1:Remarks">
											<xsl:apply-templates/>
										</xsl:for-each>
									</td>
								</xsl:for-each>
							</tr>
							<tr>
								<th>
									<span>
										<xsl:text>Дата на изготвяне на резултат</xsl:text>
									</span>
								</th>
								<xsl:for-each select="n1:SendNotaryDocumentsResponse">
									<td>
										<xsl:for-each select="n1:ResultDate">
											<span>
												<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
												<xsl:text>-</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
												<xsl:text>-</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
												<xsl:text> </xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
												<xsl:text>:</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
												<xsl:text>:</xsl:text>
												<xsl:choose>
													<xsl:when test="contains(string(string(.)), 'Z')">
														<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
													</xsl:when>
													<xsl:when test="contains(string(string(.)), '+')">
														<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
													</xsl:when>
													<xsl:when test="contains(substring(string(string(.)), 18), '-')">
														<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
													</xsl:when>
													<xsl:otherwise>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
													</xsl:otherwise>
												</xsl:choose>
												<xsl:text> UTC</xsl:text>
											</span>
										</xsl:for-each>
									</td>
								</xsl:for-each>
							</tr>
							<tr>
								<th>
									<span>
										<xsl:text>Резултат - съобщение</xsl:text>
									</span>
								</th>
								<xsl:for-each select="n1:SendNotaryDocumentsResponse">
									<td>
										<xsl:for-each select="n1:ResultMessage">
											<xsl:apply-templates/>
										</xsl:for-each>
									</td>
								</xsl:for-each>
							</tr>
							<tr>
								<th>
									<span>
										<xsl:text>Резултат</xsl:text>
									</span>
								</th>
								<xsl:for-each select="n1:SendNotaryDocumentsResponse">
									<td>
										<xsl:for-each select="n1:Result">
											<xsl:choose>
												<xsl:when test=". = &apos;true&apos;">
													<span>
														<xsl:text>да</xsl:text>
													</span>
												</xsl:when>
												<xsl:when test=". = &apos;false&apos;">
													<span>
														<xsl:text>не</xsl:text>
													</span>
												</xsl:when>
											</xsl:choose>
										</xsl:for-each>
									</td>
								</xsl:for-each>
							</tr>
						</tbody>
					</table>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
