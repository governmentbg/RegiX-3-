<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:common="http://egov.bg/RegiX/AM/REZMA" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:n1="http://egov.bg/RegiX/AM/REZMA/ExciseObligationsResponse" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.0 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:decimal-format name="format1" grouping-separator=" " decimal-separator=","/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<br/>
					<xsl:for-each select="n1:ExciseObligationsResponse">
						<h3 style="text-align:center; ">
							<span>
								<xsl:text>Агенция митници</xsl:text>
							</span>
						</h3>
						<h3 style="text-align:center; ">
							<span>
								<xsl:text>Регистър на задълженията към митническата администрация (РЕЗМА)</xsl:text>
							</span>
						</h3>
						<h2 style="text-align:center; ">
							<span>
								<xsl:text>Справка за акцизни задължения</xsl:text>
							</span>
						</h2>
						<xsl:choose>
							<xsl:when test="count( n1:Obligations ) = 0  and  count(n1:UIN) = 0 and count( n1:Name ) = 0">
								<span>
									<xsl:text>Няма намерени данни в регистъра!</xsl:text>
								</span>
							</xsl:when>
							<xsl:otherwise>
								<h4 align="center">
									<xsl:for-each select="n1:Name">
										<xsl:apply-templates/>
									</xsl:for-each>
									<xsl:for-each select="n1:UIN">
										<span>
											<xsl:text> ,</xsl:text>
										</span>
										<xsl:apply-templates/>
									</xsl:for-each>
									<br/>
								</h4>
								<xsl:for-each select="n1:Obligations">
									<xsl:for-each select="common:Obligation">
										<br/>
										<span>
											<xsl:text>Задължение </xsl:text>
										</span>
										<span>
											<xsl:value-of select="position()"/>
										</span>
										<span>
											<xsl:text> от </xsl:text>
										</span>
										<span>
											<xsl:value-of select="count(../common:Obligation)"/>
										</span>
										<table border="1" width="100%">
											<tbody>
												<tr>
													<td align="center">
														<span style="font-weight:bold; ">
															<xsl:text>Детайли</xsl:text>
														</span>
													</td>
													<td align="center">
														<span style="font-weight:bold; ">
															<xsl:text>Сума на задължение</xsl:text>
														</span>
													</td>
													<td align="center">
														<span style="font-weight:bold; ">
															<xsl:text>Сума погасяване</xsl:text>
														</span>
													</td>
													<td align="center">
														<span style="font-weight:bold; ">
															<xsl:text>Погасено тотал</xsl:text>
														</span>
													</td>
													<td align="center">
														<span style="font-weight:bold; ">
															<xsl:text>Разлика</xsl:text>
														</span>
													</td>
												</tr>
												<tr>
													<td>
														<table border="0" width="100%">
															<tbody>
																<tr>
																	<td>
																		<span style="font-size:small; ">
																			<xsl:text>Вид </xsl:text>
																		</span>
																	</td>
																	<td>
																		<xsl:for-each select="common:TypeObligation">
																			<xsl:apply-templates/>
																		</xsl:for-each>
																	</td>
																</tr>
																<tr>
																	<td>
																		<span style="font-size:small; ">
																			<xsl:text>МУ</xsl:text>
																		</span>
																	</td>
																	<td>
																		<xsl:for-each select="common:MU">
																			<xsl:apply-templates/>
																		</xsl:for-each>
																		<xsl:for-each select="common:CodeMU">
																			<span>
																				<xsl:text> ,</xsl:text>
																			</span>
																			<xsl:apply-templates/>
																		</xsl:for-each>
																	</td>
																</tr>
																<tr>
																	<td>
																		<span style="font-size:small; ">
																			<xsl:text>Документ</xsl:text>
																		</span>
																	</td>
																	<td>
																		<xsl:for-each select="common:Document">
																			<xsl:apply-templates/>
																		</xsl:for-each>
																	</td>
																</tr>
																<tr>
																	<td>
																		<span style="font-size:small; ">
																			<xsl:text>№ документ</xsl:text>
																		</span>
																	</td>
																	<td>
																		<xsl:for-each select="common:DocumentNumber">
																			<xsl:apply-templates/>
																		</xsl:for-each>
																	</td>
																</tr>
																<tr>
																	<td>
																		<span style="font-size:small; ">
																			<xsl:text>Дата на възникване</xsl:text>
																		</span>
																	</td>
																	<td>
																		<xsl:for-each select="common:CreationDate">
																			<span>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																				<xsl:text>.</xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																				<xsl:text>.</xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			</span>
																			<span>
																				<xsl:text> г.</xsl:text>
																			</span>
																		</xsl:for-each>
																	</td>
																</tr>
																<tr>
																	<td>
																		<span>
																			<xsl:text>Статус</xsl:text>
																		</span>
																	</td>
																	<td>
																		<xsl:for-each select="common:Status">
																			<xsl:apply-templates/>
																		</xsl:for-each>
																	</td>
																</tr>
															</tbody>
														</table>
														<xsl:if test="count(common:PayingDocument)&gt;0 or count(common:PayingDate)&gt;0">
															<br/>
															<table border="0" width="100%">
																<tbody>
																	<tr>
																		<td/>
																		<td>
																			<span style="font-weight:bold; ">
																				<xsl:text>Погасяване</xsl:text>
																			</span>
																		</td>
																	</tr>
																	<tr>
																		<td>
																			<span style="font-size:small; ">
																				<xsl:text>Документ</xsl:text>
																			</span>
																		</td>
																		<td>
																			<xsl:for-each select="common:PayingDocument">
																				<xsl:apply-templates/>
																			</xsl:for-each>
																		</td>
																	</tr>
																	<tr>
																		<td>
																			<span style="font-size:small; ">
																				<xsl:text>Дата на погасяване</xsl:text>
																			</span>
																		</td>
																		<td>
																			<xsl:for-each select="common:PayingDate">
																				<span>
																					<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																					<xsl:text>.</xsl:text>
																					<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																					<xsl:text>.</xsl:text>
																					<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																				</span>
																				<span>
																					<xsl:text> г.</xsl:text>
																				</span>
																			</xsl:for-each>
																		</td>
																	</tr>
																</tbody>
															</table>
														</xsl:if>
														<br/>
													</td>
													<td>
														<xsl:for-each select="common:ObligationAmount">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td>
														<xsl:for-each select="common:PayingAmount">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td>
														<xsl:for-each select="common:PayingTotal">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td>
														<xsl:for-each select="common:Difference">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
												</tr>
												<tr>
													<td>
														<span style="font-weight:bold; ">
															<xsl:text>Общо</xsl:text>
														</span>
													</td>
													<td>
														<span>
															<xsl:value-of select="sum(n1:Obligations/common:Obligation/common:ObligationAmount)"/>
														</span>
													</td>
													<td>
														<span>
															<xsl:value-of select="sum(n1:Obligations/common:Obligation/common:PayingAmount)"/>
														</span>
													</td>
													<td>
														<span>
															<xsl:value-of select="sum(n1:Obligations/common:Obligation/common:PayingTotal)"/>
														</span>
													</td>
													<td>
														<span>
															<xsl:value-of select="sum(n1:Obligations/common:Obligation/common:Difference)"/>
														</span>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:otherwise>
						</xsl:choose>
						<br/>
					</xsl:for-each>
					<br/>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
