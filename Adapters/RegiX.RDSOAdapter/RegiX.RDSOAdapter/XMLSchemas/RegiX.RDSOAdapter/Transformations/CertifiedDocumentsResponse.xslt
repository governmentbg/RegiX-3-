<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:common="http://egov.bg/RegiX/MOMN/RDSO" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:n1="http://egov.bg/RegiX/MOMN/RDSO/CertifiedDocumentsResponse" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.0 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:decimal-format name="format1" grouping-separator=" " decimal-separator=","/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<xsl:for-each select="n1:CertifiedDocumentsResponse">
						<br/>
						<h3 align="center">
							<span>
								<xsl:text>Министерство на образованието и науката</xsl:text>
							</span>
						</h3>
						<h3 align="center">
							<span>
								<xsl:text>Регистър на дипломи и свидетелства за завършено основно и средно образование и придобита степен на професионална квалификация</xsl:text>
							</span>
						</h3>
						<h2 align="center">
							<span>
								<xsl:text>Справка за вписани в регистъра заверки на образователни документи</xsl:text>
							</span>
							<xsl:choose>
								<xsl:when test="count( n1:GenerationTimeStamp ) &gt; 0">
									<span>
										<xsl:text> към дата </xsl:text>
									</span>
									<xsl:for-each select="n1:GenerationTimeStamp">
										<span>
											<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
											<xsl:text>.</xsl:text>
											<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
											<xsl:text>.</xsl:text>
											<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
										</span>
									</xsl:for-each>
								</xsl:when>
								<xsl:otherwise/>
							</xsl:choose>
							<span>
								<xsl:text>&#160;</xsl:text>
							</span>
						</h2>
						<xsl:choose>
							<xsl:when test="count( n1:CertifiedDocument ) &gt; 0">
								<xsl:for-each select="n1:CertifiedDocument">
									<br/>
									<span>
										<xsl:text>Документ </xsl:text>
									</span>
									<span>
										<xsl:value-of select="position()"/>
									</span>
									<span>
										<xsl:text> от </xsl:text>
									</span>
									<span>
										<xsl:value-of select="count(../n1:CertifiedDocument)"/>
									</span>
									<br/>
									<table border="1" width="100%">
										<tbody>
											<tr>
												<td>
													<span>
														<xsl:text>Идентификатор на документа; служебно поле</xsl:text>
													</span>
												</td>
												<td>
													<xsl:for-each select="common:intID">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
											</tr>
											<tr>
												<td>
													<xsl:choose>
														<xsl:when test="common:IDType = &apos;EGN&apos; or  common:IDType = &apos;ЕГН&apos;">
															<span>
																<xsl:text>ЕГН</xsl:text>
															</span>
														</xsl:when>
														<xsl:when test="common:IDType  = &apos;LNCh&apos; or  common:IDType = &apos;ЛНЧ&apos;">
															<span>
																<xsl:text>ЛНЧ</xsl:text>
															</span>
														</xsl:when>
														<xsl:when test="common:IDType  = &apos;IDN&apos; or  common:IDType = &apos;ИДН&apos;">
															<span>
																<xsl:text>Служебен номер на ученика / студента</xsl:text>
															</span>
														</xsl:when>
														<xsl:otherwise>
															<span>
																<xsl:text>Идентификатор на ученика</xsl:text>
															</span>
														</xsl:otherwise>
													</xsl:choose>
												</td>
												<td>
													<xsl:for-each select="common:intStudentID">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
											</tr>
											<tr>
												<td>
													<span>
														<xsl:text>Име на ученика</xsl:text>
													</span>
												</td>
												<td>
													<xsl:for-each select="common:vcName1">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
											</tr>
											<tr>
												<td>
													<span>
														<xsl:text>Презиме на ученика</xsl:text>
													</span>
												</td>
												<td>
													<xsl:for-each select="common:vcName2">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
											</tr>
											<tr>
												<td>
													<span>
														<xsl:text>Фамилия на ученика</xsl:text>
													</span>
												</td>
												<td>
													<xsl:for-each select="common:vcName3">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
											</tr>
											<tr>
												<td>
													<span>
														<xsl:text>Код на документа</xsl:text>
													</span>
												</td>
												<td>
													<xsl:for-each select="common:intDocumentType">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
											</tr>
											<tr>
												<td>
													<span>
														<xsl:text>Наименование на документа</xsl:text>
													</span>
												</td>
												<td>
													<xsl:for-each select="common:vcDocumentName">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
											</tr>
											<tr>
												<td>
													<span>
														<xsl:text>Серия на документа</xsl:text>
													</span>
												</td>
												<td>
													<xsl:for-each select="common:vcPrnSer">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
											</tr>
											<tr>
												<td>
													<span>
														<xsl:text>Номер на документа</xsl:text>
													</span>
												</td>
												<td>
													<xsl:for-each select="common:vcPrnNo">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
											</tr>
											<tr>
												<td>
													<span>
														<xsl:text>Регистрационен номер на документа</xsl:text>
													</span>
												</td>
												<td>
													<xsl:for-each select="common:vcRegNo">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
											</tr>
											<tr>
												<td>
													<span>
														<xsl:text>Дата на заверка на документа</xsl:text>
													</span>
												</td>
												<td>
													<xsl:for-each select="common:dtCertDate">
														<span>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<br/>
									<xsl:for-each select="common:DocumentImages">
										<br/>
										<xsl:if test="count(../.) &gt; 0">
											<span>
												<xsl:text>Диплома</xsl:text>
											</span>
										</xsl:if>
										<br/>
										<div>
											<xsl:for-each select="common:DocumentImage">
												<img height="900px">
													<xsl:attribute name="src">
														<xsl:if test="substring(string(concat(&quot;data:image/png;base64,&quot;, string(.))), 2, 1) = ':'">
															<xsl:text>file:///</xsl:text>
														</xsl:if>
														<xsl:value-of select="translate(string(concat(&quot;data:image/png;base64,&quot;, string(.))), '&#x5c;', '/')"/>
													</xsl:attribute>
													<xsl:attribute name="alt"/>
												</img>
												<br/>
												<br/>
											</xsl:for-each>
										</div>
									</xsl:for-each>
									<br/>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<span>
									<xsl:text>Няма намерени данни в Регистърът на дипломи и свидетелства за завършено основно и средно образование и придобита степен на професионална квалификация по търсените критерии.</xsl:text>
								</span>
							</xsl:otherwise>
						</xsl:choose>
						<br/>
					</xsl:for-each>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
