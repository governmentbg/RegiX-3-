<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:cm="http://egov.bg/RegiX/MTSP/NKPD" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:n1="http://egov.bg/RegiX/MTSP/NKPD/NKPDDataResponse" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.0 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:decimal-format name="format1" grouping-separator=" " decimal-separator=","/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<br/>
					<xsl:for-each select="n1:NKPDDataResponse">
						<br/>
						<br/>
						<h3 align="center">
							<span>
								<xsl:text>МТСП</xsl:text>
							</span>
						</h3>
						<h3 align="center">
							<span>
								<xsl:text>Национална класификация на професиите и длъжностите</xsl:text>
							</span>
						</h3>
						<h2 align="center">
							<span>
								<xsl:text>Справка за търсене на данни от класификатор НКПД по зададени критерии</xsl:text>
							</span>
						</h2>
						<br/>
						<h3 align="center">
							<xsl:for-each select="n1:VersionName">
								<span style="font-weight:bold; ">
									<xsl:apply-templates/>
								</span>
							</xsl:for-each>
						</h3>
						<h3 align="center">
							<xsl:for-each select="n1:ValidDate">
								<span>
									<xsl:text>Валидна от:&#160; </xsl:text>
								</span>
								<span>
									<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
									<xsl:text>.</xsl:text>
									<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
									<xsl:text>.</xsl:text>
									<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
								</span>
								<span>
									<xsl:text> г.</xsl:text>
								</span>
							</xsl:for-each>
						</h3>
						<xsl:choose>
							<xsl:when test="count( n1:NKPD )=0">
								<span>
									<xsl:text>Няма намерени данни в регистъра! </xsl:text>
								</span>
							</xsl:when>
							<xsl:otherwise/>
						</xsl:choose>
						<br/>
						<br/>
						<table border="1">
							<thead>
								<tr>
									<td align="center" colspan="2">
										<span style="font-weight:bold; ">
											<xsl:text>Код</xsl:text>
										</span>
									</td>
									<td align="center">
										<span style="font-weight:bold; ">
											<xsl:text>Наименование</xsl:text>
										</span>
									</td>
								</tr>
							</thead>
							<tbody>
								<xsl:for-each select="n1:NKPD">
									<xsl:sort select="substring( cm:ClassCode ,  1 ,  1 ) = 0" data-type="text" order="ascending"/>
									<xsl:sort select="cm:ClassCode" data-type="text" order="ascending"/>
									<xsl:sort select="cm:SubclassCode" data-type="text" order="ascending"/>
									<xsl:sort select="cm:GroupCode" data-type="text" order="ascending"/>
									<xsl:sort select="cm:IndividualGroupCode" data-type="text" order="ascending"/>
									<xsl:sort select="substring( cm:Code ,  5 ,  4 )" data-type="text" order="ascending"/>
									<tr>
										<td>
											<xsl:choose>
												<xsl:when test="string-length( cm:Code ) &gt; 5">
													<xsl:for-each select="cm:Code">
														<span>
															<xsl:value-of select="substring(  .  ,  0 , 5 )"/>
														</span>
													</xsl:for-each>
												</xsl:when>
												<xsl:otherwise>
													<xsl:for-each select="cm:Code">
														<span style="font-weight:bold; ">
															<xsl:value-of select="substring( . ,  0 , 5 )"/>
														</span>
													</xsl:for-each>
												</xsl:otherwise>
											</xsl:choose>
										</td>
										<td>
											<xsl:if test="string-length( cm:Code ) &gt; 4">
												<xsl:for-each select="cm:Code">
													<span>
														<xsl:value-of select="substring(. ,  5 )"/>
													</span>
												</xsl:for-each>
											</xsl:if>
										</td>
										<td>
											<xsl:choose>
												<xsl:when test="cm:Type = &quot;nkpd&quot;">
													<xsl:for-each select="cm:Name">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:when>
												<xsl:otherwise>
													<xsl:for-each select="cm:Name">
														<span style="font-weight:bold; ">
															<xsl:apply-templates/>
														</span>
													</xsl:for-each>
												</xsl:otherwise>
											</xsl:choose>
										</td>
									</tr>
								</xsl:for-each>
							</tbody>
						</table>
						<br/>
					</xsl:for-each>
					<br/>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
