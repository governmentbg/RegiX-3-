// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.19886
//    <NameSpace>TechnoLogica.RegiX.GitActualDeclarationAdapter</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net40</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace TechnoLogica.RegiX.GitActualDeclarationAdapter {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.Generic;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute("ActualDeclarationResponse", Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=false)]
    public partial class RZZBUTDeclaration {
        
        private string inspectionNameField;
        
        private string incomingNumberField;
        
        private int declaredYearField;
        
        private bool declaredYearFieldSpecified;
        
        private System.DateTime issueDateField;
        
        private bool issueDateFieldSpecified;
        
        private string employerEntityNameField;
        
        private string employerIdentifierField;
        
        private string employerPersonFullNameField;
        
        private bool employerHiringField;
        
        private bool employerHiringFieldSpecified;
        
        private bool employerTemporaryWorkField;
        
        private bool employerTemporaryWorkFieldSpecified;
        
        private AddressDetails headquarterAddressField;
        
        private PersonData contactPersonField;
        
        private List<EnterpriseActivity> enterpriseActivityField;
        
        private string enterpriseNameField;
        
        private AddressDetails enterpriseAddressField;
        
        private PersonData enterpriseManagerField;
        
        private int enterpriseStaffSizeIntervalField;
        
        private bool enterpriseStaffSizeIntervalFieldSpecified;
        
        private bool enterpriseUnitAvailableField;
        
        private bool enterpriseUnitAvailableFieldSpecified;
        
        private List<EnterpriseUnit> enterpriseUnitField;
        
        private List<RepresentativeData> representativeDetailsField;
        
        private int staffCountField;
        
        private bool staffCountFieldSpecified;
        
        private int hiredEmployeesCountField;
        
        private bool hiredEmployeesCountFieldSpecified;
        
        private int hiredWomenCountField;
        
        private bool hiredWomenCountFieldSpecified;
        
        private int hiredMenCountField;
        
        private bool hiredMenCountFieldSpecified;
        
        private int otherEntityEmployeesCountField;
        
        private bool otherEntityEmployeesCountFieldSpecified;
        
        private int otherEntityWomenCountField;
        
        private bool otherEntityWomenCountFieldSpecified;
        
        private int otherEntityMenCountField;
        
        private bool otherEntityMenCountFieldSpecified;
        
        private bool labourCommitteeField;
        
        private bool labourCommitteeFieldSpecified;
        
        private bool labourGroupField;
        
        private bool labourGroupFieldSpecified;
        
        private bool labourCommitteAndGroupField;
        
        private bool labourCommitteAndGroupFieldSpecified;
        
        private bool labourMedicalVisitField;
        
        private bool labourMedicalVisitFieldSpecified;
        
        private bool labourMedicineServiceField;
        
        private bool labourMedicineServiceFieldSpecified;
        
        private bool documentedEstimationField;
        
        private bool documentedEstimationFieldSpecified;
        
        private LabourConditions labourConditionsField;
        
        private ManualWeightWork manualWeightWorkField;
        
        private WorkWithMonitors workWithMonitorsField;
        
        private NoiseConditions noiseConditionsField;
        
        private VibrationCondition vibrationConditionsField;
        
        private WorkRestRegime workRestRegimeField;
        
        private Appl2_CheminalCancerAsbestosAgentsData appl2_CheminalCancerAsbestosAgentsDataField;
        
        /// <summary>
        /// RZZBUTDeclaration class constructor
        /// </summary>
        public RZZBUTDeclaration() {
            this.appl2_CheminalCancerAsbestosAgentsDataField = new Appl2_CheminalCancerAsbestosAgentsData();
            this.workRestRegimeField = new WorkRestRegime();
            this.vibrationConditionsField = new VibrationCondition();
            this.noiseConditionsField = new NoiseConditions();
            this.workWithMonitorsField = new WorkWithMonitors();
            this.manualWeightWorkField = new ManualWeightWork();
            this.labourConditionsField = new LabourConditions();
            this.representativeDetailsField = new List<RepresentativeData>();
            this.enterpriseUnitField = new List<EnterpriseUnit>();
            this.enterpriseManagerField = new PersonData();
            this.enterpriseAddressField = new AddressDetails();
            this.enterpriseActivityField = new List<EnterpriseActivity>();
            this.contactPersonField = new PersonData();
            this.headquarterAddressField = new AddressDetails();
        }
        
        /// <summary>
        /// Дирекция "Инспекция по труда"
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Дирекция \"Инспекция по труда\"")]
        public string InspectionName {
            get {
                return this.inspectionNameField;
            }
            set {
                this.inspectionNameField = value;
            }
        }
        
        /// <summary>
        /// Входящ номер
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Входящ номер")]
        public string IncomingNumber {
            get {
                return this.incomingNumberField;
            }
            set {
                this.incomingNumberField = value;
            }
        }
        
        /// <summary>
        /// Година на деклариране
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Година на деклариране")]
        public int DeclaredYear {
            get {
                return this.declaredYearField;
            }
            set {
                this.declaredYearField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeclaredYearSpecified {
            get {
                return this.declaredYearFieldSpecified;
            }
            set {
                this.declaredYearFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Дата на декларация
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", Order=3)]
        [System.ComponentModel.DescriptionAttribute("Дата на декларация")]
        public System.DateTime IssueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IssueDateSpecified {
            get {
                return this.issueDateFieldSpecified;
            }
            set {
                this.issueDateFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Работодател - наименование на юридическо лице
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("Работодател - наименование на юридическо лице")]
        public string EmployerEntityName {
            get {
                return this.employerEntityNameField;
            }
            set {
                this.employerEntityNameField = value;
            }
        }
        
        /// <summary>
        /// Работодател - идентификатор ЕИК/БУЛСТАТ
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DescriptionAttribute("Работодател - идентификатор ЕИК/БУЛСТАТ")]
        public string EmployerIdentifier {
            get {
                return this.employerIdentifierField;
            }
            set {
                this.employerIdentifierField = value;
            }
        }
        
        /// <summary>
        /// Работодател - пълно име на физическо лице
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        [System.ComponentModel.DescriptionAttribute("Работодател - пълно име на физическо лице")]
        public string EmployerPersonFullName {
            get {
                return this.employerPersonFullNameField;
            }
            set {
                this.employerPersonFullNameField = value;
            }
        }
        
        /// <summary>
        /// Работодателят самостоятелно наема работещи (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        [System.ComponentModel.DescriptionAttribute("Работодателят самостоятелно наема работещи (да/не)")]
        public bool EmployerHiring {
            get {
                return this.employerHiringField;
            }
            set {
                this.employerHiringField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployerHiringSpecified {
            get {
                return this.employerHiringFieldSpecified;
            }
            set {
                this.employerHiringFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Работодателят ползва/л работещи, предоставени от предприятие, което осигурява временна заетост (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        [System.ComponentModel.DescriptionAttribute("Работодателят ползва/л работещи, предоставени от предприятие, което осигурява вре" +
            "менна заетост (да/не)")]
        public bool EmployerTemporaryWork {
            get {
                return this.employerTemporaryWorkField;
            }
            set {
                this.employerTemporaryWorkField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployerTemporaryWorkSpecified {
            get {
                return this.employerTemporaryWorkFieldSpecified;
            }
            set {
                this.employerTemporaryWorkFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Седалище и адрес на управление на работодателя
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        [System.ComponentModel.DescriptionAttribute("Седалище и адрес на управление на работодателя")]
        public AddressDetails HeadquarterAddress {
            get {
                return this.headquarterAddressField;
            }
            set {
                this.headquarterAddressField = value;
            }
        }
        
        /// <summary>
        /// Лице за контакти на работодателя
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        [System.ComponentModel.DescriptionAttribute("Лице за контакти на работодателя")]
        public PersonData ContactPerson {
            get {
                return this.contactPersonField;
            }
            set {
                this.contactPersonField = value;
            }
        }
        
        /// <summary>
        /// Основна и спомагателна дейност съгласно Класификатора на икономическите дейности (КИД 2008)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("EnterpriseActivity", Order=11)]
        [System.ComponentModel.DescriptionAttribute("Основна и спомагателна дейност съгласно Класификатора на икономическите дейности " +
            "(КИД 2008)")]
        public List<EnterpriseActivity> EnterpriseActivity {
            get {
                return this.enterpriseActivityField;
            }
            set {
                this.enterpriseActivityField = value;
            }
        }
        
        /// <summary>
        /// Наименование на предприятието
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        [System.ComponentModel.DescriptionAttribute("Наименование на предприятието")]
        public string EnterpriseName {
            get {
                return this.enterpriseNameField;
            }
            set {
                this.enterpriseNameField = value;
            }
        }
        
        /// <summary>
        /// Адресни данни на предприятието
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        [System.ComponentModel.DescriptionAttribute("Адресни данни на предприятието")]
        public AddressDetails EnterpriseAddress {
            get {
                return this.enterpriseAddressField;
            }
            set {
                this.enterpriseAddressField = value;
            }
        }
        
        /// <summary>
        /// Данни за ръководител на предприятието
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        [System.ComponentModel.DescriptionAttribute("Данни за ръководител на предприятието")]
        public PersonData EnterpriseManager {
            get {
                return this.enterpriseManagerField;
            }
            set {
                this.enterpriseManagerField = value;
            }
        }
        
        /// <summary>
        /// Големина на предприятието според средносписъчния брой на персонала
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        [System.ComponentModel.DescriptionAttribute("Големина на предприятието според средносписъчния брой на персонала")]
        public int EnterpriseStaffSizeInterval {
            get {
                return this.enterpriseStaffSizeIntervalField;
            }
            set {
                this.enterpriseStaffSizeIntervalField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnterpriseStaffSizeIntervalSpecified {
            get {
                return this.enterpriseStaffSizeIntervalFieldSpecified;
            }
            set {
                this.enterpriseStaffSizeIntervalFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Поделения на предприятието извън основния адрес (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        [System.ComponentModel.DescriptionAttribute("Поделения на предприятието извън основния адрес (да/не)")]
        public bool EnterpriseUnitAvailable {
            get {
                return this.enterpriseUnitAvailableField;
            }
            set {
                this.enterpriseUnitAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnterpriseUnitAvailableSpecified {
            get {
                return this.enterpriseUnitAvailableFieldSpecified;
            }
            set {
                this.enterpriseUnitAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Поделения на предприятието извън адреса по т. 5
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("EnterpriseUnit", Order=17)]
        [System.ComponentModel.DescriptionAttribute("Поделения на предприятието извън адреса по т. 5")]
        public List<EnterpriseUnit> EnterpriseUnit {
            get {
                return this.enterpriseUnitField;
            }
            set {
                this.enterpriseUnitField = value;
            }
        }
        
        /// <summary>
        /// Управляващ и представляващ дружеството, организацията, търговеца
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("RepresentativeDetails", Order=18)]
        [System.ComponentModel.DescriptionAttribute("Управляващ и представляващ дружеството, организацията, търговеца")]
        public List<RepresentativeData> RepresentativeDetails {
            get {
                return this.representativeDetailsField;
            }
            set {
                this.representativeDetailsField = value;
            }
        }
        
        /// <summary>
        /// Брой наети лица към датата на подаване на декларацията
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        [System.ComponentModel.DescriptionAttribute("Брой наети лица към датата на подаване на декларацията")]
        public int StaffCount {
            get {
                return this.staffCountField;
            }
            set {
                this.staffCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StaffCountSpecified {
            get {
                return this.staffCountFieldSpecified;
            }
            set {
                this.staffCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Общ брой работници и служители, наети по трудово/служебно правоотношение
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        [System.ComponentModel.DescriptionAttribute("Общ брой работници и служители, наети по трудово/служебно правоотношение")]
        public int HiredEmployeesCount {
            get {
                return this.hiredEmployeesCountField;
            }
            set {
                this.hiredEmployeesCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiredEmployeesCountSpecified {
            get {
                return this.hiredEmployeesCountFieldSpecified;
            }
            set {
                this.hiredEmployeesCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой жени, наети по трудово/служебно правоотношение
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        [System.ComponentModel.DescriptionAttribute("Брой жени, наети по трудово/служебно правоотношение")]
        public int HiredWomenCount {
            get {
                return this.hiredWomenCountField;
            }
            set {
                this.hiredWomenCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiredWomenCountSpecified {
            get {
                return this.hiredWomenCountFieldSpecified;
            }
            set {
                this.hiredWomenCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой мъже, наети по трудово/служебно правоотношение
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        [System.ComponentModel.DescriptionAttribute("Брой мъже, наети по трудово/служебно правоотношение")]
        public int HiredMenCount {
            get {
                return this.hiredMenCountField;
            }
            set {
                this.hiredMenCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiredMenCountSpecified {
            get {
                return this.hiredMenCountFieldSpecified;
            }
            set {
                this.hiredMenCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Общ брой работници и служители на друго физическо или юридическо лице
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        [System.ComponentModel.DescriptionAttribute("Общ брой работници и служители на друго физическо или юридическо лице")]
        public int OtherEntityEmployeesCount {
            get {
                return this.otherEntityEmployeesCountField;
            }
            set {
                this.otherEntityEmployeesCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherEntityEmployeesCountSpecified {
            get {
                return this.otherEntityEmployeesCountFieldSpecified;
            }
            set {
                this.otherEntityEmployeesCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой жени - работници и служители на друго физическо или юридическо лице
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        [System.ComponentModel.DescriptionAttribute("Брой жени - работници и служители на друго физическо или юридическо лице")]
        public int OtherEntityWomenCount {
            get {
                return this.otherEntityWomenCountField;
            }
            set {
                this.otherEntityWomenCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherEntityWomenCountSpecified {
            get {
                return this.otherEntityWomenCountFieldSpecified;
            }
            set {
                this.otherEntityWomenCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой мъже - работници и служители на друго физическо или юридическо лице
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        [System.ComponentModel.DescriptionAttribute("Брой мъже - работници и служители на друго физическо или юридическо лице")]
        public int OtherEntityMenCount {
            get {
                return this.otherEntityMenCountField;
            }
            set {
                this.otherEntityMenCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherEntityMenCountSpecified {
            get {
                return this.otherEntityMenCountFieldSpecified;
            }
            set {
                this.otherEntityMenCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Учреден комитет по условия на труд (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        [System.ComponentModel.DescriptionAttribute("Учреден комитет по условия на труд (да/не)")]
        public bool LabourCommittee {
            get {
                return this.labourCommitteeField;
            }
            set {
                this.labourCommitteeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabourCommitteeSpecified {
            get {
                return this.labourCommitteeFieldSpecified;
            }
            set {
                this.labourCommitteeFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Учредена група по условия на труд (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        [System.ComponentModel.DescriptionAttribute("Учредена група по условия на труд (да/не)")]
        public bool LabourGroup {
            get {
                return this.labourGroupField;
            }
            set {
                this.labourGroupField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabourGroupSpecified {
            get {
                return this.labourGroupFieldSpecified;
            }
            set {
                this.labourGroupFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Учреден комитет и група/и по условия на труд (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        [System.ComponentModel.DescriptionAttribute("Учреден комитет и група/и по условия на труд (да/не)")]
        public bool LabourCommitteAndGroup {
            get {
                return this.labourCommitteAndGroupField;
            }
            set {
                this.labourCommitteAndGroupField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabourCommitteAndGroupSpecified {
            get {
                return this.labourCommitteAndGroupFieldSpecified;
            }
            set {
                this.labourCommitteAndGroupFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Провеждане на задължителни предварителни и периодични медицински прегледи
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        [System.ComponentModel.DescriptionAttribute("Провеждане на задължителни предварителни и периодични медицински прегледи")]
        public bool LabourMedicalVisit {
            get {
                return this.labourMedicalVisitField;
            }
            set {
                this.labourMedicalVisitField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabourMedicalVisitSpecified {
            get {
                return this.labourMedicalVisitFieldSpecified;
            }
            set {
                this.labourMedicalVisitFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Осигурено обслужване от служба по трудова медицина, регистрирана в Министерството на здравеопазването (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        [System.ComponentModel.DescriptionAttribute("Осигурено обслужване от служба по трудова медицина, регистрирана в Министерството" +
            " на здравеопазването (да/не)")]
        public bool LabourMedicineService {
            get {
                return this.labourMedicineServiceField;
            }
            set {
                this.labourMedicineServiceField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabourMedicineServiceSpecified {
            get {
                return this.labourMedicineServiceFieldSpecified;
            }
            set {
                this.labourMedicineServiceFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Документирана оценка на рисковете за безопасността и здравето на работещите (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        [System.ComponentModel.DescriptionAttribute("Документирана оценка на рисковете за безопасността и здравето на работещите (да/н" +
            "е)")]
        public bool DocumentedEstimation {
            get {
                return this.documentedEstimationField;
            }
            set {
                this.documentedEstimationField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentedEstimationSpecified {
            get {
                return this.documentedEstimationFieldSpecified;
            }
            set {
                this.documentedEstimationFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Данни за Условия на труд, свързани с осъществяваната дейност
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        [System.ComponentModel.DescriptionAttribute("Данни за Условия на труд, свързани с осъществяваната дейност")]
        public LabourConditions LabourConditions {
            get {
                return this.labourConditionsField;
            }
            set {
                this.labourConditionsField = value;
            }
        }
        
        /// <summary>
        /// Данни за ръчна работа с тежести (РРТ)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=33)]
        [System.ComponentModel.DescriptionAttribute("Данни за ръчна работа с тежести (РРТ)")]
        public ManualWeightWork ManualWeightWork {
            get {
                return this.manualWeightWorkField;
            }
            set {
                this.manualWeightWorkField = value;
            }
        }
        
        /// <summary>
        /// Данни за работа с видеодисплеи
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=34)]
        [System.ComponentModel.DescriptionAttribute("Данни за работа с видеодисплеи")]
        public WorkWithMonitors WorkWithMonitors {
            get {
                return this.workWithMonitorsField;
            }
            set {
                this.workWithMonitorsField = value;
            }
        }
        
        /// <summary>
        /// Данни за шум
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=35)]
        [System.ComponentModel.DescriptionAttribute("Данни за шум")]
        public NoiseConditions NoiseConditions {
            get {
                return this.noiseConditionsField;
            }
            set {
                this.noiseConditionsField = value;
            }
        }
        
        /// <summary>
        /// Данни за вибрации
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=36)]
        [System.ComponentModel.DescriptionAttribute("Данни за вибрации")]
        public VibrationCondition VibrationConditions {
            get {
                return this.vibrationConditionsField;
            }
            set {
                this.vibrationConditionsField = value;
            }
        }
        
        /// <summary>
        /// Данни за физиологични режими за труд и почивка
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=37)]
        [System.ComponentModel.DescriptionAttribute("Данни за физиологични режими за труд и почивка")]
        public WorkRestRegime WorkRestRegime {
            get {
                return this.workRestRegimeField;
            }
            set {
                this.workRestRegimeField = value;
            }
        }
        
        /// <summary>
        /// Данни за Приложение 2 към Декларация по чл. 15 от Закона за здравословни и безопасни условия на труд (за дадена година)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=38)]
        [System.ComponentModel.DescriptionAttribute("Данни за Приложение 2 към Декларация по чл. 15 от Закона за здравословни и безопа" +
            "сни условия на труд (за дадена година)")]
        public Appl2_CheminalCancerAsbestosAgentsData Appl2_CheminalCancerAsbestosAgentsData {
            get {
                return this.appl2_CheminalCancerAsbestosAgentsDataField;
            }
            set {
                this.appl2_CheminalCancerAsbestosAgentsDataField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class AddressDetails {
        
        private string municipalityField;
        
        private string townField;
        
        private string districtField;
        
        private string suburbField;
        
        private string streetField;
        
        private string residenceBlockField;
        
        private string entranceField;
        
        private string floorField;
        
        private string apartmentField;
        
        private string phoneField;
        
        private string emailField;
        
        private int postCodeField;
        
        private bool postCodeFieldSpecified;
        
        /// <summary>
        /// Община
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Община")]
        public string Municipality {
            get {
                return this.municipalityField;
            }
            set {
                this.municipalityField = value;
            }
        }
        
        /// <summary>
        /// Град
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Град")]
        public string Town {
            get {
                return this.townField;
            }
            set {
                this.townField = value;
            }
        }
        
        /// <summary>
        /// Област
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Област")]
        public string District {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <summary>
        /// Жилищен комплекс/квартал
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("Жилищен комплекс/квартал")]
        public string Suburb {
            get {
                return this.suburbField;
            }
            set {
                this.suburbField = value;
            }
        }
        
        /// <summary>
        /// Улица
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("Улица")]
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <summary>
        /// Блок
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DescriptionAttribute("Блок")]
        public string ResidenceBlock {
            get {
                return this.residenceBlockField;
            }
            set {
                this.residenceBlockField = value;
            }
        }
        
        /// <summary>
        /// Вход
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        [System.ComponentModel.DescriptionAttribute("Вход")]
        public string Entrance {
            get {
                return this.entranceField;
            }
            set {
                this.entranceField = value;
            }
        }
        
        /// <summary>
        /// Етаж
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        [System.ComponentModel.DescriptionAttribute("Етаж")]
        public string Floor {
            get {
                return this.floorField;
            }
            set {
                this.floorField = value;
            }
        }
        
        /// <summary>
        /// Апартамент
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        [System.ComponentModel.DescriptionAttribute("Апартамент")]
        public string Apartment {
            get {
                return this.apartmentField;
            }
            set {
                this.apartmentField = value;
            }
        }
        
        /// <summary>
        /// Телефон/Факс
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        [System.ComponentModel.DescriptionAttribute("Телефон/Факс")]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <summary>
        /// Email адрес
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        [System.ComponentModel.DescriptionAttribute("Email адрес")]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <summary>
        /// Пощенски код
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        [System.ComponentModel.DescriptionAttribute("Пощенски код")]
        public int PostCode {
            get {
                return this.postCodeField;
            }
            set {
                this.postCodeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PostCodeSpecified {
            get {
                return this.postCodeFieldSpecified;
            }
            set {
                this.postCodeFieldSpecified = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class AsbestosData {
        
        private bool licenseIssuedField;
        
        private bool licenseIssuedFieldSpecified;
        
        private bool riskEstimatedField;
        
        private bool riskEstimatedFieldSpecified;
        
        private bool labourInspectionNotifiedField;
        
        private bool labourInspectionNotifiedFieldSpecified;
        
        private bool borderlineMeasureTakenField;
        
        private bool borderlineMeasureTakenFieldSpecified;
        
        private string borderlineMeasureField;
        
        private bool healthStatusEstimatedField;
        
        private bool healthStatusEstimatedFieldSpecified;
        
        private int healthStatusEstimationCountField;
        
        private bool healthStatusEstimationCountFieldSpecified;
        
        private bool employeeRegisterAvailableField;
        
        private bool employeeRegisterAvailableFieldSpecified;
        
        private int employeeRegisteredCountField;
        
        private bool employeeRegisteredCountFieldSpecified;
        
        private bool trainingProvidedField;
        
        private bool trainingProvidedFieldSpecified;
        
        /// <summary>
        /// Предприятието има издадено разрешение по Закона за здравето за извършване на дейностите по разрушаване и/или демонтаж на азбест и азбестосъдържащи продукти (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Предприятието има издадено разрешение по Закона за здравето за извършване на дейн" +
            "остите по разрушаване и/или демонтаж на азбест и азбестосъдържащи продукти (да/н" +
            "е)")]
        public bool LicenseIssued {
            get {
                return this.licenseIssuedField;
            }
            set {
                this.licenseIssuedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LicenseIssuedSpecified {
            get {
                return this.licenseIssuedFieldSpecified;
            }
            set {
                this.licenseIssuedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// За всяка дейност, при която мож да възникне риск от експозиция на прах от азбест или азбестосъдържащи материали, е оценен рискът, като е определен видът на азбеста и степента на експозицията, на която работещите са изложени (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("За всяка дейност, при която мож да възникне риск от експозиция на прах от азбест " +
            "или азбестосъдържащи материали, е оценен рискът, като е определен видът на азбес" +
            "та и степента на експозицията, на която работещите са изложени (да/не)")]
        public bool RiskEstimated {
            get {
                return this.riskEstimatedField;
            }
            set {
                this.riskEstimatedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RiskEstimatedSpecified {
            get {
                return this.riskEstimatedFieldSpecified;
            }
            set {
                this.riskEstimatedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Преди започване на работа е уведомена дирекция "Инспекция на труда" и Регионалната инспекция за опазване и контрол на общественото здраве (РИОКОЗ), на територията на която се намира обекта, за дейностите при които работещите са или могат да бъдат експонирани на прах от азбест или от азбестосъдържащи материали (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute(@"Преди започване на работа е уведомена дирекция ""Инспекция на труда"" и Регионалната инспекция за опазване и контрол на общественото здраве (РИОКОЗ), на територията на която се намира обекта, за дейностите при които работещите са или могат да бъдат експонирани на прах от азбест или от азбестосъдържащи материали (да/не)")]
        public bool LabourInspectionNotified {
            get {
                return this.labourInspectionNotifiedField;
            }
            set {
                this.labourInspectionNotifiedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabourInspectionNotifiedSpecified {
            get {
                return this.labourInspectionNotifiedFieldSpecified;
            }
            set {
                this.labourInspectionNotifiedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Предприети са мерки при превишаване на граничната стойност на концентрация на азбестови влакна във въздуха на работната среда (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("Предприети са мерки при превишаване на граничната стойност на концентрация на азб" +
            "естови влакна във въздуха на работната среда (да/не)")]
        public bool BorderlineMeasureTaken {
            get {
                return this.borderlineMeasureTakenField;
            }
            set {
                this.borderlineMeasureTakenField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderlineMeasureTakenSpecified {
            get {
                return this.borderlineMeasureTakenFieldSpecified;
            }
            set {
                this.borderlineMeasureTakenFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприетите мерки при превишаване на граничната стойност на концентрация на азбестови влакна във въздуха на работната среда
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприетите мерки при превишаване на граничната стойност на концентр" +
            "ация на азбестови влакна във въздуха на работната среда")]
        public string BorderlineMeasure {
            get {
                return this.borderlineMeasureField;
            }
            set {
                this.borderlineMeasureField = value;
            }
        }
        
        /// <summary>
        /// Осигурена е оценка на здравното състояние на работещите (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DescriptionAttribute("Осигурена е оценка на здравното състояние на работещите (да/не)")]
        public bool HealthStatusEstimated {
            get {
                return this.healthStatusEstimatedField;
            }
            set {
                this.healthStatusEstimatedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HealthStatusEstimatedSpecified {
            get {
                return this.healthStatusEstimatedFieldSpecified;
            }
            set {
                this.healthStatusEstimatedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи, на които е осигурена оценка на здравното състояние през последните 3 години
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи, на които е осигурена оценка на здравното състояние през последните" +
            " 3 години")]
        public int HealthStatusEstimationCount {
            get {
                return this.healthStatusEstimationCountField;
            }
            set {
                this.healthStatusEstimationCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HealthStatusEstimationCountSpecified {
            get {
                return this.healthStatusEstimationCountFieldSpecified;
            }
            set {
                this.healthStatusEstimationCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Води се регистър на работещите, които извършват дейности, при които са или могат да бъдат експонирани на прах от азбест или от азбестосъдържащи материали (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        [System.ComponentModel.DescriptionAttribute("Води се регистър на работещите, които извършват дейности, при които са или могат " +
            "да бъдат експонирани на прах от азбест или от азбестосъдържащи материали (да/не)" +
            "")]
        public bool EmployeeRegisterAvailable {
            get {
                return this.employeeRegisterAvailableField;
            }
            set {
                this.employeeRegisterAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployeeRegisterAvailableSpecified {
            get {
                return this.employeeRegisterAvailableFieldSpecified;
            }
            set {
                this.employeeRegisterAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой на работещите, включени в регистъра
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        [System.ComponentModel.DescriptionAttribute("Брой на работещите, включени в регистъра")]
        public int EmployeeRegisteredCount {
            get {
                return this.employeeRegisteredCountField;
            }
            set {
                this.employeeRegisteredCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployeeRegisteredCountSpecified {
            get {
                return this.employeeRegisteredCountFieldSpecified;
            }
            set {
                this.employeeRegisteredCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Осигурено е обучение на всички работещи, които са или е вероятно да бъдат експонирани на прах, който съдържа азбест (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        [System.ComponentModel.DescriptionAttribute("Осигурено е обучение на всички работещи, които са или е вероятно да бъдат експони" +
            "рани на прах, който съдържа азбест (да/не)")]
        public bool TrainingProvided {
            get {
                return this.trainingProvidedField;
            }
            set {
                this.trainingProvidedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrainingProvidedSpecified {
            get {
                return this.trainingProvidedFieldSpecified;
            }
            set {
                this.trainingProvidedFieldSpecified = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class CancerAgentsData {
        
        private bool exposureEsitamtedField;
        
        private bool exposureEsitamtedFieldSpecified;
        
        private bool borderlineCorrespondingField;
        
        private bool borderlineCorrespondingFieldSpecified;
        
        private bool replacementSuppliedField;
        
        private bool replacementSuppliedFieldSpecified;
        
        private string replacementMeasureField;
        
        private bool closedProductionSetField;
        
        private bool closedProductionSetFieldSpecified;
        
        private string closedProductionMeasureField;
        
        private bool exposureDecreasedField;
        
        private bool exposureDecreasedFieldSpecified;
        
        private string exposureDecreaseMeasureField;
        
        private bool generalSecuritySetField;
        
        private bool generalSecuritySetFieldSpecified;
        
        private string generalSecurityMeasureField;
        
        private bool personalPreventionSetField;
        
        private bool personalPreventionSetFieldSpecified;
        
        private string personalPreventionMeasureField;
        
        private bool otherMeasureSetField;
        
        private bool otherMeasureSetFieldSpecified;
        
        private string otherMeasureField;
        
        private bool preventionMeasureNotTakenField;
        
        private bool preventionMeasureNotTakenFieldSpecified;
        
        private bool trainingProvidedField;
        
        private bool trainingProvidedFieldSpecified;
        
        private bool warningSignsProvidedField;
        
        private bool warningSignsProvidedFieldSpecified;
        
        private bool updatedEmployeeListField;
        
        private bool updatedEmployeeListFieldSpecified;
        
        private int employeeListedCountField;
        
        private bool employeeListedCountFieldSpecified;
        
        private List<DangerousChemicalAgents> dangerousCancerAgentsField;
        
        /// <summary>
        /// CancerAgentsData class constructor
        /// </summary>
        public CancerAgentsData() {
            this.dangerousCancerAgentsField = new List<DangerousChemicalAgents>();
        }
        
        /// <summary>
        /// При извършване на оценката на риска е определен видът, степента и продължителността на експозицията на работещите за всяка дейност, при която може да възникне риск от експозиция на канцерогени или мутагени (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("При извършване на оценката на риска е определен видът, степента и продължителност" +
            "та на експозицията на работещите за всяка дейност, при която може да възникне ри" +
            "ск от експозиция на канцерогени или мутагени (да/не)")]
        public bool ExposureEsitamted {
            get {
                return this.exposureEsitamtedField;
            }
            set {
                this.exposureEsitamtedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExposureEsitamtedSpecified {
            get {
                return this.exposureEsitamtedFieldSpecified;
            }
            set {
                this.exposureEsitamtedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Измерените стойности на канцерогените и мутагените във въздуха на работното място съответстват на граничните стойности (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Измерените стойности на канцерогените и мутагените във въздуха на работното място" +
            " съответстват на граничните стойности (да/не)")]
        public bool BorderlineCorresponding {
            get {
                return this.borderlineCorrespondingField;
            }
            set {
                this.borderlineCorrespondingField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderlineCorrespondingSpecified {
            get {
                return this.borderlineCorrespondingFieldSpecified;
            }
            set {
                this.borderlineCorrespondingFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с мутагени и канцерогени - Заместване с вещества, препарати или процеси, които не са опасни или са по-малко опасни за здравето и безопасността на работещите (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " мутагени и канцерогени - Заместване с вещества, препарати или процеси, които не" +
            " са опасни или са по-малко опасни за здравето и безопасността на работещите (да/" +
            "не)")]
        public bool ReplacementSupplied {
            get {
                return this.replacementSuppliedField;
            }
            set {
                this.replacementSuppliedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReplacementSuppliedSpecified {
            get {
                return this.replacementSuppliedFieldSpecified;
            }
            set {
                this.replacementSuppliedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с мутагени и канцерогени - Заместване с вещества, препарати или процеси, които не са опасни или са по-малко опасни за здравето и безопасността на работещите
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с мутагени и канцерогени - Заместване с вещества, препарати или проце" +
            "си, които не са опасни или са по-малко опасни за здравето и безопасността на раб" +
            "отещите")]
        public string ReplacementMeasure {
            get {
                return this.replacementMeasureField;
            }
            set {
                this.replacementMeasureField = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с мутагени и канцерогени - Осигурена затворена система за производство и използване на канцерогени и мтагени (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " мутагени и канцерогени - Осигурена затворена система за производство и използва" +
            "не на канцерогени и мтагени (да/не)")]
        public bool ClosedProductionSet {
            get {
                return this.closedProductionSetField;
            }
            set {
                this.closedProductionSetField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClosedProductionSetSpecified {
            get {
                return this.closedProductionSetFieldSpecified;
            }
            set {
                this.closedProductionSetFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с мутагени и канцерогени - Осигурена затворена система за производство и използване на канцерогени и мутагени
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с мутагени и канцерогени - Осигурена затворена система за производств" +
            "о и използване на канцерогени и мутагени")]
        public string ClosedProductionMeasure {
            get {
                return this.closedProductionMeasureField;
            }
            set {
                this.closedProductionMeasureField = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с мутагени и канцерогени - Намаляване на нивото на експозиция на работещите (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " мутагени и канцерогени - Намаляване на нивото на експозиция на работещите (да/н" +
            "е)")]
        public bool ExposureDecreased {
            get {
                return this.exposureDecreasedField;
            }
            set {
                this.exposureDecreasedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExposureDecreasedSpecified {
            get {
                return this.exposureDecreasedFieldSpecified;
            }
            set {
                this.exposureDecreasedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с мутагени и канцерогени - Намаляване на нивото на експозиция на работещите
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с мутагени и канцерогени - Намаляване на нивото на експозиция на рабо" +
            "тещите")]
        public string ExposureDecreaseMeasure {
            get {
                return this.exposureDecreaseMeasureField;
            }
            set {
                this.exposureDecreaseMeasureField = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с мутагени и канцерогени - Осигурени колективни средства за защита (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " мутагени и канцерогени - Осигурени колективни средства за защита (да/не)")]
        public bool GeneralSecuritySet {
            get {
                return this.generalSecuritySetField;
            }
            set {
                this.generalSecuritySetField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GeneralSecuritySetSpecified {
            get {
                return this.generalSecuritySetFieldSpecified;
            }
            set {
                this.generalSecuritySetFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с мутагени и канцерогени - Осигурени колективни средства за защита
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с мутагени и канцерогени - Осигурени колективни средства за защита")]
        public string GeneralSecurityMeasure {
            get {
                return this.generalSecurityMeasureField;
            }
            set {
                this.generalSecurityMeasureField = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с мутагени и канцерогени - Осигурени хигиенни мерки и лични предпазни средства (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " мутагени и канцерогени - Осигурени хигиенни мерки и лични предпазни средства (д" +
            "а/не)")]
        public bool PersonalPreventionSet {
            get {
                return this.personalPreventionSetField;
            }
            set {
                this.personalPreventionSetField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PersonalPreventionSetSpecified {
            get {
                return this.personalPreventionSetFieldSpecified;
            }
            set {
                this.personalPreventionSetFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с мутагени и канцерогени - Осигурени хигиенни мерки и лични предпазни средства
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с мутагени и канцерогени - Осигурени хигиенни мерки и лични предпазни" +
            " средства")]
        public string PersonalPreventionMeasure {
            get {
                return this.personalPreventionMeasureField;
            }
            set {
                this.personalPreventionMeasureField = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с мутагени и канцерогени - Други (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " мутагени и канцерогени - Други (да/не)")]
        public bool OtherMeasureSet {
            get {
                return this.otherMeasureSetField;
            }
            set {
                this.otherMeasureSetField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherMeasureSetSpecified {
            get {
                return this.otherMeasureSetFieldSpecified;
            }
            set {
                this.otherMeasureSetFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с мутагени и канцерогени - Други
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с мутагени и канцерогени - Други")]
        public string OtherMeasure {
            get {
                return this.otherMeasureField;
            }
            set {
                this.otherMeasureField = value;
            }
        }
        
        /// <summary>
        /// Към момента на деклариране не са предприети мерки (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        [System.ComponentModel.DescriptionAttribute("Към момента на деклариране не са предприети мерки (да/не)")]
        public bool PreventionMeasureNotTaken {
            get {
                return this.preventionMeasureNotTakenField;
            }
            set {
                this.preventionMeasureNotTakenField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreventionMeasureNotTakenSpecified {
            get {
                return this.preventionMeasureNotTakenFieldSpecified;
            }
            set {
                this.preventionMeasureNotTakenFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// На работещите и/или техните представители са осигурени подходяща информация, обучение и инструктаж (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        [System.ComponentModel.DescriptionAttribute("На работещите и/или техните представители са осигурени подходяща информация, обуч" +
            "ение и инструктаж (да/не)")]
        public bool TrainingProvided {
            get {
                return this.trainingProvidedField;
            }
            set {
                this.trainingProvidedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrainingProvidedSpecified {
            get {
                return this.trainingProvidedFieldSpecified;
            }
            set {
                this.trainingProvidedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Осигурено е ясно и четливо етикетиране и обозначаване с предупредителни знаци и знаци за безопасност на инсталациите, контейнерите и опаковките, които съдържат канцерогени и мутагени (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        [System.ComponentModel.DescriptionAttribute("Осигурено е ясно и четливо етикетиране и обозначаване с предупредителни знаци и з" +
            "наци за безопасност на инсталациите, контейнерите и опаковките, които съдържат к" +
            "анцерогени и мутагени (да/не)")]
        public bool WarningSignsProvided {
            get {
                return this.warningSignsProvidedField;
            }
            set {
                this.warningSignsProvidedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WarningSignsProvidedSpecified {
            get {
                return this.warningSignsProvidedFieldSpecified;
            }
            set {
                this.warningSignsProvidedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Изготвен е и се поддържа в актуално състояние списък на работещите, за които може да има опасност от експозиция на канцерогени и мутагени (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        [System.ComponentModel.DescriptionAttribute("Изготвен е и се поддържа в актуално състояние списък на работещите, за които може" +
            " да има опасност от експозиция на канцерогени и мутагени (да/не)")]
        public bool UpdatedEmployeeList {
            get {
                return this.updatedEmployeeListField;
            }
            set {
                this.updatedEmployeeListField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdatedEmployeeListSpecified {
            get {
                return this.updatedEmployeeListFieldSpecified;
            }
            set {
                this.updatedEmployeeListFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой на работещите, включени в актуалния списък
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        [System.ComponentModel.DescriptionAttribute("Брой на работещите, включени в актуалния списък")]
        public int EmployeeListedCount {
            get {
                return this.employeeListedCountField;
            }
            set {
                this.employeeListedCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployeeListedCountSpecified {
            get {
                return this.employeeListedCountFieldSpecified;
            }
            set {
                this.employeeListedCountFieldSpecified = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DangerousCancerAgents", Order=19)]
        public List<DangerousChemicalAgents> DangerousCancerAgents {
            get {
                return this.dangerousCancerAgentsField;
            }
            set {
                this.dangerousCancerAgentsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class DangerousChemicalAgents {
        
        private string cASNumberField;
        
        private string chemicalAgentNameField;
        
        private int employeeExposedCountField;
        
        private bool employeeExposedCountFieldSpecified;
        
        /// <summary>
        /// CAS номер
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("CAS номер")]
        public string CASNumber {
            get {
                return this.cASNumberField;
            }
            set {
                this.cASNumberField = value;
            }
        }
        
        /// <summary>
        /// Описание на химически агент
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Описание на химически агент")]
        public string ChemicalAgentName {
            get {
                return this.chemicalAgentNameField;
            }
            set {
                this.chemicalAgentNameField = value;
            }
        }
        
        /// <summary>
        /// Брой експонирани работещи
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Брой експонирани работещи")]
        public int EmployeeExposedCount {
            get {
                return this.employeeExposedCountField;
            }
            set {
                this.employeeExposedCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployeeExposedCountSpecified {
            get {
                return this.employeeExposedCountFieldSpecified;
            }
            set {
                this.employeeExposedCountFieldSpecified = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class ChemicalAgentsData {
        
        private bool riskEstimatedField;
        
        private bool riskEstimatedFieldSpecified;
        
        private bool safetyIndexBoxField;
        
        private bool safetyIndexBoxFieldSpecified;
        
        private bool employeeCountRestictedField;
        
        private bool employeeCountRestictedFieldSpecified;
        
        private string employeeRestrictionMeasureField;
        
        private bool exposureDurationDecreasedField;
        
        private bool exposureDurationDecreasedFieldSpecified;
        
        private string exposureDurationMeasureField;
        
        private bool chemicalAgentsQuantityRestrictedField;
        
        private bool chemicalAgentsQuantityRestrictedFieldSpecified;
        
        private string chemicalAgentsQuatityMeasureField;
        
        private bool procedureManagementSetField;
        
        private bool procedureManagementSetFieldSpecified;
        
        private string procedureManagementMeasureField;
        
        private bool replacementSuppliedField;
        
        private bool replacementSuppliedFieldSpecified;
        
        private string replacementMeasureField;
        
        private bool generalSecuritySetField;
        
        private bool generalSecuritySetFieldSpecified;
        
        private string generalSecurityMeasureField;
        
        private bool personalPreventionSetField;
        
        private bool personalPreventionSetFieldSpecified;
        
        private string personalPreventionMeasureField;
        
        private bool otherMeasureSetField;
        
        private bool otherMeasureSetFieldSpecified;
        
        private string otherMeasureField;
        
        private bool preventionMeasureNotTakenField;
        
        private bool preventionMeasureNotTakenFieldSpecified;
        
        private bool periodicTestDoneField;
        
        private bool periodicTestDoneFieldSpecified;
        
        private bool trainingProvidedField;
        
        private bool trainingProvidedFieldSpecified;
        
        private bool actionPlanPreparedField;
        
        private bool actionPlanPreparedFieldSpecified;
        
        private bool healthcareProvidedField;
        
        private bool healthcareProvidedFieldSpecified;
        
        private int healthcareCountField;
        
        private bool healthcareCountFieldSpecified;
        
        private List<DangerousChemicalAgents> dangerousChemicalAgentsField;
        
        /// <summary>
        /// ChemicalAgentsData class constructor
        /// </summary>
        public ChemicalAgentsData() {
            this.dangerousChemicalAgentsField = new List<DangerousChemicalAgents>();
        }
        
        /// <summary>
        /// Извършена оценка на риска при работа с опасни химически агенти (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Извършена оценка на риска при работа с опасни химически агенти (да/не)")]
        public bool RiskEstimated {
            get {
                return this.riskEstimatedField;
            }
            set {
                this.riskEstimatedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RiskEstimatedSpecified {
            get {
                return this.riskEstimatedFieldSpecified;
            }
            set {
                this.riskEstimatedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Съставена картотека на информационните листове за безопасност (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Съставена картотека на информационните листове за безопасност (да/не)")]
        public bool SafetyIndexBox {
            get {
                return this.safetyIndexBoxField;
            }
            set {
                this.safetyIndexBoxField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SafetyIndexBoxSpecified {
            get {
                return this.safetyIndexBoxFieldSpecified;
            }
            set {
                this.safetyIndexBoxFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Ограничаване на броя работещи, които са или могат да бъдат експонирани (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " химически агенти - Ограничаване на броя работещи, които са или могат да бъдат е" +
            "кспонирани (да/не)")]
        public bool EmployeeCountResticted {
            get {
                return this.employeeCountRestictedField;
            }
            set {
                this.employeeCountRestictedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployeeCountRestictedSpecified {
            get {
                return this.employeeCountRestictedFieldSpecified;
            }
            set {
                this.employeeCountRestictedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Ограничаване на броя работещи, които са или могат да бъдат експонирани
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с химически агенти - Ограничаване на броя работещи, които са или мога" +
            "т да бъдат експонирани")]
        public string EmployeeRestrictionMeasure {
            get {
                return this.employeeRestrictionMeasureField;
            }
            set {
                this.employeeRestrictionMeasureField = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Намаляване на продължителността и степента на експозицията (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " химически агенти - Намаляване на продължителността и степента на експозицията (" +
            "да/не)")]
        public bool ExposureDurationDecreased {
            get {
                return this.exposureDurationDecreasedField;
            }
            set {
                this.exposureDurationDecreasedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExposureDurationDecreasedSpecified {
            get {
                return this.exposureDurationDecreasedFieldSpecified;
            }
            set {
                this.exposureDurationDecreasedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Намаляване на продължителността и степента на експозицията
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с химически агенти - Намаляване на продължителността и степента на ек" +
            "спозицията")]
        public string ExposureDurationMeasure {
            get {
                return this.exposureDurationMeasureField;
            }
            set {
                this.exposureDurationMeasureField = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Ограничено количество на химическите агенти до минимума, необходим за извършване на определен вид работа (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " химически агенти - Ограничено количество на химическите агенти до минимума, нео" +
            "бходим за извършване на определен вид работа (да/не)")]
        public bool ChemicalAgentsQuantityRestricted {
            get {
                return this.chemicalAgentsQuantityRestrictedField;
            }
            set {
                this.chemicalAgentsQuantityRestrictedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChemicalAgentsQuantityRestrictedSpecified {
            get {
                return this.chemicalAgentsQuantityRestrictedFieldSpecified;
            }
            set {
                this.chemicalAgentsQuantityRestrictedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Ограничено количество на химическите агенти до минимума, необходим за извършване на определен вид работа
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с химически агенти - Ограничено количество на химическите агенти до м" +
            "инимума, необходим за извършване на определен вид работа")]
        public string ChemicalAgentsQuatityMeasure {
            get {
                return this.chemicalAgentsQuatityMeasureField;
            }
            set {
                this.chemicalAgentsQuatityMeasureField = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Въведени процедури за съхранение и транспортиране на опасни химически агенти, както и на отпадъците, които ги съдържат (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " химически агенти - Въведени процедури за съхранение и транспортиране на опасни " +
            "химически агенти, както и на отпадъците, които ги съдържат (да/не)")]
        public bool ProcedureManagementSet {
            get {
                return this.procedureManagementSetField;
            }
            set {
                this.procedureManagementSetField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcedureManagementSetSpecified {
            get {
                return this.procedureManagementSetFieldSpecified;
            }
            set {
                this.procedureManagementSetFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Въведени процедури за съхранение и транспортиране на опасни химически агенти, както и на отпадъците, които ги съдържат
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с химически агенти - Въведени процедури за съхранение и транспортиран" +
            "е на опасни химически агенти, както и на отпадъците, които ги съдържат")]
        public string ProcedureManagementMeasure {
            get {
                return this.procedureManagementMeasureField;
            }
            set {
                this.procedureManagementMeasureField = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Замяна с химически агенти или процеси, които не са опасни или са по-малко опасни (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " химически агенти - Замяна с химически агенти или процеси, които не са опасни ил" +
            "и са по-малко опасни (да/не)")]
        public bool ReplacementSupplied {
            get {
                return this.replacementSuppliedField;
            }
            set {
                this.replacementSuppliedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReplacementSuppliedSpecified {
            get {
                return this.replacementSuppliedFieldSpecified;
            }
            set {
                this.replacementSuppliedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Замяна с химически агенти или процеси, които не са опасни или са по-малко опасни
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с химически агенти - Замяна с химически агенти или процеси, които не " +
            "са опасни или са по-малко опасни")]
        public string ReplacementMeasure {
            get {
                return this.replacementMeasureField;
            }
            set {
                this.replacementMeasureField = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Осигурени мерки за колективна защита (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " химически агенти - Осигурени мерки за колективна защита (да/не)")]
        public bool GeneralSecuritySet {
            get {
                return this.generalSecuritySetField;
            }
            set {
                this.generalSecuritySetField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GeneralSecuritySetSpecified {
            get {
                return this.generalSecuritySetFieldSpecified;
            }
            set {
                this.generalSecuritySetFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Осигурени мерки за колективна защита
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с химически агенти - Осигурени мерки за колективна защита")]
        public string GeneralSecurityMeasure {
            get {
                return this.generalSecurityMeasureField;
            }
            set {
                this.generalSecurityMeasureField = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Осигурени лични предпазни средства (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " химически агенти - Осигурени лични предпазни средства (да/не)")]
        public bool PersonalPreventionSet {
            get {
                return this.personalPreventionSetField;
            }
            set {
                this.personalPreventionSetField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PersonalPreventionSetSpecified {
            get {
                return this.personalPreventionSetFieldSpecified;
            }
            set {
                this.personalPreventionSetFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Осигурени лични предпазни средства
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с химически агенти - Осигурени лични предпазни средства")]
        public string PersonalPreventionMeasure {
            get {
                return this.personalPreventionMeasureField;
            }
            set {
                this.personalPreventionMeasureField = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Други (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за предотвратяване или намаляване на риска, свързан с работата с" +
            " химически агенти - Други (да/не)")]
        public bool OtherMeasureSet {
            get {
                return this.otherMeasureSetField;
            }
            set {
                this.otherMeasureSetField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherMeasureSetSpecified {
            get {
                return this.otherMeasureSetFieldSpecified;
            }
            set {
                this.otherMeasureSetFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Описание на предприети мерки за предотвратяване или намаляване на риска, свързан с работата с химически агенти - Други
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        [System.ComponentModel.DescriptionAttribute("Описание на предприети мерки за предотвратяване или намаляване на риска, свързан " +
            "с работата с химически агенти - Други")]
        public string OtherMeasure {
            get {
                return this.otherMeasureField;
            }
            set {
                this.otherMeasureField = value;
            }
        }
        
        /// <summary>
        /// Към момента на деклариране не са предприети мерки (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        [System.ComponentModel.DescriptionAttribute("Към момента на деклариране не са предприети мерки (да/не)")]
        public bool PreventionMeasureNotTaken {
            get {
                return this.preventionMeasureNotTakenField;
            }
            set {
                this.preventionMeasureNotTakenField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreventionMeasureNotTakenSpecified {
            get {
                return this.preventionMeasureNotTakenFieldSpecified;
            }
            set {
                this.preventionMeasureNotTakenFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Извършени периодични измервания на наличните химически агенти, които могат да доведат до риск за здравето на работещите на работното място (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        [System.ComponentModel.DescriptionAttribute("Извършени периодични измервания на наличните химически агенти, които могат да дов" +
            "едат до риск за здравето на работещите на работното място (да/не)")]
        public bool PeriodicTestDone {
            get {
                return this.periodicTestDoneField;
            }
            set {
                this.periodicTestDoneField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodicTestDoneSpecified {
            get {
                return this.periodicTestDoneFieldSpecified;
            }
            set {
                this.periodicTestDoneFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Осигурена информация и подходящо обучение на работещите за използваните и произвеждани опасни химически агенти (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        [System.ComponentModel.DescriptionAttribute("Осигурена информация и подходящо обучение на работещите за използваните и произве" +
            "ждани опасни химически агенти (да/не)")]
        public bool TrainingProvided {
            get {
                return this.trainingProvidedField;
            }
            set {
                this.trainingProvidedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrainingProvidedSpecified {
            get {
                return this.trainingProvidedFieldSpecified;
            }
            set {
                this.trainingProvidedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Изготвен и проигран през годината план за действие за предотвратяване и ликвидиране на аварии, инциденти и злополуки, свързани с опасни химически агенти (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        [System.ComponentModel.DescriptionAttribute("Изготвен и проигран през годината план за действие за предотвратяване и ликвидира" +
            "не на аварии, инциденти и злополуки, свързани с опасни химически агенти (да/не)")]
        public bool ActionPlanPrepared {
            get {
                return this.actionPlanPreparedField;
            }
            set {
                this.actionPlanPreparedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionPlanPreparedSpecified {
            get {
                return this.actionPlanPreparedFieldSpecified;
            }
            set {
                this.actionPlanPreparedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Осигурено здравно наблюдение при идентифициран риск за здравето на работещите при оценката на риска (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        [System.ComponentModel.DescriptionAttribute("Осигурено здравно наблюдение при идентифициран риск за здравето на работещите при" +
            " оценката на риска (да/не)")]
        public bool HealthcareProvided {
            get {
                return this.healthcareProvidedField;
            }
            set {
                this.healthcareProvidedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HealthcareProvidedSpecified {
            get {
                return this.healthcareProvidedFieldSpecified;
            }
            set {
                this.healthcareProvidedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой на работещите, подлежащи на здравно наблюдение
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        [System.ComponentModel.DescriptionAttribute("Брой на работещите, подлежащи на здравно наблюдение")]
        public int HealthcareCount {
            get {
                return this.healthcareCountField;
            }
            set {
                this.healthcareCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HealthcareCountSpecified {
            get {
                return this.healthcareCountFieldSpecified;
            }
            set {
                this.healthcareCountFieldSpecified = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DangerousChemicalAgents", Order=24)]
        public List<DangerousChemicalAgents> DangerousChemicalAgents {
            get {
                return this.dangerousChemicalAgentsField;
            }
            set {
                this.dangerousChemicalAgentsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class Appl2_CheminalCancerAsbestosAgentsData {
        
        private ChemicalAgentsData chemicalAgentsDataField;
        
        private CancerAgentsData cancerAgentsDataField;
        
        private AsbestosData asbestosDataField;
        
        private bool chemicalAgentsUsedField;
        
        private bool chemicalAgentsUsedFieldSpecified;
        
        private bool cancerAgentsUsedField;
        
        private bool cancerAgentsUsedFieldSpecified;
        
        private bool asbestosUsedField;
        
        private bool asbestosUsedFieldSpecified;
        
        /// <summary>
        /// Appl2_CheminalCancerAsbestosAgentsData class constructor
        /// </summary>
        public Appl2_CheminalCancerAsbestosAgentsData() {
            this.asbestosDataField = new AsbestosData();
            this.cancerAgentsDataField = new CancerAgentsData();
            this.chemicalAgentsDataField = new ChemicalAgentsData();
        }
        
        /// <summary>
        /// Данни за химически агенти към Приложение 2
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Данни за химически агенти към Приложение 2")]
        public ChemicalAgentsData ChemicalAgentsData {
            get {
                return this.chemicalAgentsDataField;
            }
            set {
                this.chemicalAgentsDataField = value;
            }
        }
        
        /// <summary>
        /// Данни за канцерогени и мутагени към Приложение 2
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Данни за канцерогени и мутагени към Приложение 2")]
        public CancerAgentsData CancerAgentsData {
            get {
                return this.cancerAgentsDataField;
            }
            set {
                this.cancerAgentsDataField = value;
            }
        }
        
        /// <summary>
        /// Данни за азбест към Приложение 2
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Данни за азбест към Приложение 2")]
        public AsbestosData AsbestosData {
            get {
                return this.asbestosDataField;
            }
            set {
                this.asbestosDataField = value;
            }
        }
        
        /// <summary>
        /// В предприятиесто се произвеждат, използват или съхраняват химически агенти (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("В предприятиесто се произвеждат, използват или съхраняват химически агенти (да/не" +
            ")")]
        public bool ChemicalAgentsUsed {
            get {
                return this.chemicalAgentsUsedField;
            }
            set {
                this.chemicalAgentsUsedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChemicalAgentsUsedSpecified {
            get {
                return this.chemicalAgentsUsedFieldSpecified;
            }
            set {
                this.chemicalAgentsUsedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// В предприятиесто се произвеждат, използват или съхраняват канцерогени / мутагени (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("В предприятиесто се произвеждат, използват или съхраняват канцерогени / мутагени " +
            "(да/не)")]
        public bool CancerAgentsUsed {
            get {
                return this.cancerAgentsUsedField;
            }
            set {
                this.cancerAgentsUsedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CancerAgentsUsedSpecified {
            get {
                return this.cancerAgentsUsedFieldSpecified;
            }
            set {
                this.cancerAgentsUsedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// В предприятиесто се произвежда, използва или съхранява азбест (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DescriptionAttribute("В предприятиесто се произвежда, използва или съхранява азбест (да/не)")]
        public bool AsbestosUsed {
            get {
                return this.asbestosUsedField;
            }
            set {
                this.asbestosUsedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsbestosUsedSpecified {
            get {
                return this.asbestosUsedFieldSpecified;
            }
            set {
                this.asbestosUsedFieldSpecified = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class WorkRestRegimeTotal {
        
        private int employeesCountForRestField;
        
        private bool employeesCountForRestFieldSpecified;
        
        private double worktimePercentageForRestField;
        
        private bool worktimePercentageForRestFieldSpecified;
        
        /// <summary>
        /// брой работещи
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("брой работещи")]
        public int EmployeesCountForRest {
            get {
                return this.employeesCountForRestField;
            }
            set {
                this.employeesCountForRestField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployeesCountForRestSpecified {
            get {
                return this.employeesCountForRestFieldSpecified;
            }
            set {
                this.employeesCountForRestFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// % от работното време
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("% от работното време")]
        public double WorktimePercentageForRest {
            get {
                return this.worktimePercentageForRestField;
            }
            set {
                this.worktimePercentageForRestField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorktimePercentageForRestSpecified {
            get {
                return this.worktimePercentageForRestFieldSpecified;
            }
            set {
                this.worktimePercentageForRestFieldSpecified = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class WorkRestRegime {
        
        private int workRestRegimeEstimatedField;
        
        private bool workRestRegimeEstimatedFieldSpecified;
        
        private int regulatedRestActiveField;
        
        private bool regulatedRestActiveFieldSpecified;
        
        private int regulatedRestSemiPassiveField;
        
        private bool regulatedRestSemiPassiveFieldSpecified;
        
        private int regulatedRestPassiveField;
        
        private bool regulatedRestPassiveFieldSpecified;
        
        private int restSpotProvidedField;
        
        private bool restSpotProvidedFieldSpecified;
        
        private List<WorkRestRegimeTotal> regulatedRestsField;
        
        /// <summary>
        /// WorkRestRegime class constructor
        /// </summary>
        public WorkRestRegime() {
            this.regulatedRestsField = new List<WorkRestRegimeTotal>();
        }
        
        /// <summary>
        /// В предприятието са разработени физиологични режими на труд и почивка в зависимост от оценката на риска и организацията на работния процес (да/не/няма необходимост)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("В предприятието са разработени физиологични режими на труд и почивка в зависимост" +
            " от оценката на риска и организацията на работния процес (да/не/няма необходимос" +
            "т)")]
        public int WorkRestRegimeEstimated {
            get {
                return this.workRestRegimeEstimatedField;
            }
            set {
                this.workRestRegimeEstimatedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkRestRegimeEstimatedSpecified {
            get {
                return this.workRestRegimeEstimatedFieldSpecified;
            }
            set {
                this.workRestRegimeEstimatedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи при активни регламентирани почивки
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи при активни регламентирани почивки")]
        public int RegulatedRestActive {
            get {
                return this.regulatedRestActiveField;
            }
            set {
                this.regulatedRestActiveField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegulatedRestActiveSpecified {
            get {
                return this.regulatedRestActiveFieldSpecified;
            }
            set {
                this.regulatedRestActiveFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи при полупасивни регламентирани почивки
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи при полупасивни регламентирани почивки")]
        public int RegulatedRestSemiPassive {
            get {
                return this.regulatedRestSemiPassiveField;
            }
            set {
                this.regulatedRestSemiPassiveField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegulatedRestSemiPassiveSpecified {
            get {
                return this.regulatedRestSemiPassiveFieldSpecified;
            }
            set {
                this.regulatedRestSemiPassiveFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи при пасивни регламентирани почивки
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи при пасивни регламентирани почивки")]
        public int RegulatedRestPassive {
            get {
                return this.regulatedRestPassiveField;
            }
            set {
                this.regulatedRestPassiveField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegulatedRestPassiveSpecified {
            get {
                return this.regulatedRestPassiveFieldSpecified;
            }
            set {
                this.regulatedRestPassiveFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Осигурени подходящи места за почивка (да/не/не зз всички)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("Осигурени подходящи места за почивка (да/не/не зз всички)")]
        public int RestSpotProvided {
            get {
                return this.restSpotProvidedField;
            }
            set {
                this.restSpotProvidedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RestSpotProvidedSpecified {
            get {
                return this.restSpotProvidedFieldSpecified;
            }
            set {
                this.restSpotProvidedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Общото време за регламентирани почивки достига
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("RegulatedRests", Order=5)]
        [System.ComponentModel.DescriptionAttribute("Общото време за регламентирани почивки достига")]
        public List<WorkRestRegimeTotal> RegulatedRests {
            get {
                return this.regulatedRestsField;
            }
            set {
                this.regulatedRestsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class VibrationCondition {
        
        private int vibrationExposureRiskEstimatedField;
        
        private bool vibrationExposureRiskEstimatedFieldSpecified;
        
        private int vibrationBorderlineCountField;
        
        private bool vibrationBorderlineCountFieldSpecified;
        
        private int vibrationArmShoulderCountField;
        
        private bool vibrationArmShoulderCountFieldSpecified;
        
        private int vibrationWholeBodyCountField;
        
        private bool vibrationWholeBodyCountFieldSpecified;
        
        private int healthcareCountField;
        
        private bool healthcareCountFieldSpecified;
        
        private bool exceptionAvailableField;
        
        private bool exceptionAvailableFieldSpecified;
        
        private string exceptionReasonField;
        
        private bool vibrationExposureEscapeMethodsField;
        
        private bool vibrationExposureEscapeMethodsFieldSpecified;
        
        private bool vibrationExposureEscapeWorkEquipmentField;
        
        private bool vibrationExposureEscapeWorkEquipmentFieldSpecified;
        
        private bool vibrationExposureEscapeAdditionalEquipmentField;
        
        private bool vibrationExposureEscapeAdditionalEquipmentFieldSpecified;
        
        private bool vibrationExposureEscapeMaintenanceField;
        
        private bool vibrationExposureEscapeMaintenanceFieldSpecified;
        
        private bool vibrationExposureEscapeLimitsField;
        
        private bool vibrationExposureEscapeLimitsFieldSpecified;
        
        private bool vibrationExposureEscapeClimateConditionsField;
        
        private bool vibrationExposureEscapeClimateConditionsFieldSpecified;
        
        private bool vibrationExposureEscapeLpsField;
        
        private bool vibrationExposureEscapeLpsFieldSpecified;
        
        private bool vibrationExposureEscapeNoMeasuresField;
        
        private bool vibrationExposureEscapeNoMeasuresFieldSpecified;
        
        private bool otherMeasuresField;
        
        private bool otherMeasuresFieldSpecified;
        
        private string otherMeasuresDescriptionField;
        
        /// <summary>
        /// Рискът при излагане на вибрации е оценен (да/не/няма необходимост)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Рискът при излагане на вибрации е оценен (да/не/няма необходимост)")]
        public int VibrationExposureRiskEstimated {
            get {
                return this.vibrationExposureRiskEstimatedField;
            }
            set {
                this.vibrationExposureRiskEstimatedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VibrationExposureRiskEstimatedSpecified {
            get {
                return this.vibrationExposureRiskEstimatedFieldSpecified;
            }
            set {
                this.vibrationExposureRiskEstimatedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работници, изложени на вибрации над установените гранични стойности на експозиция
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Брой работници, изложени на вибрации над установените гранични стойности на експо" +
            "зиция")]
        public int VibrationBorderlineCount {
            get {
                return this.vibrationBorderlineCountField;
            }
            set {
                this.vibrationBorderlineCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VibrationBorderlineCountSpecified {
            get {
                return this.vibrationBorderlineCountFieldSpecified;
            }
            set {
                this.vibrationBorderlineCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работници, изложени на вибрации над установените гранични стойности на експозиция:
        /// в т.ч.  предавани на системата ръка-рамо
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Брой работници, изложени на вибрации над установените гранични стойности на експо" +
            "зиция:\nв т.ч.  предавани на системата ръка-рамо")]
        public int VibrationArmShoulderCount {
            get {
                return this.vibrationArmShoulderCountField;
            }
            set {
                this.vibrationArmShoulderCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VibrationArmShoulderCountSpecified {
            get {
                return this.vibrationArmShoulderCountFieldSpecified;
            }
            set {
                this.vibrationArmShoulderCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работници, изложени на вибрации над установените гранични стойности на експозиция:
        /// в т.ч.  предавани на цялото тяло
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("Брой работници, изложени на вибрации над установените гранични стойности на експо" +
            "зиция:\nв т.ч.  предавани на цялото тяло")]
        public int VibrationWholeBodyCount {
            get {
                return this.vibrationWholeBodyCountField;
            }
            set {
                this.vibrationWholeBodyCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VibrationWholeBodyCountSpecified {
            get {
                return this.vibrationWholeBodyCountFieldSpecified;
            }
            set {
                this.vibrationWholeBodyCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи, на които е осигурено здравно наблюдение през годината
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи, на които е осигурено здравно наблюдение през годината")]
        public int HealthcareCount {
            get {
                return this.healthcareCountField;
            }
            set {
                this.healthcareCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HealthcareCountSpecified {
            get {
                return this.healthcareCountFieldSpecified;
            }
            set {
                this.healthcareCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Изключения съгласно чл. 9 на Наредба 3 от 5.05.2005 г. за минималните изисквания за осигуряване на здравето и безопасността на рабитещите при рискове, свързани с експозиция на вибрации, при които мерките по чл. 8, ал. 1 на наредбата не се прилагат (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DescriptionAttribute("Изключения съгласно чл. 9 на Наредба 3 от 5.05.2005 г. за минималните изисквания " +
            "за осигуряване на здравето и безопасността на рабитещите при рискове, свързани с" +
            " експозиция на вибрации, при които мерките по чл. 8, ал. 1 на наредбата не се пр" +
            "илагат (да/не)")]
        public bool ExceptionAvailable {
            get {
                return this.exceptionAvailableField;
            }
            set {
                this.exceptionAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExceptionAvailableSpecified {
            get {
                return this.exceptionAvailableFieldSpecified;
            }
            set {
                this.exceptionAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Причини за изключения съгласно чл. 9 на Наредба 3 от 5.05.2005 г. за минималните изисквания за осигуряване на здравето и безопасността на рабитещите при рискове, свързани с експозиция на вибрации, при които мерките по чл. 8, ал. 1 на наредбата не се прилагат
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        [System.ComponentModel.DescriptionAttribute(@"Причини за изключения съгласно чл. 9 на Наредба 3 от 5.05.2005 г. за минималните изисквания за осигуряване на здравето и безопасността на рабитещите при рискове, свързани с експозиция на вибрации, при които мерките по чл. 8, ал. 1 на наредбата не се прилагат")]
        public string ExceptionReason {
            get {
                return this.exceptionReasonField;
            }
            set {
                this.exceptionReasonField = value;
            }
        }
        
        /// <summary>
        /// Mетоди на работа с по-ниска експозиция на вибрации - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        [System.ComponentModel.DescriptionAttribute("Mетоди на работа с по-ниска експозиция на вибрации - да/не")]
        public bool VibrationExposureEscapeMethods {
            get {
                return this.vibrationExposureEscapeMethodsField;
            }
            set {
                this.vibrationExposureEscapeMethodsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VibrationExposureEscapeMethodsSpecified {
            get {
                return this.vibrationExposureEscapeMethodsFieldSpecified;
            }
            set {
                this.vibrationExposureEscapeMethodsFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Работно оборудване, генериращо възможно най-малко вибрации - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        [System.ComponentModel.DescriptionAttribute("Работно оборудване, генериращо възможно най-малко вибрации - да/не")]
        public bool VibrationExposureEscapeWorkEquipment {
            get {
                return this.vibrationExposureEscapeWorkEquipmentField;
            }
            set {
                this.vibrationExposureEscapeWorkEquipmentField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VibrationExposureEscapeWorkEquipmentSpecified {
            get {
                return this.vibrationExposureEscapeWorkEquipmentFieldSpecified;
            }
            set {
                this.vibrationExposureEscapeWorkEquipmentFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Допълнително оборудване, намаляващо риска от увреждания (седалки/ръкохватки) - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        [System.ComponentModel.DescriptionAttribute("Допълнително оборудване, намаляващо риска от увреждания (седалки/ръкохватки) - да" +
            "/не")]
        public bool VibrationExposureEscapeAdditionalEquipment {
            get {
                return this.vibrationExposureEscapeAdditionalEquipmentField;
            }
            set {
                this.vibrationExposureEscapeAdditionalEquipmentField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VibrationExposureEscapeAdditionalEquipmentSpecified {
            get {
                return this.vibrationExposureEscapeAdditionalEquipmentFieldSpecified;
            }
            set {
                this.vibrationExposureEscapeAdditionalEquipmentFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Програми за поддържане на работното оборудване - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        [System.ComponentModel.DescriptionAttribute("Програми за поддържане на работното оборудване - да/не")]
        public bool VibrationExposureEscapeMaintenance {
            get {
                return this.vibrationExposureEscapeMaintenanceField;
            }
            set {
                this.vibrationExposureEscapeMaintenanceField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VibrationExposureEscapeMaintenanceSpecified {
            get {
                return this.vibrationExposureEscapeMaintenanceFieldSpecified;
            }
            set {
                this.vibrationExposureEscapeMaintenanceFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Ограничаване на продължителността и интензивността на експозицията - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        [System.ComponentModel.DescriptionAttribute("Ограничаване на продължителността и интензивността на експозицията - да/не")]
        public bool VibrationExposureEscapeLimits {
            get {
                return this.vibrationExposureEscapeLimitsField;
            }
            set {
                this.vibrationExposureEscapeLimitsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VibrationExposureEscapeLimitsSpecified {
            get {
                return this.vibrationExposureEscapeLimitsFieldSpecified;
            }
            set {
                this.vibrationExposureEscapeLimitsFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Осигуряване на подходящи микроклиматични условия - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        [System.ComponentModel.DescriptionAttribute("Осигуряване на подходящи микроклиматични условия - да/не")]
        public bool VibrationExposureEscapeClimateConditions {
            get {
                return this.vibrationExposureEscapeClimateConditionsField;
            }
            set {
                this.vibrationExposureEscapeClimateConditionsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VibrationExposureEscapeClimateConditionsSpecified {
            get {
                return this.vibrationExposureEscapeClimateConditionsFieldSpecified;
            }
            set {
                this.vibrationExposureEscapeClimateConditionsFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// ЛПС, вкл. работно облекло, което предпазва експонираните работещи от студ и влага - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        [System.ComponentModel.DescriptionAttribute("ЛПС, вкл. работно облекло, което предпазва експонираните работещи от студ и влага" +
            " - да/не")]
        public bool VibrationExposureEscapeLps {
            get {
                return this.vibrationExposureEscapeLpsField;
            }
            set {
                this.vibrationExposureEscapeLpsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VibrationExposureEscapeLpsSpecified {
            get {
                return this.vibrationExposureEscapeLpsFieldSpecified;
            }
            set {
                this.vibrationExposureEscapeLpsFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Към момента на деклариране не са предприети мерки - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        [System.ComponentModel.DescriptionAttribute("Към момента на деклариране не са предприети мерки - да/не")]
        public bool VibrationExposureEscapeNoMeasures {
            get {
                return this.vibrationExposureEscapeNoMeasuresField;
            }
            set {
                this.vibrationExposureEscapeNoMeasuresField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VibrationExposureEscapeNoMeasuresSpecified {
            get {
                return this.vibrationExposureEscapeNoMeasuresFieldSpecified;
            }
            set {
                this.vibrationExposureEscapeNoMeasuresFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за избягване на риска от въздействие на вибрации (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за избягване на риска от въздействие на вибрации (да/не)")]
        public bool OtherMeasures {
            get {
                return this.otherMeasuresField;
            }
            set {
                this.otherMeasuresField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherMeasuresSpecified {
            get {
                return this.otherMeasuresFieldSpecified;
            }
            set {
                this.otherMeasuresFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за избягване на риска от въздействие на вибрации - Описание
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за избягване на риска от въздействие на вибрации - Описание")]
        public string OtherMeasuresDescription {
            get {
                return this.otherMeasuresDescriptionField;
            }
            set {
                this.otherMeasuresDescriptionField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class NoiseConditions {
        
        private int noiseExposureRiskEstimatedField;
        
        private bool noiseExposureRiskEstimatedFieldSpecified;
        
        private bool dailyNoiseExposureDataField;
        
        private bool dailyNoiseExposureDataFieldSpecified;
        
        private bool averageWeeklyNoiseExposureDataField;
        
        private bool averageWeeklyNoiseExposureDataFieldSpecified;
        
        private bool otherNoiseExposureDataField;
        
        private bool otherNoiseExposureDataFieldSpecified;
        
        private string otherNoiseExposureDataTextField;
        
        private bool constantNoiseExposureRiskField;
        
        private bool constantNoiseExposureRiskFieldSpecified;
        
        private bool variableNoiseExposureRiskField;
        
        private bool variableNoiseExposureRiskFieldSpecified;
        
        private bool combinedNoiseAndVibrationExposureField;
        
        private bool combinedNoiseAndVibrationExposureFieldSpecified;
        
        private bool combinedNoiseAndOtotoxicExposureField;
        
        private bool combinedNoiseAndOtotoxicExposureFieldSpecified;
        
        private int employeeCountOver80dBField;
        
        private bool employeeCountOver80dBFieldSpecified;
        
        private int employeeCountOver85dBField;
        
        private bool employeeCountOver85dBFieldSpecified;
        
        private int employeeCountOver87dBField;
        
        private bool employeeCountOver87dBFieldSpecified;
        
        private int audiometricTestedCountField;
        
        private bool audiometricTestedCountFieldSpecified;
        
        private bool exceptionAvailableField;
        
        private bool exceptionAvailableFieldSpecified;
        
        private string exceptionReasonField;
        
        private bool noiseExposureEscapeWorkPlacesField;
        
        private bool noiseExposureEscapeWorkPlacesFieldSpecified;
        
        private bool noiseExposureEscapeEquipmentField;
        
        private bool noiseExposureEscapeEquipmentFieldSpecified;
        
        private bool noiseExposureEscapeNewMethodsField;
        
        private bool noiseExposureEscapeNewMethodsFieldSpecified;
        
        private bool noiseExposureEscapeTechnicalEquipmentField;
        
        private bool noiseExposureEscapeTechnicalEquipmentFieldSpecified;
        
        private bool noiseExposureEscapeMaintenanceField;
        
        private bool noiseExposureEscapeMaintenanceFieldSpecified;
        
        private bool noiseExposureEscapeOrganizationField;
        
        private bool noiseExposureEscapeOrganizationFieldSpecified;
        
        private bool noiseExposureEscapeLpsField;
        
        private bool noiseExposureEscapeLpsFieldSpecified;
        
        private bool noiseExposureEscapeNoMeasuresField;
        
        private bool noiseExposureEscapeNoMeasuresFieldSpecified;
        
        private bool noiseExposureEscapeOthersField;
        
        private bool noiseExposureEscapeOthersFieldSpecified;
        
        private string noiseExposureEscapeOthersTextField;
        
        /// <summary>
        /// Оценен е рискът при експозиция на шум (да/не/няма необходимост)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Оценен е рискът при експозиция на шум (да/не/няма необходимост)")]
        public int NoiseExposureRiskEstimated {
            get {
                return this.noiseExposureRiskEstimatedField;
            }
            set {
                this.noiseExposureRiskEstimatedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoiseExposureRiskEstimatedSpecified {
            get {
                return this.noiseExposureRiskEstimatedFieldSpecified;
            }
            set {
                this.noiseExposureRiskEstimatedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Използвани данни при оценката на риска - дневно ниво на екпозиция на шум
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Използвани данни при оценката на риска - дневно ниво на екпозиция на шум")]
        public bool DailyNoiseExposureData {
            get {
                return this.dailyNoiseExposureDataField;
            }
            set {
                this.dailyNoiseExposureDataField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DailyNoiseExposureDataSpecified {
            get {
                return this.dailyNoiseExposureDataFieldSpecified;
            }
            set {
                this.dailyNoiseExposureDataFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Използвани данни при оценката на риска - средноседмично ниво на екпозиция на шум
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Използвани данни при оценката на риска - средноседмично ниво на екпозиция на шум")]
        public bool AverageWeeklyNoiseExposureData {
            get {
                return this.averageWeeklyNoiseExposureDataField;
            }
            set {
                this.averageWeeklyNoiseExposureDataField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AverageWeeklyNoiseExposureDataSpecified {
            get {
                return this.averageWeeklyNoiseExposureDataFieldSpecified;
            }
            set {
                this.averageWeeklyNoiseExposureDataFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Използвани данни при оценката на риска - друго ниво на екпозиция на шум (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("Използвани данни при оценката на риска - друго ниво на екпозиция на шум (да/не)")]
        public bool OtherNoiseExposureData {
            get {
                return this.otherNoiseExposureDataField;
            }
            set {
                this.otherNoiseExposureDataField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherNoiseExposureDataSpecified {
            get {
                return this.otherNoiseExposureDataFieldSpecified;
            }
            set {
                this.otherNoiseExposureDataFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Използвани данни при оценката на риска - друго ниво на експоцизия на шум - ОПИСАНИЕ.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("Използвани данни при оценката на риска - друго ниво на експоцизия на шум - ОПИСАН" +
            "ИЕ.")]
        public string OtherNoiseExposureDataText {
            get {
                return this.otherNoiseExposureDataTextField;
            }
            set {
                this.otherNoiseExposureDataTextField = value;
            }
        }
        
        /// <summary>
        /// При оценката на риска е определен риск, свързан с постоянен шум
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DescriptionAttribute("При оценката на риска е определен риск, свързан с постоянен шум")]
        public bool ConstantNoiseExposureRisk {
            get {
                return this.constantNoiseExposureRiskField;
            }
            set {
                this.constantNoiseExposureRiskField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstantNoiseExposureRiskSpecified {
            get {
                return this.constantNoiseExposureRiskFieldSpecified;
            }
            set {
                this.constantNoiseExposureRiskFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// При оценката на риска е определен риск, свързан с променлив шум
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        [System.ComponentModel.DescriptionAttribute("При оценката на риска е определен риск, свързан с променлив шум")]
        public bool VariableNoiseExposureRisk {
            get {
                return this.variableNoiseExposureRiskField;
            }
            set {
                this.variableNoiseExposureRiskField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VariableNoiseExposureRiskSpecified {
            get {
                return this.variableNoiseExposureRiskFieldSpecified;
            }
            set {
                this.variableNoiseExposureRiskFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// При оценката на риска е идентифициран повишен риск във връзка с възможна експозиция едновременно на шум и:
        /// - Вибрации
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        [System.ComponentModel.DescriptionAttribute("При оценката на риска е идентифициран повишен риск във връзка с възможна експозиц" +
            "ия едновременно на шум и:\n- Вибрации")]
        public bool CombinedNoiseAndVibrationExposure {
            get {
                return this.combinedNoiseAndVibrationExposureField;
            }
            set {
                this.combinedNoiseAndVibrationExposureField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CombinedNoiseAndVibrationExposureSpecified {
            get {
                return this.combinedNoiseAndVibrationExposureFieldSpecified;
            }
            set {
                this.combinedNoiseAndVibrationExposureFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// При оценката на риска е идентифициран повишен риск във връзка с възможна експозиция едновременно на шум и:
        /// - Ототоксични материали с професионален произход
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        [System.ComponentModel.DescriptionAttribute("При оценката на риска е идентифициран повишен риск във връзка с възможна експозиц" +
            "ия едновременно на шум и:\n- Ототоксични материали с професионален произход")]
        public bool CombinedNoiseAndOtotoxicExposure {
            get {
                return this.combinedNoiseAndOtotoxicExposureField;
            }
            set {
                this.combinedNoiseAndOtotoxicExposureField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CombinedNoiseAndOtotoxicExposureSpecified {
            get {
                return this.combinedNoiseAndOtotoxicExposureFieldSpecified;
            }
            set {
                this.combinedNoiseAndOtotoxicExposureFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работници, изложени на шум над 80 dB(A)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        [System.ComponentModel.DescriptionAttribute("Брой работници, изложени на шум над 80 dB(A)")]
        public int EmployeeCountOver80dB {
            get {
                return this.employeeCountOver80dBField;
            }
            set {
                this.employeeCountOver80dBField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployeeCountOver80dBSpecified {
            get {
                return this.employeeCountOver80dBFieldSpecified;
            }
            set {
                this.employeeCountOver80dBFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работници, изложени на шум над 85 dB(A)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        [System.ComponentModel.DescriptionAttribute("Брой работници, изложени на шум над 85 dB(A)")]
        public int EmployeeCountOver85dB {
            get {
                return this.employeeCountOver85dBField;
            }
            set {
                this.employeeCountOver85dBField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployeeCountOver85dBSpecified {
            get {
                return this.employeeCountOver85dBFieldSpecified;
            }
            set {
                this.employeeCountOver85dBFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работници, изложени на шум над 87 dB(A)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        [System.ComponentModel.DescriptionAttribute("Брой работници, изложени на шум над 87 dB(A)")]
        public int EmployeeCountOver87dB {
            get {
                return this.employeeCountOver87dBField;
            }
            set {
                this.employeeCountOver87dBField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployeeCountOver87dBSpecified {
            get {
                return this.employeeCountOver87dBFieldSpecified;
            }
            set {
                this.employeeCountOver87dBFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи, на които е осигурено здравно наблюдение и профилактично аудиометрично изследване през годината
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи, на които е осигурено здравно наблюдение и профилактично аудиометри" +
            "чно изследване през годината")]
        public int AudiometricTestedCount {
            get {
                return this.audiometricTestedCountField;
            }
            set {
                this.audiometricTestedCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AudiometricTestedCountSpecified {
            get {
                return this.audiometricTestedCountFieldSpecified;
            }
            set {
                this.audiometricTestedCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Изключения съгласно чл. 10 от Наредба 6 от 15.08.2005 г. за минималните изисквания за осигуряване на здравето и безопасността на работещите при рискове, свързани с експозиция на шум, при които изискванията по чл. 8, ал. 1, т. 1 и 2 и чл. 9 от наредбата не се прилагат (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        [System.ComponentModel.DescriptionAttribute(@"Изключения съгласно чл. 10 от Наредба 6 от 15.08.2005 г. за минималните изисквания за осигуряване на здравето и безопасността на работещите при рискове, свързани с експозиция на шум, при които изискванията по чл. 8, ал. 1, т. 1 и 2 и чл. 9 от наредбата не се прилагат (да/не)")]
        public bool ExceptionAvailable {
            get {
                return this.exceptionAvailableField;
            }
            set {
                this.exceptionAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExceptionAvailableSpecified {
            get {
                return this.exceptionAvailableFieldSpecified;
            }
            set {
                this.exceptionAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Причини за изключения съгласно чл. 10 от Наредба 6 от 15.08.2005 г. за минималните изисквания за осигуряване на здравето и безопасността на работещите при рискове, свързани с експозиция на шум, при които изискванията по чл. 8, ал. 1, т. 1 и 2 и чл. 9 от наредбата не се прилагат
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        [System.ComponentModel.DescriptionAttribute(@"Причини за изключения съгласно чл. 10 от Наредба 6 от 15.08.2005 г. за минималните изисквания за осигуряване на здравето и безопасността на работещите при рискове, свързани с експозиция на шум, при които изискванията по чл. 8, ал. 1, т. 1 и 2 и чл. 9 от наредбата не се прилагат")]
        public string ExceptionReason {
            get {
                return this.exceptionReasonField;
            }
            set {
                this.exceptionReasonField = value;
            }
        }
        
        /// <summary>
        /// Проектиране и разположение на работните места - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        [System.ComponentModel.DescriptionAttribute("Проектиране и разположение на работните места - да/не")]
        public bool NoiseExposureEscapeWorkPlaces {
            get {
                return this.noiseExposureEscapeWorkPlacesField;
            }
            set {
                this.noiseExposureEscapeWorkPlacesField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoiseExposureEscapeWorkPlacesSpecified {
            get {
                return this.noiseExposureEscapeWorkPlacesFieldSpecified;
            }
            set {
                this.noiseExposureEscapeWorkPlacesFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Избор на подходящо оборудване - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        [System.ComponentModel.DescriptionAttribute("Избор на подходящо оборудване - да/не")]
        public bool NoiseExposureEscapeEquipment {
            get {
                return this.noiseExposureEscapeEquipmentField;
            }
            set {
                this.noiseExposureEscapeEquipmentField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoiseExposureEscapeEquipmentSpecified {
            get {
                return this.noiseExposureEscapeEquipmentFieldSpecified;
            }
            set {
                this.noiseExposureEscapeEquipmentFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Нов метод на работа с по-ниска експозиция на шум - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        [System.ComponentModel.DescriptionAttribute("Нов метод на работа с по-ниска експозиция на шум - да/не")]
        public bool NoiseExposureEscapeNewMethods {
            get {
                return this.noiseExposureEscapeNewMethodsField;
            }
            set {
                this.noiseExposureEscapeNewMethodsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoiseExposureEscapeNewMethodsSpecified {
            get {
                return this.noiseExposureEscapeNewMethodsFieldSpecified;
            }
            set {
                this.noiseExposureEscapeNewMethodsFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Tехнически средства за ограничаване на шума - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        [System.ComponentModel.DescriptionAttribute("Tехнически средства за ограничаване на шума - да/не")]
        public bool NoiseExposureEscapeTechnicalEquipment {
            get {
                return this.noiseExposureEscapeTechnicalEquipmentField;
            }
            set {
                this.noiseExposureEscapeTechnicalEquipmentField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoiseExposureEscapeTechnicalEquipmentSpecified {
            get {
                return this.noiseExposureEscapeTechnicalEquipmentFieldSpecified;
            }
            set {
                this.noiseExposureEscapeTechnicalEquipmentFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Програми за поддържане на работното оборудване - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        [System.ComponentModel.DescriptionAttribute("Програми за поддържане на работното оборудване - да/не")]
        public bool NoiseExposureEscapeMaintenance {
            get {
                return this.noiseExposureEscapeMaintenanceField;
            }
            set {
                this.noiseExposureEscapeMaintenanceField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoiseExposureEscapeMaintenanceSpecified {
            get {
                return this.noiseExposureEscapeMaintenanceFieldSpecified;
            }
            set {
                this.noiseExposureEscapeMaintenanceFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Организация на работата - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        [System.ComponentModel.DescriptionAttribute("Организация на работата - да/не")]
        public bool NoiseExposureEscapeOrganization {
            get {
                return this.noiseExposureEscapeOrganizationField;
            }
            set {
                this.noiseExposureEscapeOrganizationField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoiseExposureEscapeOrganizationSpecified {
            get {
                return this.noiseExposureEscapeOrganizationFieldSpecified;
            }
            set {
                this.noiseExposureEscapeOrganizationFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// ЛПС - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        [System.ComponentModel.DescriptionAttribute("ЛПС - да/не")]
        public bool NoiseExposureEscapeLps {
            get {
                return this.noiseExposureEscapeLpsField;
            }
            set {
                this.noiseExposureEscapeLpsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoiseExposureEscapeLpsSpecified {
            get {
                return this.noiseExposureEscapeLpsFieldSpecified;
            }
            set {
                this.noiseExposureEscapeLpsFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Към момента на деклариране не са предприети мерки - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        [System.ComponentModel.DescriptionAttribute("Към момента на деклариране не са предприети мерки - да/не")]
        public bool NoiseExposureEscapeNoMeasures {
            get {
                return this.noiseExposureEscapeNoMeasuresField;
            }
            set {
                this.noiseExposureEscapeNoMeasuresField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoiseExposureEscapeNoMeasuresSpecified {
            get {
                return this.noiseExposureEscapeNoMeasuresFieldSpecified;
            }
            set {
                this.noiseExposureEscapeNoMeasuresFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за избягване или намаляване на риска от експозиция на шум - други (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за избягване или намаляване на риска от експозиция на шум - друг" +
            "и (да/не)")]
        public bool NoiseExposureEscapeOthers {
            get {
                return this.noiseExposureEscapeOthersField;
            }
            set {
                this.noiseExposureEscapeOthersField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoiseExposureEscapeOthersSpecified {
            get {
                return this.noiseExposureEscapeOthersFieldSpecified;
            }
            set {
                this.noiseExposureEscapeOthersFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Предприети мерки за избягване или намаляване на риска от експозиция на шум - други (описание)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        [System.ComponentModel.DescriptionAttribute("Предприети мерки за избягване или намаляване на риска от експозиция на шум - друг" +
            "и (описание)")]
        public string NoiseExposureEscapeOthersText {
            get {
                return this.noiseExposureEscapeOthersTextField;
            }
            set {
                this.noiseExposureEscapeOthersTextField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class WorkWithMonitors {
        
        private int workWithMonitorRiskEstimatedField;
        
        private bool workWithMonitorRiskEstimatedFieldSpecified;
        
        private int workWithMonitorEmployeeCountField;
        
        private bool workWithMonitorEmployeeCountFieldSpecified;
        
        private int moreWorkWithMonitorCountField;
        
        private bool moreWorkWithMonitorCountFieldSpecified;
        
        private int visionTestEmployeeCountField;
        
        private bool visionTestEmployeeCountFieldSpecified;
        
        private int visionComplainCountField;
        
        private bool visionComplainCountFieldSpecified;
        
        private int visionCorrectionMeansCountField;
        
        private bool visionCorrectionMeansCountFieldSpecified;
        
        /// <summary>
        /// Оценен е рискът на работните места с видеодисплеи (да/не/няма такива работни места)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Оценен е рискът на работните места с видеодисплеи (да/не/няма такива работни мест" +
            "а)")]
        public int WorkWithMonitorRiskEstimated {
            get {
                return this.workWithMonitorRiskEstimatedField;
            }
            set {
                this.workWithMonitorRiskEstimatedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkWithMonitorRiskEstimatedSpecified {
            get {
                return this.workWithMonitorRiskEstimatedFieldSpecified;
            }
            set {
                this.workWithMonitorRiskEstimatedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Общ брой работещи, които работят с видеодисплеи
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Общ брой работещи, които работят с видеодисплеи")]
        public int WorkWithMonitorEmployeeCount {
            get {
                return this.workWithMonitorEmployeeCountField;
            }
            set {
                this.workWithMonitorEmployeeCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkWithMonitorEmployeeCountSpecified {
            get {
                return this.workWithMonitorEmployeeCountFieldSpecified;
            }
            set {
                this.workWithMonitorEmployeeCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// (в т.ч.) Брой работещи, които работят с видеодисплеи през повече от половината от законоустановеното работно време
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("(в т.ч.) Брой работещи, които работят с видеодисплеи през повече от половината от" +
            " законоустановеното работно време")]
        public int MoreWorkWithMonitorCount {
            get {
                return this.moreWorkWithMonitorCountField;
            }
            set {
                this.moreWorkWithMonitorCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MoreWorkWithMonitorCountSpecified {
            get {
                return this.moreWorkWithMonitorCountFieldSpecified;
            }
            set {
                this.moreWorkWithMonitorCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи, на които през годината е осигурен преглед на очите и оценка на състоянието на зрението
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи, на които през годината е осигурен преглед на очите и оценка на със" +
            "тоянието на зрението")]
        public int VisionTestEmployeeCount {
            get {
                return this.visionTestEmployeeCountField;
            }
            set {
                this.visionTestEmployeeCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisionTestEmployeeCountSpecified {
            get {
                return this.visionTestEmployeeCountFieldSpecified;
            }
            set {
                this.visionTestEmployeeCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// (в т.ч.) Брой работещи, на които през годината е осигурен преглед на очите и оценка на състоянието на зрението при оплакване
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("(в т.ч.) Брой работещи, на които през годината е осигурен преглед на очите и оцен" +
            "ка на състоянието на зрението при оплакване")]
        public int VisionComplainCount {
            get {
                return this.visionComplainCountField;
            }
            set {
                this.visionComplainCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisionComplainCountSpecified {
            get {
                return this.visionComplainCountFieldSpecified;
            }
            set {
                this.visionComplainCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Общ брой осигурени средства за корекция на зрението през годината
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DescriptionAttribute("Общ брой осигурени средства за корекция на зрението през годината")]
        public int VisionCorrectionMeansCount {
            get {
                return this.visionCorrectionMeansCountField;
            }
            set {
                this.visionCorrectionMeansCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisionCorrectionMeansCountSpecified {
            get {
                return this.visionCorrectionMeansCountFieldSpecified;
            }
            set {
                this.visionCorrectionMeansCountFieldSpecified = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class ManualWeightWork {
        
        private int manualWeightRiskEstimatedField;
        
        private bool manualWeightRiskEstimatedFieldSpecified;
        
        private int weightWorkEmployeeCountField;
        
        private bool weightWorkEmployeeCountFieldSpecified;
        
        private int weightWorkWomenCountField;
        
        private bool weightWorkWomenCountFieldSpecified;
        
        private int weightWorkMenCountField;
        
        private bool weightWorkMenCountFieldSpecified;
        
        private bool organisationalMeasuresTakenField;
        
        private bool organisationalMeasuresTakenFieldSpecified;
        
        private bool organisationalMeasuresConsultationsField;
        
        private bool organisationalMeasuresConsultationsFieldSpecified;
        
        private bool organisationalMeasuresTrainingsField;
        
        private bool organisationalMeasuresTrainingsFieldSpecified;
        
        private bool organisationalMeasuresAdditionalInformationField;
        
        private bool organisationalMeasuresAdditionalInformationFieldSpecified;
        
        private bool organisationalMeasuresOthersField;
        
        private bool organisationalMeasuresOthersFieldSpecified;
        
        private string organisationalMeasuresOthersTextField;
        
        private bool technicalEquipmentSuppliedField;
        
        private bool technicalEquipmentSuppliedFieldSpecified;
        
        private bool measuresNotTakenField;
        
        private bool measuresNotTakenFieldSpecified;
        
        private int medicalEvaluationCountField;
        
        private bool medicalEvaluationCountFieldSpecified;
        
        private string technicalEquipmentField;
        
        /// <summary>
        /// Оценен е рискът при ръчна работа с тежести (да/не/не се извършва РРТ)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Оценен е рискът при ръчна работа с тежести (да/не/не се извършва РРТ)")]
        public int ManualWeightRiskEstimated {
            get {
                return this.manualWeightRiskEstimatedField;
            }
            set {
                this.manualWeightRiskEstimatedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ManualWeightRiskEstimatedSpecified {
            get {
                return this.manualWeightRiskEstimatedFieldSpecified;
            }
            set {
                this.manualWeightRiskEstimatedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Общ брой работещи, извършващи редовна ръчна работа с тежести
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Общ брой работещи, извършващи редовна ръчна работа с тежести")]
        public int WeightWorkEmployeeCount {
            get {
                return this.weightWorkEmployeeCountField;
            }
            set {
                this.weightWorkEmployeeCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WeightWorkEmployeeCountSpecified {
            get {
                return this.weightWorkEmployeeCountFieldSpecified;
            }
            set {
                this.weightWorkEmployeeCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Общ брой работещи жени, извършващи редовна ръчна работа с тежести
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Общ брой работещи жени, извършващи редовна ръчна работа с тежести")]
        public int WeightWorkWomenCount {
            get {
                return this.weightWorkWomenCountField;
            }
            set {
                this.weightWorkWomenCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WeightWorkWomenCountSpecified {
            get {
                return this.weightWorkWomenCountFieldSpecified;
            }
            set {
                this.weightWorkWomenCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Общ брой работещи мъже, извършващи редовна ръчна работа с тежести
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("Общ брой работещи мъже, извършващи редовна ръчна работа с тежести")]
        public int WeightWorkMenCount {
            get {
                return this.weightWorkMenCountField;
            }
            set {
                this.weightWorkMenCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WeightWorkMenCountSpecified {
            get {
                return this.weightWorkMenCountFieldSpecified;
            }
            set {
                this.weightWorkMenCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// За избягване/ограничаване на ръчната работа с тежести са предприети/осигурени организационни мерки (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("За избягване/ограничаване на ръчната работа с тежести са предприети/осигурени орг" +
            "анизационни мерки (да/не)")]
        public bool OrganisationalMeasuresTaken {
            get {
                return this.organisationalMeasuresTakenField;
            }
            set {
                this.organisationalMeasuresTakenField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganisationalMeasuresTakenSpecified {
            get {
                return this.organisationalMeasuresTakenFieldSpecified;
            }
            set {
                this.organisationalMeasuresTakenFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// За избягване/ограничаване на ръчната работа с тежести са предприети/осигурени консултации с работещите и/или техните представители - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DescriptionAttribute("За избягване/ограничаване на ръчната работа с тежести са предприети/осигурени кон" +
            "султации с работещите и/или техните представители - да/не")]
        public bool OrganisationalMeasuresConsultations {
            get {
                return this.organisationalMeasuresConsultationsField;
            }
            set {
                this.organisationalMeasuresConsultationsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganisationalMeasuresConsultationsSpecified {
            get {
                return this.organisationalMeasuresConsultationsFieldSpecified;
            }
            set {
                this.organisationalMeasuresConsultationsFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// За избягване/ограничаване на ръчната работа с тежести са предприети/осигурени обучения - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        [System.ComponentModel.DescriptionAttribute("За избягване/ограничаване на ръчната работа с тежести са предприети/осигурени обу" +
            "чения - да/не")]
        public bool OrganisationalMeasuresTrainings {
            get {
                return this.organisationalMeasuresTrainingsField;
            }
            set {
                this.organisationalMeasuresTrainingsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganisationalMeasuresTrainingsSpecified {
            get {
                return this.organisationalMeasuresTrainingsFieldSpecified;
            }
            set {
                this.organisationalMeasuresTrainingsFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// За избягване/ограничаване на ръчната работа с тежести е предприето/осигурено предоставяне на информация - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        [System.ComponentModel.DescriptionAttribute("За избягване/ограничаване на ръчната работа с тежести е предприето/осигурено пред" +
            "оставяне на информация - да/не")]
        public bool OrganisationalMeasuresAdditionalInformation {
            get {
                return this.organisationalMeasuresAdditionalInformationField;
            }
            set {
                this.organisationalMeasuresAdditionalInformationField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganisationalMeasuresAdditionalInformationSpecified {
            get {
                return this.organisationalMeasuresAdditionalInformationFieldSpecified;
            }
            set {
                this.organisationalMeasuresAdditionalInformationFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// За избягване/ограничаване на ръчната работа с тежести са предприети/осигурени : други - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        [System.ComponentModel.DescriptionAttribute("За избягване/ограничаване на ръчната работа с тежести са предприети/осигурени : д" +
            "руги - да/не")]
        public bool OrganisationalMeasuresOthers {
            get {
                return this.organisationalMeasuresOthersField;
            }
            set {
                this.organisationalMeasuresOthersField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganisationalMeasuresOthersSpecified {
            get {
                return this.organisationalMeasuresOthersFieldSpecified;
            }
            set {
                this.organisationalMeasuresOthersFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// За избягване/ограничаване на ръчната работа с тежести са предприети/осигурени : други - описание
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        [System.ComponentModel.DescriptionAttribute("За избягване/ограничаване на ръчната работа с тежести са предприети/осигурени : д" +
            "руги - описание")]
        public string OrganisationalMeasuresOthersText {
            get {
                return this.organisationalMeasuresOthersTextField;
            }
            set {
                this.organisationalMeasuresOthersTextField = value;
            }
        }
        
        /// <summary>
        /// За избягване/ограничаване на ръчната работа с тежести са предприети/осигурени технически средства/оборудване (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        [System.ComponentModel.DescriptionAttribute("За избягване/ограничаване на ръчната работа с тежести са предприети/осигурени тех" +
            "нически средства/оборудване (да/не)")]
        public bool TechnicalEquipmentSupplied {
            get {
                return this.technicalEquipmentSuppliedField;
            }
            set {
                this.technicalEquipmentSuppliedField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TechnicalEquipmentSuppliedSpecified {
            get {
                return this.technicalEquipmentSuppliedFieldSpecified;
            }
            set {
                this.technicalEquipmentSuppliedFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// За избягване/ограничаване на ръчната работа с тежести към момента на деклариране не са предприети мерки (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        [System.ComponentModel.DescriptionAttribute("За избягване/ограничаване на ръчната работа с тежести към момента на деклариране " +
            "не са предприети мерки (да/не)")]
        public bool MeasuresNotTaken {
            get {
                return this.measuresNotTakenField;
            }
            set {
                this.measuresNotTakenField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MeasuresNotTakenSpecified {
            get {
                return this.measuresNotTakenFieldSpecified;
            }
            set {
                this.measuresNotTakenFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи, на които е извършена предварителна медицинска оценка за извършване на ръчна работа с тежести
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи, на които е извършена предварителна медицинска оценка за извършване" +
            " на ръчна работа с тежести")]
        public int MedicalEvaluationCount {
            get {
                return this.medicalEvaluationCountField;
            }
            set {
                this.medicalEvaluationCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MedicalEvaluationCountSpecified {
            get {
                return this.medicalEvaluationCountFieldSpecified;
            }
            set {
                this.medicalEvaluationCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Технически средства/оборудване, осигурени за избягване/ограничаване на ръчната работа с тежести - описание
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        [System.ComponentModel.DescriptionAttribute("Технически средства/оборудване, осигурени за избягване/ограничаване на ръчната ра" +
            "бота с тежести - описание")]
        public string TechnicalEquipment {
            get {
                return this.technicalEquipmentField;
            }
            set {
                this.technicalEquipmentField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class LabourConditions {
        
        private int dustRiskCountField;
        
        private bool dustRiskCountFieldSpecified;
        
        private int chemicalAgentsRiskCountField;
        
        private bool chemicalAgentsRiskCountFieldSpecified;
        
        private int nanomaterialRiskCountField;
        
        private bool nanomaterialRiskCountFieldSpecified;
        
        private int cancerRiskCountField;
        
        private bool cancerRiskCountFieldSpecified;
        
        private int asbestosRiskCountField;
        
        private bool asbestosRiskCountFieldSpecified;
        
        private int biologicalAgentsRiskCountField;
        
        private bool biologicalAgentsRiskCountFieldSpecified;
        
        private int noiseRiskCountField;
        
        private bool noiseRiskCountFieldSpecified;
        
        private int vibrationRiskCountField;
        
        private bool vibrationRiskCountFieldSpecified;
        
        private int ionizingRadiationRiskCountField;
        
        private bool ionizingRadiationRiskCountFieldSpecified;
        
        private int workPlacesCountField;
        
        private bool workPlacesCountFieldSpecified;
        
        private int electromagneticRadiationRiskCountField;
        
        private bool electromagneticRadiationRiskCountFieldSpecified;
        
        private int mobileWorkPlacesCountField;
        
        private bool mobileWorkPlacesCountFieldSpecified;
        
        private int homeWorkPlacesCountField;
        
        private bool homeWorkPlacesCountFieldSpecified;
        
        private int laserRadiationRiskCountField;
        
        private bool laserRadiationRiskCountFieldSpecified;
        
        private int otherRadiationRiskCountField;
        
        private bool otherRadiationRiskCountFieldSpecified;
        
        private int outdoorsWorkPlacesCountField;
        
        private bool outdoorsWorkPlacesCountFieldSpecified;
        
        private int outdoorsWorkPlacesWomenField;
        
        private bool outdoorsWorkPlacesWomenFieldSpecified;
        
        private int outdoorsWorkPlacesMenField;
        
        private bool outdoorsWorkPlacesMenFieldSpecified;
        
        private int phisicalWorkRiskCountField;
        
        private bool phisicalWorkRiskCountFieldSpecified;
        
        private int weightLoadRiskCountField;
        
        private bool weightLoadRiskCountFieldSpecified;
        
        private int illuminationRiskCountField;
        
        private bool illuminationRiskCountFieldSpecified;
        
        private int undergroundWorkPlacesCountField;
        
        private bool undergroundWorkPlacesCountFieldSpecified;
        
        private int undergroundWorkPlacesWomenField;
        
        private bool undergroundWorkPlacesWomenFieldSpecified;
        
        private int undergroundWorkPlacesMenField;
        
        private bool undergroundWorkPlacesMenFieldSpecified;
        
        private int microclimateRiskCountField;
        
        private bool microclimateRiskCountFieldSpecified;
        
        private int explosivesRiskCountField;
        
        private bool explosivesRiskCountFieldSpecified;
        
        private int firesRiskCountField;
        
        private bool firesRiskCountFieldSpecified;
        
        private int onairWorkPlacesCountField;
        
        private bool onairWorkPlacesCountFieldSpecified;
        
        private int onairWorkPlacesWomenField;
        
        private bool onairWorkPlacesWomenFieldSpecified;
        
        private int onairWorkPlacesMenField;
        
        private bool onairWorkPlacesMenFieldSpecified;
        
        private int waterWorkPlacesCountField;
        
        private bool waterWorkPlacesCountFieldSpecified;
        
        private int waterWorkPlacesWomenField;
        
        private bool waterWorkPlacesWomenFieldSpecified;
        
        private int waterWorkPlacesMenField;
        
        private bool waterWorkPlacesMenFieldSpecified;
        
        private int shiftWorkCountField;
        
        private bool shiftWorkCountFieldSpecified;
        
        private int nightWorkCountField;
        
        private bool nightWorkCountFieldSpecified;
        
        private int dutyWorkCountField;
        
        private bool dutyWorkCountFieldSpecified;
        
        private int onCallWorkCountField;
        
        private bool onCallWorkCountFieldSpecified;
        
        private bool electricityRiskAvailableField;
        
        private bool electricityRiskAvailableFieldSpecified;
        
        private bool machineEquipmentRiskAvailableField;
        
        private bool machineEquipmentRiskAvailableFieldSpecified;
        
        private bool highVoltageRiskAvailableField;
        
        private bool highVoltageRiskAvailableFieldSpecified;
        
        private bool transportMeansRiskAvailableField;
        
        private bool transportMeansRiskAvailableFieldSpecified;
        
        private bool pressureRiskAvailableField;
        
        private bool pressureRiskAvailableFieldSpecified;
        
        private bool liftingEquipmentRiskAvailableField;
        
        private bool liftingEquipmentRiskAvailableFieldSpecified;
        
        private bool ropeWayRiskAvailableField;
        
        private bool ropeWayRiskAvailableFieldSpecified;
        
        private bool contsructionRiskAvailableField;
        
        private bool contsructionRiskAvailableFieldSpecified;
        
        private bool movingPlatformRiskAvailableField;
        
        private bool movingPlatformRiskAvailableFieldSpecified;
        
        private bool otherRiskAvailableField;
        
        private bool otherRiskAvailableFieldSpecified;
        
        private string otherRiskDescriptionField;
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - прах
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - п" +
            "рах")]
        public int DustRiskCount {
            get {
                return this.dustRiskCountField;
            }
            set {
                this.dustRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DustRiskCountSpecified {
            get {
                return this.dustRiskCountFieldSpecified;
            }
            set {
                this.dustRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - химически агенти
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - х" +
            "имически агенти")]
        public int ChemicalAgentsRiskCount {
            get {
                return this.chemicalAgentsRiskCountField;
            }
            set {
                this.chemicalAgentsRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChemicalAgentsRiskCountSpecified {
            get {
                return this.chemicalAgentsRiskCountFieldSpecified;
            }
            set {
                this.chemicalAgentsRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - работа с наноматериали
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - р" +
            "абота с наноматериали")]
        public int NanomaterialRiskCount {
            get {
                return this.nanomaterialRiskCountField;
            }
            set {
                this.nanomaterialRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NanomaterialRiskCountSpecified {
            get {
                return this.nanomaterialRiskCountFieldSpecified;
            }
            set {
                this.nanomaterialRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - канцерогени и мутагени
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - к" +
            "анцерогени и мутагени")]
        public int CancerRiskCount {
            get {
                return this.cancerRiskCountField;
            }
            set {
                this.cancerRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CancerRiskCountSpecified {
            get {
                return this.cancerRiskCountFieldSpecified;
            }
            set {
                this.cancerRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - азбест
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - а" +
            "збест")]
        public int AsbestosRiskCount {
            get {
                return this.asbestosRiskCountField;
            }
            set {
                this.asbestosRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsbestosRiskCountSpecified {
            get {
                return this.asbestosRiskCountFieldSpecified;
            }
            set {
                this.asbestosRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - биологични агенти
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - б" +
            "иологични агенти")]
        public int BiologicalAgentsRiskCount {
            get {
                return this.biologicalAgentsRiskCountField;
            }
            set {
                this.biologicalAgentsRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BiologicalAgentsRiskCountSpecified {
            get {
                return this.biologicalAgentsRiskCountFieldSpecified;
            }
            set {
                this.biologicalAgentsRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - шум
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - ш" +
            "ум")]
        public int NoiseRiskCount {
            get {
                return this.noiseRiskCountField;
            }
            set {
                this.noiseRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoiseRiskCountSpecified {
            get {
                return this.noiseRiskCountFieldSpecified;
            }
            set {
                this.noiseRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - вибрации
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - в" +
            "ибрации")]
        public int VibrationRiskCount {
            get {
                return this.vibrationRiskCountField;
            }
            set {
                this.vibrationRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VibrationRiskCountSpecified {
            get {
                return this.vibrationRiskCountFieldSpecified;
            }
            set {
                this.vibrationRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - източници на йонизиращи лъчения
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - и" +
            "зточници на йонизиращи лъчения")]
        public int IonizingRadiationRiskCount {
            get {
                return this.ionizingRadiationRiskCountField;
            }
            set {
                this.ionizingRadiationRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IonizingRadiationRiskCountSpecified {
            get {
                return this.ionizingRadiationRiskCountFieldSpecified;
            }
            set {
                this.ionizingRadiationRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Общ брой работни места
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        [System.ComponentModel.DescriptionAttribute("Общ брой работни места")]
        public int WorkPlacesCount {
            get {
                return this.workPlacesCountField;
            }
            set {
                this.workPlacesCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkPlacesCountSpecified {
            get {
                return this.workPlacesCountFieldSpecified;
            }
            set {
                this.workPlacesCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - електромагнитни лъчения
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - е" +
            "лектромагнитни лъчения")]
        public int ElectromagneticRadiationRiskCount {
            get {
                return this.electromagneticRadiationRiskCountField;
            }
            set {
                this.electromagneticRadiationRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ElectromagneticRadiationRiskCountSpecified {
            get {
                return this.electromagneticRadiationRiskCountFieldSpecified;
            }
            set {
                this.electromagneticRadiationRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой подвижни работни места (част от Общ брой работни места)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        [System.ComponentModel.DescriptionAttribute("Брой подвижни работни места (част от Общ брой работни места)")]
        public int MobileWorkPlacesCount {
            get {
                return this.mobileWorkPlacesCountField;
            }
            set {
                this.mobileWorkPlacesCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MobileWorkPlacesCountSpecified {
            get {
                return this.mobileWorkPlacesCountFieldSpecified;
            }
            set {
                this.mobileWorkPlacesCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работни места за надомна работа (част от Общ брой работни места)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        [System.ComponentModel.DescriptionAttribute("Брой работни места за надомна работа (част от Общ брой работни места)")]
        public int HomeWorkPlacesCount {
            get {
                return this.homeWorkPlacesCountField;
            }
            set {
                this.homeWorkPlacesCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeWorkPlacesCountSpecified {
            get {
                return this.homeWorkPlacesCountFieldSpecified;
            }
            set {
                this.homeWorkPlacesCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - лазерни оптични лъчения
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - л" +
            "азерни оптични лъчения")]
        public int LaserRadiationRiskCount {
            get {
                return this.laserRadiationRiskCountField;
            }
            set {
                this.laserRadiationRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LaserRadiationRiskCountSpecified {
            get {
                return this.laserRadiationRiskCountFieldSpecified;
            }
            set {
                this.laserRadiationRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - други вредни лъчения
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - д" +
            "руги вредни лъчения")]
        public int OtherRadiationRiskCount {
            get {
                return this.otherRadiationRiskCountField;
            }
            set {
                this.otherRadiationRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherRadiationRiskCountSpecified {
            get {
                return this.otherRadiationRiskCountFieldSpecified;
            }
            set {
                this.otherRadiationRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Работни места, свързани с работа на открито - общ брой
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        [System.ComponentModel.DescriptionAttribute("Работни места, свързани с работа на открито - общ брой")]
        public int OutdoorsWorkPlacesCount {
            get {
                return this.outdoorsWorkPlacesCountField;
            }
            set {
                this.outdoorsWorkPlacesCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutdoorsWorkPlacesCountSpecified {
            get {
                return this.outdoorsWorkPlacesCountFieldSpecified;
            }
            set {
                this.outdoorsWorkPlacesCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работни места за жени, свързани с работа на открито
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        [System.ComponentModel.DescriptionAttribute("Брой работни места за жени, свързани с работа на открито")]
        public int OutdoorsWorkPlacesWomen {
            get {
                return this.outdoorsWorkPlacesWomenField;
            }
            set {
                this.outdoorsWorkPlacesWomenField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutdoorsWorkPlacesWomenSpecified {
            get {
                return this.outdoorsWorkPlacesWomenFieldSpecified;
            }
            set {
                this.outdoorsWorkPlacesWomenFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работни места за мъже, свързани с работа на открито
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        [System.ComponentModel.DescriptionAttribute("Брой работни места за мъже, свързани с работа на открито")]
        public int OutdoorsWorkPlacesMen {
            get {
                return this.outdoorsWorkPlacesMenField;
            }
            set {
                this.outdoorsWorkPlacesMenField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutdoorsWorkPlacesMenSpecified {
            get {
                return this.outdoorsWorkPlacesMenFieldSpecified;
            }
            set {
                this.outdoorsWorkPlacesMenFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - физическа натовареност
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - ф" +
            "изическа натовареност")]
        public int PhisicalWorkRiskCount {
            get {
                return this.phisicalWorkRiskCountField;
            }
            set {
                this.phisicalWorkRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhisicalWorkRiskCountSpecified {
            get {
                return this.phisicalWorkRiskCountFieldSpecified;
            }
            set {
                this.phisicalWorkRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - ръчна работа с тежести
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - р" +
            "ъчна работа с тежести")]
        public int WeightLoadRiskCount {
            get {
                return this.weightLoadRiskCountField;
            }
            set {
                this.weightLoadRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WeightLoadRiskCountSpecified {
            get {
                return this.weightLoadRiskCountFieldSpecified;
            }
            set {
                this.weightLoadRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - осветеност
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - о" +
            "светеност")]
        public int IlluminationRiskCount {
            get {
                return this.illuminationRiskCountField;
            }
            set {
                this.illuminationRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IlluminationRiskCountSpecified {
            get {
                return this.illuminationRiskCountFieldSpecified;
            }
            set {
                this.illuminationRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Работни места, свързани с работа под земята - общ брой
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        [System.ComponentModel.DescriptionAttribute("Работни места, свързани с работа под земята - общ брой")]
        public int UndergroundWorkPlacesCount {
            get {
                return this.undergroundWorkPlacesCountField;
            }
            set {
                this.undergroundWorkPlacesCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UndergroundWorkPlacesCountSpecified {
            get {
                return this.undergroundWorkPlacesCountFieldSpecified;
            }
            set {
                this.undergroundWorkPlacesCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работни места за жени, свързани с работа под земята
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        [System.ComponentModel.DescriptionAttribute("Брой работни места за жени, свързани с работа под земята")]
        public int UndergroundWorkPlacesWomen {
            get {
                return this.undergroundWorkPlacesWomenField;
            }
            set {
                this.undergroundWorkPlacesWomenField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UndergroundWorkPlacesWomenSpecified {
            get {
                return this.undergroundWorkPlacesWomenFieldSpecified;
            }
            set {
                this.undergroundWorkPlacesWomenFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работни места за мъже, свързани с работа под земята
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        [System.ComponentModel.DescriptionAttribute("Брой работни места за мъже, свързани с работа под земята")]
        public int UndergroundWorkPlacesMen {
            get {
                return this.undergroundWorkPlacesMenField;
            }
            set {
                this.undergroundWorkPlacesMenField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UndergroundWorkPlacesMenSpecified {
            get {
                return this.undergroundWorkPlacesMenFieldSpecified;
            }
            set {
                this.undergroundWorkPlacesMenFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - неблагоприятен микроклимат
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - н" +
            "еблагоприятен микроклимат")]
        public int MicroclimateRiskCount {
            get {
                return this.microclimateRiskCountField;
            }
            set {
                this.microclimateRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MicroclimateRiskCountSpecified {
            get {
                return this.microclimateRiskCountFieldSpecified;
            }
            set {
                this.microclimateRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - взривоопасна среда
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - в" +
            "зривоопасна среда")]
        public int ExplosivesRiskCount {
            get {
                return this.explosivesRiskCountField;
            }
            set {
                this.explosivesRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExplosivesRiskCountSpecified {
            get {
                return this.explosivesRiskCountFieldSpecified;
            }
            set {
                this.explosivesRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи в условия на опасности/източници на опасност с риск за здравето - пожароопасна среда
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи в условия на опасности/източници на опасност с риск за здравето - п" +
            "ожароопасна среда")]
        public int FiresRiskCount {
            get {
                return this.firesRiskCountField;
            }
            set {
                this.firesRiskCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiresRiskCountSpecified {
            get {
                return this.firesRiskCountFieldSpecified;
            }
            set {
                this.firesRiskCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Работни места, свързани с работа във въздуха - общ брой
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        [System.ComponentModel.DescriptionAttribute("Работни места, свързани с работа във въздуха - общ брой")]
        public int OnairWorkPlacesCount {
            get {
                return this.onairWorkPlacesCountField;
            }
            set {
                this.onairWorkPlacesCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnairWorkPlacesCountSpecified {
            get {
                return this.onairWorkPlacesCountFieldSpecified;
            }
            set {
                this.onairWorkPlacesCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работни места за жени, свързани с работа във въздуха
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        [System.ComponentModel.DescriptionAttribute("Брой работни места за жени, свързани с работа във въздуха")]
        public int OnairWorkPlacesWomen {
            get {
                return this.onairWorkPlacesWomenField;
            }
            set {
                this.onairWorkPlacesWomenField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnairWorkPlacesWomenSpecified {
            get {
                return this.onairWorkPlacesWomenFieldSpecified;
            }
            set {
                this.onairWorkPlacesWomenFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работни места за мъже, свързани с работа във въздуха
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        [System.ComponentModel.DescriptionAttribute("Брой работни места за мъже, свързани с работа във въздуха")]
        public int OnairWorkPlacesMen {
            get {
                return this.onairWorkPlacesMenField;
            }
            set {
                this.onairWorkPlacesMenField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnairWorkPlacesMenSpecified {
            get {
                return this.onairWorkPlacesMenFieldSpecified;
            }
            set {
                this.onairWorkPlacesMenFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Работни места, свързани с работа на и под водата - общ брой
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        [System.ComponentModel.DescriptionAttribute("Работни места, свързани с работа на и под водата - общ брой")]
        public int WaterWorkPlacesCount {
            get {
                return this.waterWorkPlacesCountField;
            }
            set {
                this.waterWorkPlacesCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WaterWorkPlacesCountSpecified {
            get {
                return this.waterWorkPlacesCountFieldSpecified;
            }
            set {
                this.waterWorkPlacesCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работни места за жени, свързани с работа на и под водата
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        [System.ComponentModel.DescriptionAttribute("Брой работни места за жени, свързани с работа на и под водата")]
        public int WaterWorkPlacesWomen {
            get {
                return this.waterWorkPlacesWomenField;
            }
            set {
                this.waterWorkPlacesWomenField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WaterWorkPlacesWomenSpecified {
            get {
                return this.waterWorkPlacesWomenFieldSpecified;
            }
            set {
                this.waterWorkPlacesWomenFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работни места за мъже, свързани с работа на и под водата
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        [System.ComponentModel.DescriptionAttribute("Брой работни места за мъже, свързани с работа на и под водата")]
        public int WaterWorkPlacesMen {
            get {
                return this.waterWorkPlacesMenField;
            }
            set {
                this.waterWorkPlacesMenField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WaterWorkPlacesMenSpecified {
            get {
                return this.waterWorkPlacesMenFieldSpecified;
            }
            set {
                this.waterWorkPlacesMenFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи на работа на смени
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=33)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи на работа на смени")]
        public int ShiftWorkCount {
            get {
                return this.shiftWorkCountField;
            }
            set {
                this.shiftWorkCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShiftWorkCountSpecified {
            get {
                return this.shiftWorkCountFieldSpecified;
            }
            set {
                this.shiftWorkCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи - нощен труд
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=34)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи - нощен труд")]
        public int NightWorkCount {
            get {
                return this.nightWorkCountField;
            }
            set {
                this.nightWorkCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NightWorkCountSpecified {
            get {
                return this.nightWorkCountFieldSpecified;
            }
            set {
                this.nightWorkCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи на дежурства
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=35)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи на дежурства")]
        public int DutyWorkCount {
            get {
                return this.dutyWorkCountField;
            }
            set {
                this.dutyWorkCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DutyWorkCountSpecified {
            get {
                return this.dutyWorkCountFieldSpecified;
            }
            set {
                this.dutyWorkCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Брой работещи на разположение
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=36)]
        [System.ComponentModel.DescriptionAttribute("Брой работещи на разположение")]
        public int OnCallWorkCount {
            get {
                return this.onCallWorkCountField;
            }
            set {
                this.onCallWorkCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnCallWorkCountSpecified {
            get {
                return this.onCallWorkCountFieldSpecified;
            }
            set {
                this.onCallWorkCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Опасности/източници на опасност с риск за здравето и безопасността на работещите - електрически ток (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=37)]
        [System.ComponentModel.DescriptionAttribute("Опасности/източници на опасност с риск за здравето и безопасността на работещите " +
            "- електрически ток (да/не)")]
        public bool ElectricityRiskAvailable {
            get {
                return this.electricityRiskAvailableField;
            }
            set {
                this.electricityRiskAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ElectricityRiskAvailableSpecified {
            get {
                return this.electricityRiskAvailableFieldSpecified;
            }
            set {
                this.electricityRiskAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Опасности/източници на опасност с риск за здравето и безопасността на работещите - машини и съоръжения (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=38)]
        [System.ComponentModel.DescriptionAttribute("Опасности/източници на опасност с риск за здравето и безопасността на работещите " +
            "- машини и съоръжения (да/не)")]
        public bool MachineEquipmentRiskAvailable {
            get {
                return this.machineEquipmentRiskAvailableField;
            }
            set {
                this.machineEquipmentRiskAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MachineEquipmentRiskAvailableSpecified {
            get {
                return this.machineEquipmentRiskAvailableFieldSpecified;
            }
            set {
                this.machineEquipmentRiskAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Опасности/източници на опасност с риск за здравето и безопасността на работещите - електрически уредби над 1000 V, обслужвани от предприятието (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=39)]
        [System.ComponentModel.DescriptionAttribute("Опасности/източници на опасност с риск за здравето и безопасността на работещите " +
            "- електрически уредби над 1000 V, обслужвани от предприятието (да/не)")]
        public bool HighVoltageRiskAvailable {
            get {
                return this.highVoltageRiskAvailableField;
            }
            set {
                this.highVoltageRiskAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HighVoltageRiskAvailableSpecified {
            get {
                return this.highVoltageRiskAvailableFieldSpecified;
            }
            set {
                this.highVoltageRiskAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Опасности/източници на опасност с риск за здравето и безопасността на работещите - транспортни средства (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=40)]
        [System.ComponentModel.DescriptionAttribute("Опасности/източници на опасност с риск за здравето и безопасността на работещите " +
            "- транспортни средства (да/не)")]
        public bool TransportMeansRiskAvailable {
            get {
                return this.transportMeansRiskAvailableField;
            }
            set {
                this.transportMeansRiskAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransportMeansRiskAvailableSpecified {
            get {
                return this.transportMeansRiskAvailableFieldSpecified;
            }
            set {
                this.transportMeansRiskAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Опасности/източници на опасност с риск за здравето и безопасността на работещите - съдове под налягане (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=41)]
        [System.ComponentModel.DescriptionAttribute("Опасности/източници на опасност с риск за здравето и безопасността на работещите " +
            "- съдове под налягане (да/не)")]
        public bool PressureRiskAvailable {
            get {
                return this.pressureRiskAvailableField;
            }
            set {
                this.pressureRiskAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PressureRiskAvailableSpecified {
            get {
                return this.pressureRiskAvailableFieldSpecified;
            }
            set {
                this.pressureRiskAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Опасности/източници на опасност с риск за здравето и безопасността на работещите - повдигателни съоръжения (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=42)]
        [System.ComponentModel.DescriptionAttribute("Опасности/източници на опасност с риск за здравето и безопасността на работещите " +
            "- повдигателни съоръжения (да/не)")]
        public bool LiftingEquipmentRiskAvailable {
            get {
                return this.liftingEquipmentRiskAvailableField;
            }
            set {
                this.liftingEquipmentRiskAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LiftingEquipmentRiskAvailableSpecified {
            get {
                return this.liftingEquipmentRiskAvailableFieldSpecified;
            }
            set {
                this.liftingEquipmentRiskAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Опасности/източници на опасност с риск за здравето и безопасността на работещите - въжени линии (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=43)]
        [System.ComponentModel.DescriptionAttribute("Опасности/източници на опасност с риск за здравето и безопасността на работещите " +
            "- въжени линии (да/не)")]
        public bool RopeWayRiskAvailable {
            get {
                return this.ropeWayRiskAvailableField;
            }
            set {
                this.ropeWayRiskAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RopeWayRiskAvailableSpecified {
            get {
                return this.ropeWayRiskAvailableFieldSpecified;
            }
            set {
                this.ropeWayRiskAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Опасности/източници на опасност с риск за здравето и безопасността на работещите - строителни скелета (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=44)]
        [System.ComponentModel.DescriptionAttribute("Опасности/източници на опасност с риск за здравето и безопасността на работещите " +
            "- строителни скелета (да/не)")]
        public bool ContsructionRiskAvailable {
            get {
                return this.contsructionRiskAvailableField;
            }
            set {
                this.contsructionRiskAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContsructionRiskAvailableSpecified {
            get {
                return this.contsructionRiskAvailableFieldSpecified;
            }
            set {
                this.contsructionRiskAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Опасности/източници на опасност с риск за здравето и безопасността на работещите - подвижни платформи (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=45)]
        [System.ComponentModel.DescriptionAttribute("Опасности/източници на опасност с риск за здравето и безопасността на работещите " +
            "- подвижни платформи (да/не)")]
        public bool MovingPlatformRiskAvailable {
            get {
                return this.movingPlatformRiskAvailableField;
            }
            set {
                this.movingPlatformRiskAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MovingPlatformRiskAvailableSpecified {
            get {
                return this.movingPlatformRiskAvailableFieldSpecified;
            }
            set {
                this.movingPlatformRiskAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Опасности/източници на опасност с риск за здравето и безопасността на работещите - други (да/не)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=46)]
        [System.ComponentModel.DescriptionAttribute("Опасности/източници на опасност с риск за здравето и безопасността на работещите " +
            "- други (да/не)")]
        public bool OtherRiskAvailable {
            get {
                return this.otherRiskAvailableField;
            }
            set {
                this.otherRiskAvailableField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherRiskAvailableSpecified {
            get {
                return this.otherRiskAvailableFieldSpecified;
            }
            set {
                this.otherRiskAvailableFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Опасности/източници на опасност с риск за здравето и безопасността на работещите - други (описание)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=47)]
        [System.ComponentModel.DescriptionAttribute("Опасности/източници на опасност с риск за здравето и безопасността на работещите " +
            "- други (описание)")]
        public string OtherRiskDescription {
            get {
                return this.otherRiskDescriptionField;
            }
            set {
                this.otherRiskDescriptionField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class RepresentativeData {
        
        private string namesField;
        
        private string positionField;
        
        private string phoneField;
        
        private string emailField;
        
        private bool isManagerField;
        
        private bool isManagerFieldSpecified;
        
        private bool isRepresentativeField;
        
        private bool isRepresentativeFieldSpecified;
        
        /// <summary>
        /// Трите имена на лицето
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Трите имена на лицето")]
        public string Names {
            get {
                return this.namesField;
            }
            set {
                this.namesField = value;
            }
        }
        
        /// <summary>
        /// Длъжност
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Длъжност")]
        public string Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <summary>
        /// Телефон/Факс
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Телефон/Факс")]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <summary>
        /// Email адрес
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("Email адрес")]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <summary>
        /// Управляващ - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("Управляващ - да/не")]
        public bool IsManager {
            get {
                return this.isManagerField;
            }
            set {
                this.isManagerField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsManagerSpecified {
            get {
                return this.isManagerFieldSpecified;
            }
            set {
                this.isManagerFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Представляващ - да/не
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DescriptionAttribute("Представляващ - да/не")]
        public bool IsRepresentative {
            get {
                return this.isRepresentativeField;
            }
            set {
                this.isRepresentativeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRepresentativeSpecified {
            get {
                return this.isRepresentativeFieldSpecified;
            }
            set {
                this.isRepresentativeFieldSpecified = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class EnterpriseUnit {
        
        private string enterpriseUnitNameField;
        
        private int employeeCountField;
        
        private bool employeeCountFieldSpecified;
        
        private string enterpriseKIDCodeField;
        
        private AddressDetails enterpriseUnitAddressField;
        
        private PersonData enterpriseUnitManagerField;
        
        /// <summary>
        /// EnterpriseUnit class constructor
        /// </summary>
        public EnterpriseUnit() {
            this.enterpriseUnitManagerField = new PersonData();
            this.enterpriseUnitAddressField = new AddressDetails();
        }
        
        /// <summary>
        /// Наименование на поделение
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Наименование на поделение")]
        public string EnterpriseUnitName {
            get {
                return this.enterpriseUnitNameField;
            }
            set {
                this.enterpriseUnitNameField = value;
            }
        }
        
        /// <summary>
        /// Брой наети лица
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Брой наети лица")]
        public int EmployeeCount {
            get {
                return this.employeeCountField;
            }
            set {
                this.employeeCountField = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployeeCountSpecified {
            get {
                return this.employeeCountFieldSpecified;
            }
            set {
                this.employeeCountFieldSpecified = value;
            }
        }
        
        /// <summary>
        /// Дейност по КИД 2008 (код) на поделение
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Дейност по КИД 2008 (код) на поделение")]
        public string EnterpriseKIDCode {
            get {
                return this.enterpriseKIDCodeField;
            }
            set {
                this.enterpriseKIDCodeField = value;
            }
        }
        
        /// <summary>
        /// Адрес на поделение
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("Адрес на поделение")]
        public AddressDetails EnterpriseUnitAddress {
            get {
                return this.enterpriseUnitAddressField;
            }
            set {
                this.enterpriseUnitAddressField = value;
            }
        }
        
        /// <summary>
        /// Ръководител на поделение
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DescriptionAttribute("Ръководител на поделение")]
        public PersonData EnterpriseUnitManager {
            get {
                return this.enterpriseUnitManagerField;
            }
            set {
                this.enterpriseUnitManagerField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class PersonData {
        
        private string firstMiddleLastNameField;
        
        private string phoneField;
        
        private string emailField;
        
        private string positionField;
        
        /// <summary>
        /// Трите имена на лицето
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Трите имена на лицето")]
        public string FirstMiddleLastName {
            get {
                return this.firstMiddleLastNameField;
            }
            set {
                this.firstMiddleLastNameField = value;
            }
        }
        
        /// <summary>
        /// Телефон/Факс
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Телефон/Факс")]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <summary>
        /// Email адрес
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DescriptionAttribute("Email адрес")]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <summary>
        /// Длъжност
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DescriptionAttribute("Длъжност")]
        public string Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.28659")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://egov.bg/RegiX/GIT/RZZBUT/ActualDeclarationResponse", IsNullable=true)]
    public partial class EnterpriseActivity {
        
        private string kIDCodeField;
        
        private string kIDDescriptionField;
        
        /// <summary>
        /// Код на дейност по КИД 2008
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DescriptionAttribute("Код на дейност по КИД 2008")]
        public string KIDCode {
            get {
                return this.kIDCodeField;
            }
            set {
                this.kIDCodeField = value;
            }
        }
        
        /// <summary>
        /// Описание на дейност по КИД 2008
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DescriptionAttribute("Описание на дейност по КИД 2008")]
        public string KIDDescription {
            get {
                return this.kIDDescriptionField;
            }
            set {
                this.kIDDescriptionField = value;
            }
        }
    }
}
