<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:n1="http://egov.bg/RegiX/MT/TOTAByEIKResponse" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.0 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:decimal-format name="format1" grouping-separator=" " decimal-separator=","/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<xsl:for-each select="n1:TOTAByEIKResponse">
						<h3 align="center">
							<span>
								<xsl:text>Министерство на туризма</xsl:text>
							</span>
							<br/>
							<span>
								<xsl:text>Национален туристически регистър</xsl:text>
							</span>
						</h3>
						<h2 align="center">
							<span>
								<xsl:text>Регистрация на туроператор/туристически агент</xsl:text>
							</span>
						</h2>
						<xsl:for-each select="n1:CompanyName">
							<table border="0" width="100%">
								<tbody>
									<tr valign="top">
										<th align="left" width="250px">
											<span style="font-style:italic; font-weight:normal; ">
												<xsl:text>Наименование на юридическо лице</xsl:text>
											</span>
										</th>
										<td>
											<xsl:apply-templates/>
										</td>
									</tr>
								</tbody>
							</table>
						</xsl:for-each>
						<xsl:for-each select="n1:EIK">
							<table border="0" width="100%">
								<tbody>
									<tr valign="top">
										<th align="left" width="250px">
											<span style="font-style:italic; font-weight:normal; ">
												<xsl:text>ЕИК/БУЛСТАТ</xsl:text>
											</span>
										</th>
										<td>
											<xsl:apply-templates/>
										</td>
									</tr>
								</tbody>
							</table>
						</xsl:for-each>
						<xsl:for-each select="n1:TourOperationType">
							<table border="0" width="100%">
								<tbody>
									<tr valign="top">
										<th align="left" width="250px">
											<span style="font-style:italic; font-weight:normal; ">
												<xsl:text>Вид туристическа дейност</xsl:text>
											</span>
										</th>
										<td>
											<xsl:apply-templates/>
										</td>
									</tr>
								</tbody>
							</table>
						</xsl:for-each>
						<xsl:for-each select="n1:Registration">
							<br/>
							<div>
								<span style="font-weight:bold; ">
									<xsl:text>Регистрация</xsl:text>
								</span>
							</div>
							<xsl:for-each select="n1:RegNum">
								<table border="0" width="100%">
									<tbody>
										<tr valign="top">
											<th align="left" width="250px">
												<span style="font-style:italic; font-weight:normal; ">
													<xsl:text>Регистрационен номер</xsl:text>
												</span>
											</th>
											<td>
												<xsl:apply-templates/>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
							<xsl:for-each select="n1:DateIssued">
								<table border="0" width="100%">
									<tbody>
										<tr valign="top">
											<th align="left" width="250px">
												<span style="font-style:italic; font-weight:normal; ">
													<xsl:text>Дата</xsl:text>
												</span>
											</th>
											<td>
												<span>
													<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
												</span>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
							<xsl:for-each select="n1:Order">
								<table border="0" width="100%">
									<tbody>
										<tr valign="top">
											<th align="left" width="250px">
												<span style="font-style:italic; font-weight:normal; ">
													<xsl:text>Заповед</xsl:text>
												</span>
											</th>
											<td>
												<xsl:for-each select="n1:Number">
													<xsl:apply-templates/>
												</xsl:for-each>
												<xsl:for-each select="n1:Date">
													<span>
														<xsl:text>/</xsl:text>
													</span>
													<span>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
						</xsl:for-each>
						<xsl:if test="count(     /n1:TOTAByEIKResponse/n1:OrderChanges ) &gt;0">
							<xsl:for-each select="n1:OrderChanges">
								<br/>
								<div>
									<span style="font-weight:bold; ">
										<xsl:text>Заповеди за промяна</xsl:text>
									</span>
								</div>
								<xsl:for-each select="n1:OrderChange">
									<table border="0" width="100%">
										<tbody>
											<tr valign="top">
												<th align="left" width="250px">
													<xsl:for-each select="n1:Number">
														<span style="font-weight:normal; ">
															<xsl:apply-templates/>
														</span>
													</xsl:for-each>
												</th>
												<td>
													<xsl:for-each select="n1:Date">
														<span>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:if>
						<xsl:if test="string-length(n1:LicenseCancellationOrder/n1:Number )&gt; 0 and string-length( n1:LicenseCancellationOrder/n1:Date )&gt;0">
							<xsl:for-each select="n1:LicenseCancellationOrder">
								<br/>
								<div>
									<span style="font-weight:bold; ">
										<xsl:text>Заповед прекратяване на дейността</xsl:text>
									</span>
								</div>
								<table border="0" width="100%">
									<tbody>
										<tr valign="top">
											<th align="left" width="250px">
												<xsl:for-each select="n1:Number">
													<span style="font-weight:normal; ">
														<xsl:apply-templates/>
													</span>
												</xsl:for-each>
											</th>
											<td>
												<xsl:for-each select="n1:Date">
													<span>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
						</xsl:if>
						<xsl:for-each select="n1:License">
							<br/>
							<div>
								<span style="font-weight:bold; ">
									<xsl:text>Лиценз</xsl:text>
								</span>
							</div>
							<xsl:for-each select="n1:LicenseIssuedOrderNum">
								<table border="0" width="100%">
									<tbody>
										<tr valign="top">
											<th align="left" width="250px">
												<span style="font-style:italic; font-weight:normal; ">
													<xsl:text>Номер</xsl:text>
												</span>
											</th>
											<td>
												<xsl:apply-templates/>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
							<xsl:for-each select="n1:LicenseIssuedOrderDate">
								<table border="0" width="100%">
									<tbody>
										<tr valign="top">
											<th align="left" width="250px">
												<span style="font-style:italic; font-weight:normal; ">
													<xsl:text>Дата</xsl:text>
												</span>
											</th>
											<td>
												<span>
													<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
												</span>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
							<xsl:for-each select="n1:Order">
								<table border="0" width="100%">
									<tbody>
										<tr valign="top">
											<th align="left" width="250px">
												<span style="font-style:italic; font-weight:normal; ">
													<xsl:text>Заповед</xsl:text>
												</span>
											</th>
											<td>
												<xsl:for-each select="n1:Number">
													<xsl:apply-templates/>
												</xsl:for-each>
												<xsl:for-each select="n1:Date">
													<span>
														<xsl:text>/</xsl:text>
													</span>
													<span>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
						</xsl:for-each>
						<xsl:if test="count(n1:Offices/n1:Office )&gt;0">
							<xsl:for-each select="n1:Offices">
								<br/>
								<div>
									<span style="font-weight:bold; ">
										<xsl:text>Офиси</xsl:text>
									</span>
								</div>
								<table style="border-collapse:collapse; " border="1">
									<thead>
										<tr>
											<th align="left">
												<span style="font-style:italic; font-weight:normal; ">
													<xsl:text>Населено място</xsl:text>
												</span>
											</th>
											<th align="left">
												<span style="font-style:italic; font-weight:normal; ">
													<xsl:text>Адрес</xsl:text>
												</span>
											</th>
											<th align="left">
												<span style="font-style:italic; font-weight:normal; ">
													<xsl:text>Телефон</xsl:text>
												</span>
											</th>
										</tr>
									</thead>
									<tbody>
										<xsl:for-each select="n1:Office">
											<tr>
												<td align="left">
													<xsl:for-each select="n1:OfficePopName">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="n1:OfficeAddress">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="n1:OfficePhone">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
											</tr>
										</xsl:for-each>
									</tbody>
								</table>
							</xsl:for-each>
						</xsl:if>
					</xsl:for-each>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
