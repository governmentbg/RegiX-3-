<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:E="http://www.bulstat.bg/Entry" xmlns:REL4="http://www.bulstat.bg/SubjectRelCollectiveBodyMember" xmlns:T0="http://www.bulstat.bg/MetaDefinition" xmlns:T17="http://www.bulstat.bg/Document" xmlns:T22="http://www.bulstat.bg/LegalEntity" xmlns:T23="http://www.bulstat.bg/NaturalPerson" xmlns:T25="http://www.bulstat.bg/UIC" xmlns:T27="http://www.bulstat.bg/Case" xmlns:T28="http://www.bulstat.bg/Communication" xmlns:T3="http://www.bulstat.bg/NomenclatureEntry" xmlns:T40="http://www.bulstat.bg/SubscriptionElement" xmlns:T8="http://www.bulstat.bg/Address" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:n1="http://www.bulstat.bg/IdentificationDoc" xmlns:ns1="http://www.bulstat.bg/GetStateOfPlayRequest" xmlns:ns10="http://www.bulstat.bg/SubjectPropAccountingRecordForm" xmlns:ns11="http://www.bulstat.bg/SubjectPropOwnershipForm" xmlns:ns12="http://www.bulstat.bg/SubjectPropFundingSource" xmlns:ns13="http://www.bulstat.bg/SubjectPropState" xmlns:ns14="http://www.bulstat.bg/SubjectRelManager" xmlns:ns15="http://www.bulstat.bg/SubjectRelPartner" xmlns:ns16="http://www.bulstat.bg/SubjectRelAssignee" xmlns:ns17="http://www.bulstat.bg/SubjectRelBelonging" xmlns:ns18="http://www.bulstat.bg/SubjectPropCollectiveBody" xmlns:ns19="http://www.bulstat.bg/SubjectPropActivityDate" xmlns:ns2="http://www.bulstat.bg/Subject" xmlns:ns20="http://www.bulstat.bg/SubjectPropProfession" xmlns:ns21="http://www.bulstat.bg/StateOfPlay" xmlns:ns22="http://www.bulstat.bg/Nomenclatures" xmlns:ns3="http://www.bulstat.bg/Event" xmlns:ns4="http://www.bulstat.bg/SubjectPropRepresentationType" xmlns:ns5="http://www.bulstat.bg/SubjectPropScopeOfActivity" xmlns:ns6="http://www.bulstat.bg/SubjectPropActivityKID2008" xmlns:ns7="http://www.bulstat.bg/SubjectPropActivityKID2003" xmlns:ns8="http://www.bulstat.bg/SubjectPropInstallments" xmlns:ns9="http://www.bulstat.bg/SubjectPropLifeTime" xmlns:tns="http://www.bulstat.bg/StateOfPlayService" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.0 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:decimal-format name="format1" grouping-separator=" " decimal-separator=","/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<h4 style="border-left-color:gray; border-left-style:solid; padding-left:10px; ">
						<span>
							<xsl:text>РЕПУБЛИКА БЪЛГАРИЯ</xsl:text>
						</span>
						<br/>
						<span>
							<xsl:text>Агенция по вписванията</xsl:text>
						</span>
					</h4>
					<h2 align="left">
						<span>
							<xsl:text>Справка за актуално състояние на субект на БУЛСТАТ</xsl:text>
						</span>
					</h2>
					<xsl:for-each select="tns:GetStateOfPlayResponse">
						<xsl:for-each select="ns21:StateOfPlay">
							<xsl:for-each select="ns21:Subject">
								<table bgcolor="#e1e1e1" border="0" width="100%">
									<tbody>
										<tr bgcolor="#e1e1e1" valign="top">
											<td colspan="2" valign="top">
												<h3 style="text-decoration:underline; ">
													<span style="font-size:24px; ">
														<xsl:text>Субект на БУЛСТАТ</xsl:text>
													</span>
												</h3>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns2:UIC">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Код по булстат:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T25:UIC">
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T25:UICType">
														<xsl:for-each select="T3:Code">
															<br/>
															<span>
																<xsl:text>тип: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
															<xsl:text> </xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
															<xsl:text>:</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
															<xsl:text>:</xsl:text>
															<xsl:choose>
																<xsl:when test="contains(string(string(.)), 'Z')">
																	<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																</xsl:when>
																<xsl:when test="contains(string(string(.)), '+')">
																	<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																</xsl:when>
																<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																	<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																</xsl:otherwise>
															</xsl:choose>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:for-each select="ns2:SubjectType">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div>
														<span style="font-weight:bold; ">
															<xsl:text>Вид на субект (НФЛ, ФЗЛ, Държава, Неизвестен):</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T3:Code">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:for-each select="ns2:LegalEntitySubject">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Юридическо лице:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T22:Country">
														<xsl:for-each select="T3:Code">
															<span>
																<xsl:text>Държава: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="T22:LegalForm">
														<xsl:for-each select="T3:Code">
															<br/>
															<span>
																<xsl:text>Код на правна форма: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="T22:LegalStatute">
														<xsl:for-each select="T3:Code">
															<br/>
															<span>
																<xsl:text>Код на юридически статус: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="T22:SubjectGroup">
														<xsl:for-each select="T3:Code">
															<br/>
															<span>
																<xsl:text>Код на група субекти: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="T22:CyrillicFullName">
														<br/>
														<span>
															<xsl:text>Пълно наименование на кирилица: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T22:CyrillicShortName">
														<br/>
														<span>
															<xsl:text>Кратко наименование на кирилица: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T22:LatinFullName">
														<br/>
														<span>
															<xsl:text>Пълно наименование на латиница: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T22:SubordinateLevel">
														<xsl:for-each select="T3:Code">
															<br/>
															<span>
																<xsl:text>Код на ниво на подчиненост: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="T22:TRStatus">
														<br/>
														<span>
															<xsl:text>Статус от Търговски регистър: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
															<xsl:text> </xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
															<xsl:text>:</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
															<xsl:text>:</xsl:text>
															<xsl:choose>
																<xsl:when test="contains(string(string(.)), 'Z')">
																	<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																</xsl:when>
																<xsl:when test="contains(string(string(.)), '+')">
																	<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																</xsl:when>
																<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																	<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																</xsl:otherwise>
															</xsl:choose>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:for-each select="ns2:NaturalPersonSubject">
									<xsl:choose>
										<xsl:when test="string-length( E:EntryTime ) &gt; 0 or
string-length( T23:Country/T3:Code )&gt; 0 or
string-length( T23:EGN )&gt; 0 or
string-length( T23:LNC )&gt; 0 or
string-length( T23:CyrillicName )&gt; 0 or
string-length( T23:LatinName )&gt; 0 or
string-length( T23:BirthDate )&gt; 0 or
string-length( T23:IdentificationDoc/E:EntryTime ) &gt; 0 or
string-length(  T23:IdentificationDoc/n1:IDType/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IDNumber )  &gt; 0 or
string-length( T23:IdentificationDoc/n1:Country/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IssueDate ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:ExpiryDate )&gt; 0">
											<table border="0" width="100%">
												<tbody>
													<tr>
														<td valign="top" width="220">
															<div style="font-weight:bold; ">
																<span>
																	<xsl:text>Физическо лице:</xsl:text>
																</span>
															</div>
														</td>
														<td valign="top">
															<xsl:for-each select="T23:Country">
																<xsl:for-each select="T3:Code">
																	<span>
																		<xsl:text>Гражданство (код на държава): </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:for-each select="T23:EGN">
																<br/>
																<span>
																	<xsl:text>ЕГН: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T23:LNC">
																<br/>
																<span>
																	<xsl:text>ЛНЧ: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T23:CyrillicName">
																<br/>
																<span>
																	<xsl:text>Име на кирилица: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T23:LatinName">
																<br/>
																<span>
																	<xsl:text>Име на латиница: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T23:BirthDate">
																<br/>
																<span>
																	<xsl:text>Дата на раждане: </xsl:text>
																</span>
																<span>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																</span>
															</xsl:for-each>
														</td>
														<td valign="top" width="40%">
															<xsl:for-each select="E:EntryTime">
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:choose>
																		<xsl:when test="contains(string(string(.)), 'Z')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(string(string(.)), '+')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																			<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																		</xsl:otherwise>
																	</xsl:choose>
																</span>
															</xsl:for-each>
														</td>
													</tr>
												</tbody>
											</table>
											<table border="0" width="100%">
												<tbody>
													<tr>
														<td valign="top" width="220"/>
														<td valign="top">
															<xsl:for-each select="T23:IdentificationDoc">
																<span>
																	<xsl:text>Документ за самоличност</xsl:text>
																</span>
																<br/>
																<table border="0" cellpadding="0" cellspacing="0">
																	<tbody>
																		<tr>
																			<th style="font-weight:normal; padding-left:10%; " align="left">
																				<span>
																					<xsl:text>Вид документ за самоличност:</xsl:text>
																				</span>
																			</th>
																			<td align="left">
																				<xsl:for-each select="n1:IDType">
																					<xsl:for-each select="T3:Code">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:for-each>
																			</td>
																		</tr>
																		<tr>
																			<th style="font-weight:normal; padding-left:10%; " align="left">
																				<span>
																					<xsl:text>Номер на документ за самоличност:</xsl:text>
																				</span>
																			</th>
																			<td align="left">
																				<xsl:for-each select="n1:IDNumber">
																					<xsl:apply-templates/>
																				</xsl:for-each>
																			</td>
																		</tr>
																		<tr>
																			<th style="font-weight:normal; padding-left:10%; " align="left">
																				<span>
																					<xsl:text>Държава издала документа:</xsl:text>
																				</span>
																			</th>
																			<td align="left">
																				<xsl:for-each select="n1:Country">
																					<xsl:for-each select="T3:Code">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:for-each>
																			</td>
																		</tr>
																		<tr>
																			<th style="font-weight:normal; padding-left:10%; " align="left">
																				<span>
																					<xsl:text>Дата на издаване:</xsl:text>
																				</span>
																			</th>
																			<td align="left">
																				<xsl:for-each select="n1:IssueDate">
																					<span>
																						<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																						<xsl:text>.</xsl:text>
																						<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																						<xsl:text>.</xsl:text>
																						<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																					</span>
																				</xsl:for-each>
																			</td>
																		</tr>
																		<tr>
																			<th style="font-weight:normal; padding-left:10%; " align="left">
																				<span>
																					<xsl:text>Дата на валидност:</xsl:text>
																				</span>
																			</th>
																			<td align="left">
																				<xsl:for-each select="n1:ExpiryDate">
																					<span>
																						<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																						<xsl:text>.</xsl:text>
																						<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																						<xsl:text>.</xsl:text>
																						<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																					</span>
																				</xsl:for-each>
																			</td>
																		</tr>
																	</tbody>
																</table>
															</xsl:for-each>
														</td>
														<td valign="top" width="40%">
															<xsl:for-each select="T23:IdentificationDoc">
																<xsl:for-each select="E:EntryTime">
																	<span style="font-size:x-small; font-style:italic; ">
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:choose>
																			<xsl:when test="contains(string(string(.)), 'Z')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(string(string(.)), '+')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																				<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</span>
																</xsl:for-each>
															</xsl:for-each>
														</td>
													</tr>
												</tbody>
											</table>
										</xsl:when>
										<xsl:otherwise/>
									</xsl:choose>
								</xsl:for-each>
								<xsl:for-each select="ns2:CountrySubject">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Държава:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T3:Code">
														<span>
															<xsl:text>Код: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<table border="0" width="100%">
									<thead>
										<tr>
											<td valign="top" width="20%">
												<div style="font-weight:bold; ">
													<span style="text-decoration:underline; ">
														<xsl:text>Комуникации</xsl:text>
													</span>
												</div>
											</td>
											<th align="left" valign="top"/>
											<th align="left" valign="top" width="40%"/>
										</tr>
									</thead>
									<tbody>
										<xsl:for-each select="ns2:Communications">
											<tr>
												<td valign="top" width="20%"/>
												<td valign="top">
													<xsl:for-each select="T28:Type">
														<xsl:for-each select="T3:Code">
															<span>
																<xsl:text>Код: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="T28:Value">
														<span>
															<xsl:text> - Стойност: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
															<xsl:text> </xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
															<xsl:text>:</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
															<xsl:text>:</xsl:text>
															<xsl:choose>
																<xsl:when test="contains(string(string(.)), 'Z')">
																	<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																</xsl:when>
																<xsl:when test="contains(string(string(.)), '+')">
																	<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																</xsl:when>
																<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																	<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																</xsl:otherwise>
															</xsl:choose>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</xsl:for-each>
									</tbody>
								</table>
								<table border="0" width="100%">
									<thead>
										<tr>
											<th align="left" valign="top" width="20%">
												<div style="font-weight:bold; ">
													<span>
														<xsl:text>Адреси:</xsl:text>
													</span>
												</div>
											</th>
											<th align="left" valign="top"/>
											<th align="left" valign="top" width="40%"/>
										</tr>
									</thead>
									<tbody>
										<xsl:for-each select="ns2:Addresses">
											<tr>
												<td valign="top">
													<xsl:for-each select="T8:AddressType">
														<xsl:for-each select="T3:Code">
															<span>
																<xsl:text>Вид на адреса (код): </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
												</td>
												<td valign="top">
													<xsl:for-each select="T8:Country">
														<xsl:for-each select="T3:Code">
															<span>
																<xsl:text>Код на държава: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="T8:PostalCode">
														<br/>
														<span>
															<xsl:text>Пощенски код: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T8:PostalBox">
														<br/>
														<span>
															<xsl:text>Пощенска кутия: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T8:ForeignLocation">
														<br/>
														<span>
															<xsl:text>Населено място в чужбина: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T8:Location">
														<xsl:for-each select="T3:Code">
															<br/>
															<span>
																<xsl:text>Населено място в България (код от ЕКАТТЕ): </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="T8:Region">
														<xsl:for-each select="T3:Code">
															<br/>
															<span>
																<xsl:text>Район (код от ЕКАТТЕ): </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="T8:Street">
														<br/>
														<span>
															<xsl:text>Улица/булевард/ж.к : </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T8:StreetNumber">
														<br/>
														<span>
															<xsl:text>Номер: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T8:Building">
														<br/>
														<span>
															<xsl:text>Сграда: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T8:Entrance">
														<br/>
														<span>
															<xsl:text>Вход: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T8:Floor">
														<br/>
														<span>
															<xsl:text>Етаж: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T8:Apartment">
														<br/>
														<span>
															<xsl:text>Апартамент: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
															<xsl:text> </xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
															<xsl:text>:</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
															<xsl:text>:</xsl:text>
															<xsl:choose>
																<xsl:when test="contains(string(string(.)), 'Z')">
																	<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																</xsl:when>
																<xsl:when test="contains(string(string(.)), '+')">
																	<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																</xsl:when>
																<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																	<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																</xsl:otherwise>
															</xsl:choose>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</xsl:for-each>
									</tbody>
								</table>
								<xsl:for-each select="ns2:Remark">
									<span style="font-weight:bold; ">
										<xsl:text>Забележки:</xsl:text>
									</span>
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
									<xsl:apply-templates/>
								</xsl:for-each>
							</xsl:for-each>
							<br/>
							<xsl:for-each select="ns21:Event">
								<table bgcolor="#e1e1e1" border="0" width="100%">
									<tbody>
										<tr bgcolor="#e1e1e1" valign="top">
											<td colspan="2" valign="top">
												<h3 style="text-decoration:underline; ">
													<span style="font-size:24px; ">
														<xsl:text>Последно регистрирано събитие за субекта</xsl:text>
													</span>
												</h3>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
												<xsl:for-each select="ns3:EntryType">
													<br/>
													<xsl:apply-templates/>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns3:EventDate">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Дата:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:apply-templates/>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:for-each select="ns3:EventType">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Вид:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T3:Code">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:for-each select="ns3:LegalBase">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Правно основание:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T3:Code">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:for-each select="ns3:Case">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Преписка:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T27:Court">
														<xsl:for-each select="T3:Code">
															<span>
																<xsl:text>Код на съд: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="T27:Year">
														<br/>
														<span>
															<xsl:text>Година: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T27:Number">
														<br/>
														<span>
															<xsl:text>Номер: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T27:Batch">
														<br/>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T27:Register">
														<br/>
														<span>
															<xsl:text>Регистър: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T27:Chapter">
														<br/>
														<span>
															<xsl:text>Глава: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T27:PageNumber">
														<br/>
														<span>
															<xsl:text>Стр.: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
															<xsl:text> </xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
															<xsl:text>:</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
															<xsl:text>:</xsl:text>
															<xsl:choose>
																<xsl:when test="contains(string(string(.)), 'Z')">
																	<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																</xsl:when>
																<xsl:when test="contains(string(string(.)), '+')">
																	<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																</xsl:when>
																<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																	<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																</xsl:otherwise>
															</xsl:choose>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:for-each select="ns3:Document">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Документ:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T17:DocumentType">
														<xsl:for-each select="T3:Code">
															<span>
																<xsl:text>Вид документ (заявление, решение и т.н): </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="T17:DocumentNumber">
														<br/>
														<span>
															<xsl:text>Номер на документ: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
													<xsl:for-each select="T17:DocumentDate">
														<br/>
														<span>
															<xsl:text>Дата на документа: </xsl:text>
														</span>
														<span>
															<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														</span>
													</xsl:for-each>
													<xsl:for-each select="T17:ValidFromDate">
														<br/>
														<span>
															<xsl:text>Дата на която влиза в сила: </xsl:text>
														</span>
														<span>
															<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														</span>
													</xsl:for-each>
													<xsl:for-each select="T17:DocumentName">
														<br/>
														<span>
															<xsl:text>Наименование: </xsl:text>
														</span>
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%">
													<xsl:for-each select="E:EntryTime">
														<span style="font-size:x-small; font-style:italic; ">
															<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
															<xsl:text> </xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
															<xsl:text>:</xsl:text>
															<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
															<xsl:text>:</xsl:text>
															<xsl:choose>
																<xsl:when test="contains(string(string(.)), 'Z')">
																	<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																</xsl:when>
																<xsl:when test="contains(string(string(.)), '+')">
																	<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																</xsl:when>
																<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																	<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																</xsl:otherwise>
															</xsl:choose>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</tbody>
									</table>
									<xsl:for-each select="T17:AuthorName">
										<span>
											<xsl:text>Име на автора: </xsl:text>
										</span>
										<xsl:apply-templates/>
									</xsl:for-each>
									<xsl:for-each select="T17:Author">
										<div style="background-color:silver; font-weight:bold; ">
											<span>
												<xsl:text>Автор</xsl:text>
											</span>
										</div>
										<xsl:for-each select="ns2:UIC">
											<table border="0" width="100%">
												<tbody>
													<tr>
														<td valign="top" width="220">
															<div style="font-weight:bold; ">
																<span>
																	<xsl:text>Код по булстат:</xsl:text>
																</span>
															</div>
														</td>
														<td valign="top">
															<xsl:for-each select="T25:UIC">
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T25:UICType">
																<xsl:for-each select="T3:Code">
																	<span>
																		<xsl:text> - </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
														</td>
														<td valign="top" width="40%">
															<xsl:for-each select="E:EntryTime">
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:choose>
																		<xsl:when test="contains(string(string(.)), 'Z')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(string(string(.)), '+')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																			<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																		</xsl:otherwise>
																	</xsl:choose>
																</span>
															</xsl:for-each>
														</td>
													</tr>
												</tbody>
											</table>
										</xsl:for-each>
										<xsl:for-each select="ns2:SubjectType">
											<table border="0" width="100%">
												<tbody>
													<tr>
														<td valign="top" width="220">
															<div>
																<span style="font-weight:bold; ">
																	<xsl:text>Вид на субект (НФЛ, ФЗЛ, Държава, Неизвестен):</xsl:text>
																</span>
															</div>
														</td>
														<td valign="top">
															<xsl:for-each select="T3:Code">
																<xsl:apply-templates/>
															</xsl:for-each>
														</td>
														<td valign="top" width="40%"/>
													</tr>
												</tbody>
											</table>
										</xsl:for-each>
										<xsl:for-each select="ns2:LegalEntitySubject">
											<table border="0" width="100%">
												<tbody>
													<tr>
														<td valign="top" width="220">
															<div style="font-weight:bold; ">
																<span>
																	<xsl:text>Юридическо лице:</xsl:text>
																</span>
															</div>
														</td>
														<td valign="top">
															<xsl:for-each select="T22:Country">
																<xsl:for-each select="T3:Code">
																	<span>
																		<xsl:text>Държава: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:for-each select="T22:LegalForm">
																<xsl:for-each select="T3:Code">
																	<br/>
																	<span>
																		<xsl:text>Код на правна форма: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:for-each select="T22:LegalStatute">
																<xsl:for-each select="T3:Code">
																	<br/>
																	<span>
																		<xsl:text>Код на юридически статус: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:for-each select="T22:SubjectGroup">
																<xsl:for-each select="T3:Code">
																	<br/>
																	<span>
																		<xsl:text>Код на група субекти: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:for-each select="T22:CyrillicFullName">
																<br/>
																<span>
																	<xsl:text>Пълно наименование на кирилица: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T22:CyrillicShortName">
																<br/>
																<span>
																	<xsl:text>Кратко наименование на кирилица: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T22:LatinFullName">
																<br/>
																<span>
																	<xsl:text>Пълно наименование на латиница: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T22:SubordinateLevel">
																<xsl:for-each select="T3:Code">
																	<br/>
																	<span>
																		<xsl:text>Код на ниво на подчиненост: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:for-each select="T22:TRStatus">
																<br/>
																<span>
																	<xsl:text>Статус от Търговски регистър: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</td>
														<td valign="top" width="40%">
															<xsl:for-each select="E:EntryTime">
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:choose>
																		<xsl:when test="contains(string(string(.)), 'Z')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(string(string(.)), '+')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																			<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																		</xsl:otherwise>
																	</xsl:choose>
																</span>
															</xsl:for-each>
														</td>
													</tr>
												</tbody>
											</table>
										</xsl:for-each>
										<xsl:for-each select="ns2:NaturalPersonSubject">
											<xsl:choose>
												<xsl:when test="string-length( E:EntryTime ) &gt; 0 or
string-length( T23:Country/T3:Code )&gt; 0 or
string-length( T23:EGN )&gt; 0 or
string-length( T23:LNC )&gt; 0 or
string-length( T23:CyrillicName )&gt; 0 or
string-length( T23:LatinName )&gt; 0 or
string-length( T23:BirthDate )&gt; 0 or
string-length( T23:IdentificationDoc/E:EntryTime ) &gt; 0 or
string-length(  T23:IdentificationDoc/n1:IDType/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IDNumber )  &gt; 0 or
string-length( T23:IdentificationDoc/n1:Country/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IssueDate ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:ExpiryDate )&gt; 0">
													<table border="0" width="100%">
														<tbody>
															<tr>
																<td valign="top" width="220">
																	<div style="font-weight:bold; ">
																		<span>
																			<xsl:text>Физическо лице:</xsl:text>
																		</span>
																	</div>
																</td>
																<td valign="top">
																	<xsl:for-each select="T23:Country">
																		<xsl:for-each select="T3:Code">
																			<span>
																				<xsl:text>Гражданство (код на държава): </xsl:text>
																			</span>
																			<xsl:apply-templates/>
																		</xsl:for-each>
																	</xsl:for-each>
																	<xsl:for-each select="T23:EGN">
																		<br/>
																		<span>
																			<xsl:text>ЕГН: </xsl:text>
																		</span>
																		<xsl:apply-templates/>
																	</xsl:for-each>
																	<xsl:for-each select="T23:LNC">
																		<br/>
																		<span>
																			<xsl:text>ЛНЧ: </xsl:text>
																		</span>
																		<xsl:apply-templates/>
																	</xsl:for-each>
																	<xsl:for-each select="T23:CyrillicName">
																		<br/>
																		<span>
																			<xsl:text>Име на кирилица: </xsl:text>
																		</span>
																		<xsl:apply-templates/>
																	</xsl:for-each>
																	<xsl:for-each select="T23:LatinName">
																		<br/>
																		<span>
																			<xsl:text>Име на латиница: </xsl:text>
																		</span>
																		<xsl:apply-templates/>
																	</xsl:for-each>
																	<xsl:for-each select="T23:BirthDate">
																		<br/>
																		<span>
																			<xsl:text>Дата на раждане: </xsl:text>
																		</span>
																		<span>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		</span>
																	</xsl:for-each>
																</td>
																<td valign="top" width="40%">
																	<xsl:for-each select="E:EntryTime">
																		<span style="font-size:x-small; font-style:italic; ">
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			<xsl:text> </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:choose>
																				<xsl:when test="contains(string(string(.)), 'Z')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(string(string(.)), '+')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																					<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</span>
																	</xsl:for-each>
																</td>
															</tr>
														</tbody>
													</table>
													<table border="0" width="100%">
														<tbody>
															<tr>
																<td valign="top" width="220"/>
																<td valign="top">
																	<xsl:for-each select="T23:IdentificationDoc">
																		<span>
																			<xsl:text>Документ за самоличност</xsl:text>
																		</span>
																		<br/>
																		<table border="0" cellpadding="0" cellspacing="0">
																			<tbody>
																				<tr>
																					<th style="font-weight:normal; padding-left:10%; " align="left">
																						<span>
																							<xsl:text>Вид документ за самоличност:</xsl:text>
																						</span>
																					</th>
																					<td align="left">
																						<xsl:for-each select="n1:IDType">
																							<xsl:for-each select="T3:Code">
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</xsl:for-each>
																					</td>
																				</tr>
																				<tr>
																					<th style="font-weight:normal; padding-left:10%; " align="left">
																						<span>
																							<xsl:text>Номер на документ за самоличност:</xsl:text>
																						</span>
																					</th>
																					<td align="left">
																						<xsl:for-each select="n1:IDNumber">
																							<xsl:apply-templates/>
																						</xsl:for-each>
																					</td>
																				</tr>
																				<tr>
																					<th style="font-weight:normal; padding-left:10%; " align="left">
																						<span>
																							<xsl:text>Държава издала документа:</xsl:text>
																						</span>
																					</th>
																					<td align="left">
																						<xsl:for-each select="n1:Country">
																							<xsl:for-each select="T3:Code">
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</xsl:for-each>
																					</td>
																				</tr>
																				<tr>
																					<th style="font-weight:normal; padding-left:10%; " align="left">
																						<span>
																							<xsl:text>Дата на издаване:</xsl:text>
																						</span>
																					</th>
																					<td align="left">
																						<xsl:for-each select="n1:IssueDate">
																							<span>
																								<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																								<xsl:text>.</xsl:text>
																								<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																								<xsl:text>.</xsl:text>
																								<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																							</span>
																						</xsl:for-each>
																					</td>
																				</tr>
																				<tr>
																					<th style="font-weight:normal; padding-left:10%; " align="left">
																						<span>
																							<xsl:text>Дата на валидност:</xsl:text>
																						</span>
																					</th>
																					<td align="left">
																						<xsl:for-each select="n1:ExpiryDate">
																							<span>
																								<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																								<xsl:text>.</xsl:text>
																								<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																								<xsl:text>.</xsl:text>
																								<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																							</span>
																						</xsl:for-each>
																					</td>
																				</tr>
																			</tbody>
																		</table>
																	</xsl:for-each>
																</td>
																<td valign="top" width="40%">
																	<xsl:for-each select="T23:IdentificationDoc">
																		<xsl:for-each select="E:EntryTime">
																			<span style="font-size:x-small; font-style:italic; ">
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																				<xsl:text>.</xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																				<xsl:text>.</xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																				<xsl:text> </xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																				<xsl:text>:</xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																				<xsl:text>:</xsl:text>
																				<xsl:choose>
																					<xsl:when test="contains(string(string(.)), 'Z')">
																						<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																					</xsl:when>
																					<xsl:when test="contains(string(string(.)), '+')">
																						<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																					</xsl:when>
																					<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																						<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</span>
																		</xsl:for-each>
																	</xsl:for-each>
																</td>
															</tr>
														</tbody>
													</table>
												</xsl:when>
												<xsl:otherwise/>
											</xsl:choose>
										</xsl:for-each>
										<xsl:for-each select="ns2:CountrySubject">
											<table border="0" width="100%">
												<tbody>
													<tr>
														<td valign="top" width="220">
															<div style="font-weight:bold; ">
																<span>
																	<xsl:text>Държава:</xsl:text>
																</span>
															</div>
														</td>
														<td valign="top">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Код: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</td>
														<td valign="top" width="40%"/>
													</tr>
												</tbody>
											</table>
										</xsl:for-each>
										<table border="0" width="100%">
											<thead>
												<tr>
													<td valign="top" width="20%">
														<div style="font-weight:bold; ">
															<span style="text-decoration:underline; ">
																<xsl:text>Комуникации</xsl:text>
															</span>
														</div>
													</td>
													<th align="left" valign="top"/>
													<th align="left" valign="top" width="40%"/>
												</tr>
											</thead>
											<tbody>
												<xsl:for-each select="ns2:Communications">
													<tr>
														<td valign="top" width="20%"/>
														<td valign="top">
															<xsl:for-each select="T28:Type">
																<xsl:for-each select="T3:Code">
																	<span>
																		<xsl:text>Код: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:for-each select="T28:Value">
																<span>
																	<xsl:text> - Стойност: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</td>
														<td valign="top" width="40%">
															<xsl:for-each select="E:EntryTime">
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:choose>
																		<xsl:when test="contains(string(string(.)), 'Z')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(string(string(.)), '+')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																			<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																		</xsl:otherwise>
																	</xsl:choose>
																</span>
															</xsl:for-each>
														</td>
													</tr>
												</xsl:for-each>
											</tbody>
										</table>
										<table border="0" width="100%">
											<thead>
												<tr>
													<th align="left" valign="top" width="20%">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Адреси:</xsl:text>
															</span>
														</div>
													</th>
													<th align="left" valign="top"/>
													<th align="left" valign="top" width="40%"/>
												</tr>
											</thead>
											<tbody>
												<xsl:for-each select="ns2:Addresses">
													<tr>
														<td valign="top">
															<xsl:for-each select="T8:AddressType">
																<xsl:for-each select="T3:Code">
																	<span>
																		<xsl:text>Вид на адреса (код): </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
														</td>
														<td valign="top">
															<xsl:for-each select="T8:Country">
																<xsl:for-each select="T3:Code">
																	<span>
																		<xsl:text>Код на държава: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:for-each select="T8:PostalCode">
																<br/>
																<span>
																	<xsl:text>Пощенски код: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T8:PostalBox">
																<br/>
																<span>
																	<xsl:text>Пощенска кутия: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T8:ForeignLocation">
																<br/>
																<span>
																	<xsl:text>Населено място в чужбина: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T8:Location">
																<xsl:for-each select="T3:Code">
																	<br/>
																	<span>
																		<xsl:text>Населено място в България (код от ЕКАТТЕ): </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:for-each select="T8:Region">
																<xsl:for-each select="T3:Code">
																	<br/>
																	<span>
																		<xsl:text>Район (код от ЕКАТТЕ): </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:for-each select="T8:Street">
																<br/>
																<span>
																	<xsl:text>Улица/булевард/ж.к : </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T8:StreetNumber">
																<br/>
																<span>
																	<xsl:text>Номер: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T8:Building">
																<br/>
																<span>
																	<xsl:text>Сграда: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T8:Entrance">
																<br/>
																<span>
																	<xsl:text>Вход: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T8:Floor">
																<br/>
																<span>
																	<xsl:text>Етаж: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
															<xsl:for-each select="T8:Apartment">
																<br/>
																<span>
																	<xsl:text>Апартамент: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</td>
														<td valign="top" width="40%">
															<xsl:for-each select="E:EntryTime">
																<span style="font-size:x-small; font-style:italic; ">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																	<xsl:text>:</xsl:text>
																	<xsl:choose>
																		<xsl:when test="contains(string(string(.)), 'Z')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(string(string(.)), '+')">
																			<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																			<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																		</xsl:otherwise>
																	</xsl:choose>
																</span>
															</xsl:for-each>
														</td>
													</tr>
												</xsl:for-each>
											</tbody>
										</table>
										<xsl:for-each select="ns2:Remark">
											<span style="font-weight:bold; ">
												<xsl:text>Забележки:</xsl:text>
											</span>
											<span>
												<xsl:text>&#160;</xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
								<br/>
							</xsl:for-each>
							<xsl:for-each select="ns21:RepresentationType">
								<table bgcolor="#e1e1e1" border="0" width="100%">
									<tbody>
										<tr bgcolor="#e1e1e1" valign="top">
											<td colspan="2" valign="top">
												<h3 style="text-decoration:underline; ">
													<span style="font-size:24px; ">
														<xsl:text>Начин на представляване</xsl:text>
													</span>
												</h3>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns4:Type">
									<xsl:for-each select="T3:Code">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Тип:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:apply-templates/>
													</td>
													<td valign="top" width="40%"/>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
								</xsl:for-each>
								<xsl:for-each select="ns4:Description">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Описание:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:apply-templates/>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<br/>
							</xsl:for-each>
							<xsl:for-each select="ns21:ScopeOfActivity">
								<table bgcolor="#e1e1e1" border="0" width="100%">
									<tbody>
										<tr bgcolor="#e1e1e1" valign="top">
											<td colspan="2" valign="top">
												<h3 style="text-decoration:underline; ">
													<span style="font-size:24px; ">
														<xsl:text>Предмет на дейност</xsl:text>
													</span>
												</h3>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns5:Description">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Описание:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:apply-templates/>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<br/>
							</xsl:for-each>
							<xsl:for-each select="ns21:MainActivity2003">
								<table bgcolor="#e1e1e1" border="0" width="100%">
									<tbody>
										<tr bgcolor="#e1e1e1" valign="top">
											<td colspan="2" valign="top">
												<h3 style="text-decoration:underline; ">
													<span style="font-size:24px; ">
														<xsl:text>Основна дейност по КИД2003</xsl:text>
													</span>
												</h3>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns7:NKID2003">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Описание:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T3:Code">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<br/>
							</xsl:for-each>
							<xsl:for-each select="ns21:MainActivity2008">
								<table bgcolor="#e1e1e1" border="0" width="100%">
									<tbody>
										<tr bgcolor="#e1e1e1" valign="top">
											<td colspan="2" valign="top">
												<h3 style="text-decoration:underline; ">
													<span style="font-size:24px; ">
														<xsl:text>Основна дейност по КИД2008</xsl:text>
													</span>
												</h3>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns6:KID2008">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Описание:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T3:Code">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<br/>
							</xsl:for-each>
							<table border="0" width="100%">
								<thead>
									<tr bgcolor="#e1e1e1" valign="top">
										<td colspan="3" valign="top">
											<h3 style="text-decoration:underline; ">
												<span style="font-size:24px; ">
													<xsl:text>Вноски</xsl:text>
												</span>
											</h3>
										</td>
									</tr>
								</thead>
								<tbody>
									<xsl:for-each select="ns21:Installments">
										<tr>
											<td width="20%"/>
											<td>
												<xsl:for-each select="ns8:Count">
													<span>
														<xsl:text>Брой: </xsl:text>
													</span>
													<xsl:apply-templates/>
												</xsl:for-each>
												<xsl:for-each select="ns8:Amount">
													<span>
														<xsl:text>, Стойност: </xsl:text>
													</span>
													<xsl:apply-templates/>
												</xsl:for-each>
											</td>
											<td width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</xsl:for-each>
								</tbody>
							</table>
							<xsl:for-each select="ns21:LifeTime">
								<table bgcolor="#e1e1e1" border="0" width="100%">
									<tbody>
										<tr bgcolor="#e1e1e1" valign="top">
											<td colspan="2" valign="top">
												<h3 style="text-decoration:underline; ">
													<span style="font-size:24px; ">
														<xsl:text>Срок на съществуване</xsl:text>
													</span>
												</h3>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns9:Date">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Дата:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:apply-templates/>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:for-each select="ns9:Description">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Описание:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:apply-templates/>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<br/>
							</xsl:for-each>
							<xsl:for-each select="ns21:AccountingRecordForm">
								<table bgcolor="#e1e1e1" border="0" width="100%">
									<tbody>
										<tr bgcolor="#e1e1e1" valign="top">
											<td colspan="2" valign="top">
												<h3 style="text-decoration:underline; ">
													<span style="font-size:24px; ">
														<xsl:text>Форма на счетоводно записване</xsl:text>
													</span>
												</h3>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns10:Form">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Код:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T3:Code">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<br/>
							</xsl:for-each>
							<table border="0" width="100%">
								<thead>
									<tr bgcolor="#e1e1e1" valign="top">
										<td colspan="3" valign="top" width="20%">
											<h3 style="text-decoration:underline; ">
												<span style="font-size:24px; ">
													<xsl:text>Форма на собственост</xsl:text>
												</span>
											</h3>
										</td>
									</tr>
								</thead>
								<tbody>
									<xsl:for-each select="ns21:OwnershipForms">
										<tr>
											<td width="20%"/>
											<td>
												<xsl:for-each select="ns11:Form">
													<xsl:for-each select="T3:Code">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:for-each>
												<xsl:for-each select="ns11:Percent">
													<span>
														<xsl:text>, процент: </xsl:text>
													</span>
													<xsl:apply-templates/>
												</xsl:for-each>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</xsl:for-each>
								</tbody>
							</table>
							<table border="0" width="100%">
								<thead>
									<tr bgcolor="#e1e1e1" valign="top">
										<td colspan="3" valign="top" width="20%">
											<h3 style="text-decoration:underline; ">
												<span style="font-size:24px; ">
													<xsl:text>Източници на финансиране</xsl:text>
												</span>
											</h3>
										</td>
									</tr>
								</thead>
								<tbody>
									<xsl:for-each select="ns21:FundingSources">
										<tr>
											<td valign="top" width="20%"/>
											<td valign="top">
												<xsl:for-each select="ns12:Source">
													<xsl:for-each select="T3:Code">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:for-each>
												<xsl:for-each select="ns12:Percent">
													<span>
														<xsl:text>процент:</xsl:text>
													</span>
													<xsl:apply-templates/>
												</xsl:for-each>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</xsl:for-each>
								</tbody>
							</table>
							<xsl:for-each select="ns21:State">
								<table bgcolor="#e1e1e1" border="0" width="100%">
									<tbody>
										<tr bgcolor="#e1e1e1" valign="top">
											<td colspan="2" valign="top">
												<h3 style="text-decoration:underline; ">
													<span style="font-size:24px; ">
														<xsl:text>Състояние на субект</xsl:text>
													</span>
												</h3>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns13:State">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Код:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T3:Code">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<br/>
							</xsl:for-each>
							<xsl:for-each select="ns21:ActivityDate">
								<table bgcolor="#e1e1e1" border="0" width="100%">
									<tbody>
										<tr bgcolor="#e1e1e1" valign="top">
											<td colspan="2" valign="top">
												<h3 style="text-decoration:underline; ">
													<span style="font-size:24px; ">
														<xsl:text>Дата на започване/ спиране/ възобновяване на дейността</xsl:text>
													</span>
												</h3>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns19:Type">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Код:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T3:Code">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:for-each select="ns19:Date">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Дата:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:apply-templates/>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<br/>
							</xsl:for-each>
							<table border="0" width="100%">
								<thead>
									<tr bgcolor="#e1e1e1" valign="top">
										<td colspan="3" valign="top">
											<h3 style="text-decoration:underline; ">
												<span style="font-size:24px; ">
													<xsl:text>Колективни органи</xsl:text>
												</span>
											</h3>
										</td>
									</tr>
								</thead>
								<tbody>
									<xsl:for-each select="ns21:CollectiveBodies">
										<tr>
											<td colspan="3" valign="top">
												<table border="0" cellpadding="0" cellspacing="0" width="100%">
													<thead>
														<tr bgcolor="#f0f0f0">
															<td align="left" valign="top">
																<xsl:for-each select="ns18:Type">
																	<xsl:for-each select="T3:Code">
																		<span>
																			<xsl:text>Вид колективен орган: </xsl:text>
																		</span>
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:for-each>
															</td>
															<td align="left" valign="top" width="40%">
																<xsl:for-each select="E:EntryTime">
																	<span style="font-size:x-small; font-style:italic; ">
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:choose>
																			<xsl:when test="contains(string(string(.)), 'Z')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(string(string(.)), '+')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																				<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</span>
																</xsl:for-each>
															</td>
														</tr>
													</thead>
													<tbody>
														<xsl:for-each select="ns18:Members">
															<tr>
																<td valign="top">
																	<div style="border-left:2px; border-top:2px; font-weight:bold; ">
																		<span>
																			<xsl:text>Състав на колективен орган</xsl:text>
																		</span>
																	</div>
																</td>
																<td valign="top" width="40%">
																	<xsl:for-each select="E:EntryTime">
																		<span style="font-size:x-small; font-style:italic; ">
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			<xsl:text> </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:choose>
																				<xsl:when test="contains(string(string(.)), 'Z')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(string(string(.)), '+')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																					<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</span>
																	</xsl:for-each>
																	<xsl:for-each select="T40:OperationType">
																		<span style="font-style:italic; ">
																			<xsl:text>(</xsl:text>
																		</span>
																		<span style="font-style:italic; ">
																			<xsl:apply-templates/>
																		</span>
																		<span style="font-style:italic; ">
																			<xsl:text>)</xsl:text>
																		</span>
																	</xsl:for-each>
																</td>
															</tr>
															<tr>
																<td valign="top">
																	<xsl:for-each select="REL4:Position">
																		<xsl:for-each select="T3:Code">
																			<span style="font-weight:bold; ">
																				<xsl:text>Код на длъжност в управлението:</xsl:text>
																			</span>
																			<span>
																				<xsl:text>&#160;</xsl:text>
																			</span>
																			<xsl:apply-templates/>
																		</xsl:for-each>
																	</xsl:for-each>
																</td>
																<td valign="top" width="40%"/>
															</tr>
															<tr>
																<td colspan="2" valign="top">
																	<xsl:for-each select="REL4:RelatedSubject">
																		<div style="background-color:silver; font-weight:bold; ">
																			<span>
																				<xsl:text>Член на колективен орган</xsl:text>
																			</span>
																		</div>
																		<xsl:for-each select="ns2:UIC">
																			<table border="0" width="100%">
																				<tbody>
																					<tr>
																						<td valign="top" width="220">
																							<div style="font-weight:bold; ">
																								<span>
																									<xsl:text>Код по булстат:</xsl:text>
																								</span>
																							</div>
																						</td>
																						<td valign="top">
																							<xsl:for-each select="T25:UIC">
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T25:UICType">
																								<xsl:for-each select="T3:Code">
																									<span>
																										<xsl:text> - </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</td>
																						<td valign="top" width="40%">
																							<xsl:for-each select="E:EntryTime">
																								<span style="font-size:x-small; font-style:italic; ">
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																									<xsl:text> </xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:choose>
																										<xsl:when test="contains(string(string(.)), 'Z')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(string(string(.)), '+')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																											<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</span>
																							</xsl:for-each>
																						</td>
																					</tr>
																				</tbody>
																			</table>
																		</xsl:for-each>
																		<xsl:for-each select="ns2:SubjectType">
																			<table border="0" width="100%">
																				<tbody>
																					<tr>
																						<td valign="top" width="220">
																							<div>
																								<span style="font-weight:bold; ">
																									<xsl:text>Вид на субект (НФЛ, ФЗЛ, Държава, Неизвестен):</xsl:text>
																								</span>
																							</div>
																						</td>
																						<td valign="top">
																							<xsl:for-each select="T3:Code">
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</td>
																						<td valign="top" width="40%"/>
																					</tr>
																				</tbody>
																			</table>
																		</xsl:for-each>
																		<xsl:for-each select="ns2:LegalEntitySubject">
																			<table border="0" width="100%">
																				<tbody>
																					<tr>
																						<td valign="top" width="220">
																							<div style="font-weight:bold; ">
																								<span>
																									<xsl:text>Юридическо лице:</xsl:text>
																								</span>
																							</div>
																						</td>
																						<td valign="top">
																							<xsl:for-each select="T22:Country">
																								<xsl:for-each select="T3:Code">
																									<span>
																										<xsl:text>Държава: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T22:LegalForm">
																								<xsl:for-each select="T3:Code">
																									<br/>
																									<span>
																										<xsl:text>Код на правна форма: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T22:LegalStatute">
																								<xsl:for-each select="T3:Code">
																									<br/>
																									<span>
																										<xsl:text>Код на юридически статус: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T22:SubjectGroup">
																								<xsl:for-each select="T3:Code">
																									<br/>
																									<span>
																										<xsl:text>Код на група субекти: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T22:CyrillicFullName">
																								<br/>
																								<span>
																									<xsl:text>Пълно наименование на кирилица: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T22:CyrillicShortName">
																								<br/>
																								<span>
																									<xsl:text>Кратко наименование на кирилица: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T22:LatinFullName">
																								<br/>
																								<span>
																									<xsl:text>Пълно наименование на латиница: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T22:SubordinateLevel">
																								<xsl:for-each select="T3:Code">
																									<br/>
																									<span>
																										<xsl:text>Код на ниво на подчиненост: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T22:TRStatus">
																								<br/>
																								<span>
																									<xsl:text>Статус от Търговски регистър: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</td>
																						<td valign="top" width="40%">
																							<xsl:for-each select="E:EntryTime">
																								<span style="font-size:x-small; font-style:italic; ">
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																									<xsl:text> </xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:choose>
																										<xsl:when test="contains(string(string(.)), 'Z')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(string(string(.)), '+')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																											<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</span>
																							</xsl:for-each>
																						</td>
																					</tr>
																				</tbody>
																			</table>
																		</xsl:for-each>
																		<xsl:for-each select="ns2:NaturalPersonSubject">
																			<xsl:choose>
																				<xsl:when test="string-length( E:EntryTime ) &gt; 0 or
string-length( T23:Country/T3:Code )&gt; 0 or
string-length( T23:EGN )&gt; 0 or
string-length( T23:LNC )&gt; 0 or
string-length( T23:CyrillicName )&gt; 0 or
string-length( T23:LatinName )&gt; 0 or
string-length( T23:BirthDate )&gt; 0 or
string-length( T23:IdentificationDoc/E:EntryTime ) &gt; 0 or
string-length(  T23:IdentificationDoc/n1:IDType/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IDNumber )  &gt; 0 or
string-length( T23:IdentificationDoc/n1:Country/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IssueDate ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:ExpiryDate )&gt; 0">
																					<table border="0" width="100%">
																						<tbody>
																							<tr>
																								<td valign="top" width="220">
																									<div style="font-weight:bold; ">
																										<span>
																											<xsl:text>Физическо лице:</xsl:text>
																										</span>
																									</div>
																								</td>
																								<td valign="top">
																									<xsl:for-each select="T23:Country">
																										<xsl:for-each select="T3:Code">
																											<span>
																												<xsl:text>Гражданство (код на държава): </xsl:text>
																											</span>
																											<xsl:apply-templates/>
																										</xsl:for-each>
																									</xsl:for-each>
																									<xsl:for-each select="T23:EGN">
																										<br/>
																										<span>
																											<xsl:text>ЕГН: </xsl:text>
																										</span>
																										<xsl:apply-templates/>
																									</xsl:for-each>
																									<xsl:for-each select="T23:LNC">
																										<br/>
																										<span>
																											<xsl:text>ЛНЧ: </xsl:text>
																										</span>
																										<xsl:apply-templates/>
																									</xsl:for-each>
																									<xsl:for-each select="T23:CyrillicName">
																										<br/>
																										<span>
																											<xsl:text>Име на кирилица: </xsl:text>
																										</span>
																										<xsl:apply-templates/>
																									</xsl:for-each>
																									<xsl:for-each select="T23:LatinName">
																										<br/>
																										<span>
																											<xsl:text>Име на латиница: </xsl:text>
																										</span>
																										<xsl:apply-templates/>
																									</xsl:for-each>
																									<xsl:for-each select="T23:BirthDate">
																										<br/>
																										<span>
																											<xsl:text>Дата на раждане: </xsl:text>
																										</span>
																										<span>
																											<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																											<xsl:text>.</xsl:text>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																											<xsl:text>.</xsl:text>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																										</span>
																									</xsl:for-each>
																								</td>
																								<td valign="top" width="40%">
																									<xsl:for-each select="E:EntryTime">
																										<span style="font-size:x-small; font-style:italic; ">
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																											<xsl:text>.</xsl:text>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																											<xsl:text>.</xsl:text>
																											<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																											<xsl:text> </xsl:text>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																											<xsl:text>:</xsl:text>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																											<xsl:text>:</xsl:text>
																											<xsl:choose>
																												<xsl:when test="contains(string(string(.)), 'Z')">
																													<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																												</xsl:when>
																												<xsl:when test="contains(string(string(.)), '+')">
																													<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																												</xsl:when>
																												<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																													<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																												</xsl:when>
																												<xsl:otherwise>
																													<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																												</xsl:otherwise>
																											</xsl:choose>
																										</span>
																									</xsl:for-each>
																								</td>
																							</tr>
																						</tbody>
																					</table>
																					<table border="0" width="100%">
																						<tbody>
																							<tr>
																								<td valign="top" width="220"/>
																								<td valign="top">
																									<xsl:for-each select="T23:IdentificationDoc">
																										<span>
																											<xsl:text>Документ за самоличност</xsl:text>
																										</span>
																										<br/>
																										<table border="0" cellpadding="0" cellspacing="0">
																											<tbody>
																												<tr>
																													<th style="font-weight:normal; padding-left:10%; " align="left">
																														<span>
																															<xsl:text>Вид документ за самоличност:</xsl:text>
																														</span>
																													</th>
																													<td align="left">
																														<xsl:for-each select="n1:IDType">
																															<xsl:for-each select="T3:Code">
																																<xsl:apply-templates/>
																															</xsl:for-each>
																														</xsl:for-each>
																													</td>
																												</tr>
																												<tr>
																													<th style="font-weight:normal; padding-left:10%; " align="left">
																														<span>
																															<xsl:text>Номер на документ за самоличност:</xsl:text>
																														</span>
																													</th>
																													<td align="left">
																														<xsl:for-each select="n1:IDNumber">
																															<xsl:apply-templates/>
																														</xsl:for-each>
																													</td>
																												</tr>
																												<tr>
																													<th style="font-weight:normal; padding-left:10%; " align="left">
																														<span>
																															<xsl:text>Държава издала документа:</xsl:text>
																														</span>
																													</th>
																													<td align="left">
																														<xsl:for-each select="n1:Country">
																															<xsl:for-each select="T3:Code">
																																<xsl:apply-templates/>
																															</xsl:for-each>
																														</xsl:for-each>
																													</td>
																												</tr>
																												<tr>
																													<th style="font-weight:normal; padding-left:10%; " align="left">
																														<span>
																															<xsl:text>Дата на издаване:</xsl:text>
																														</span>
																													</th>
																													<td align="left">
																														<xsl:for-each select="n1:IssueDate">
																															<span>
																																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																																<xsl:text>.</xsl:text>
																																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																																<xsl:text>.</xsl:text>
																																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																															</span>
																														</xsl:for-each>
																													</td>
																												</tr>
																												<tr>
																													<th style="font-weight:normal; padding-left:10%; " align="left">
																														<span>
																															<xsl:text>Дата на валидност:</xsl:text>
																														</span>
																													</th>
																													<td align="left">
																														<xsl:for-each select="n1:ExpiryDate">
																															<span>
																																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																																<xsl:text>.</xsl:text>
																																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																																<xsl:text>.</xsl:text>
																																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																															</span>
																														</xsl:for-each>
																													</td>
																												</tr>
																											</tbody>
																										</table>
																									</xsl:for-each>
																								</td>
																								<td valign="top" width="40%">
																									<xsl:for-each select="T23:IdentificationDoc">
																										<xsl:for-each select="E:EntryTime">
																											<span style="font-size:x-small; font-style:italic; ">
																												<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																												<xsl:text>.</xsl:text>
																												<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																												<xsl:text>.</xsl:text>
																												<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																												<xsl:text> </xsl:text>
																												<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																												<xsl:text>:</xsl:text>
																												<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																												<xsl:text>:</xsl:text>
																												<xsl:choose>
																													<xsl:when test="contains(string(string(.)), 'Z')">
																														<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																													</xsl:when>
																													<xsl:when test="contains(string(string(.)), '+')">
																														<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																													</xsl:when>
																													<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																														<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																													</xsl:when>
																													<xsl:otherwise>
																														<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																													</xsl:otherwise>
																												</xsl:choose>
																											</span>
																										</xsl:for-each>
																									</xsl:for-each>
																								</td>
																							</tr>
																						</tbody>
																					</table>
																				</xsl:when>
																				<xsl:otherwise/>
																			</xsl:choose>
																		</xsl:for-each>
																		<xsl:for-each select="ns2:CountrySubject">
																			<table border="0" width="100%">
																				<tbody>
																					<tr>
																						<td valign="top" width="220">
																							<div style="font-weight:bold; ">
																								<span>
																									<xsl:text>Държава:</xsl:text>
																								</span>
																							</div>
																						</td>
																						<td valign="top">
																							<xsl:for-each select="T3:Code">
																								<span>
																									<xsl:text>Код: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</td>
																						<td valign="top" width="40%"/>
																					</tr>
																				</tbody>
																			</table>
																		</xsl:for-each>
																		<table border="0" width="100%">
																			<thead>
																				<tr>
																					<td valign="top" width="20%">
																						<div style="font-weight:bold; ">
																							<span style="text-decoration:underline; ">
																								<xsl:text>Комуникации</xsl:text>
																							</span>
																						</div>
																					</td>
																					<th align="left" valign="top"/>
																					<th align="left" valign="top" width="40%"/>
																				</tr>
																			</thead>
																			<tbody>
																				<xsl:for-each select="ns2:Communications">
																					<tr>
																						<td valign="top" width="20%"/>
																						<td valign="top">
																							<xsl:for-each select="T28:Type">
																								<xsl:for-each select="T3:Code">
																									<span>
																										<xsl:text>Код: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T28:Value">
																								<span>
																									<xsl:text> - Стойност: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</td>
																						<td valign="top" width="40%">
																							<xsl:for-each select="E:EntryTime">
																								<span style="font-size:x-small; font-style:italic; ">
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																									<xsl:text> </xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:choose>
																										<xsl:when test="contains(string(string(.)), 'Z')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(string(string(.)), '+')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																											<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</span>
																							</xsl:for-each>
																						</td>
																					</tr>
																				</xsl:for-each>
																			</tbody>
																		</table>
																		<table border="0" width="100%">
																			<thead>
																				<tr>
																					<th align="left" valign="top" width="20%">
																						<div style="font-weight:bold; ">
																							<span>
																								<xsl:text>Адреси:</xsl:text>
																							</span>
																						</div>
																					</th>
																					<th align="left" valign="top"/>
																					<th align="left" valign="top" width="40%"/>
																				</tr>
																			</thead>
																			<tbody>
																				<xsl:for-each select="ns2:Addresses">
																					<tr>
																						<td valign="top">
																							<xsl:for-each select="T8:AddressType">
																								<xsl:for-each select="T3:Code">
																									<span>
																										<xsl:text>Вид на адреса (код): </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</td>
																						<td valign="top">
																							<xsl:for-each select="T8:Country">
																								<xsl:for-each select="T3:Code">
																									<span>
																										<xsl:text>Код на държава: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T8:PostalCode">
																								<br/>
																								<span>
																									<xsl:text>Пощенски код: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:PostalBox">
																								<br/>
																								<span>
																									<xsl:text>Пощенска кутия: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:ForeignLocation">
																								<br/>
																								<span>
																									<xsl:text>Населено място в чужбина: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Location">
																								<xsl:for-each select="T3:Code">
																									<br/>
																									<span>
																										<xsl:text>Населено място в България (код от ЕКАТТЕ): </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Region">
																								<xsl:for-each select="T3:Code">
																									<br/>
																									<span>
																										<xsl:text>Район (код от ЕКАТТЕ): </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Street">
																								<br/>
																								<span>
																									<xsl:text>Улица/булевард/ж.к : </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:StreetNumber">
																								<br/>
																								<span>
																									<xsl:text>Номер: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Building">
																								<br/>
																								<span>
																									<xsl:text>Сграда: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Entrance">
																								<br/>
																								<span>
																									<xsl:text>Вход: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Floor">
																								<br/>
																								<span>
																									<xsl:text>Етаж: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Apartment">
																								<br/>
																								<span>
																									<xsl:text>Апартамент: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</td>
																						<td valign="top" width="40%">
																							<xsl:for-each select="E:EntryTime">
																								<span style="font-size:x-small; font-style:italic; ">
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																									<xsl:text> </xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:choose>
																										<xsl:when test="contains(string(string(.)), 'Z')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(string(string(.)), '+')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																											<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</span>
																							</xsl:for-each>
																						</td>
																					</tr>
																				</xsl:for-each>
																			</tbody>
																		</table>
																		<xsl:for-each select="ns2:Remark">
																			<span style="font-weight:bold; ">
																				<xsl:text>Забележки:</xsl:text>
																			</span>
																			<span>
																				<xsl:text>&#160;</xsl:text>
																			</span>
																			<xsl:apply-templates/>
																		</xsl:for-each>
																	</xsl:for-each>
																</td>
															</tr>
															<tr>
																<td colspan="2" valign="top">
																	<xsl:for-each select="REL4:RepresentedSubjects">
																		<div style="background-color:silver; font-weight:bold; ">
																			<span>
																				<xsl:text>Представлявани субекти</xsl:text>
																			</span>
																		</div>
																		<xsl:for-each select="ns2:UIC">
																			<table border="0" width="100%">
																				<tbody>
																					<tr>
																						<td valign="top" width="220">
																							<div style="font-weight:bold; ">
																								<span>
																									<xsl:text>Код по булстат:</xsl:text>
																								</span>
																							</div>
																						</td>
																						<td valign="top">
																							<xsl:for-each select="T25:UIC">
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T25:UICType">
																								<xsl:for-each select="T3:Code">
																									<span>
																										<xsl:text> - </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</td>
																						<td valign="top" width="40%">
																							<xsl:for-each select="E:EntryTime">
																								<span style="font-size:x-small; font-style:italic; ">
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																									<xsl:text> </xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:choose>
																										<xsl:when test="contains(string(string(.)), 'Z')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(string(string(.)), '+')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																											<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</span>
																							</xsl:for-each>
																						</td>
																					</tr>
																				</tbody>
																			</table>
																		</xsl:for-each>
																		<xsl:for-each select="ns2:SubjectType">
																			<table border="0" width="100%">
																				<tbody>
																					<tr>
																						<td valign="top" width="220">
																							<div>
																								<span style="font-weight:bold; ">
																									<xsl:text>Вид на субект (НФЛ, ФЗЛ, Държава, Неизвестен):</xsl:text>
																								</span>
																							</div>
																						</td>
																						<td valign="top">
																							<xsl:for-each select="T3:Code">
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</td>
																						<td valign="top" width="40%"/>
																					</tr>
																				</tbody>
																			</table>
																		</xsl:for-each>
																		<xsl:for-each select="ns2:LegalEntitySubject">
																			<table border="0" width="100%">
																				<tbody>
																					<tr>
																						<td valign="top" width="220">
																							<div style="font-weight:bold; ">
																								<span>
																									<xsl:text>Юридическо лице:</xsl:text>
																								</span>
																							</div>
																						</td>
																						<td valign="top">
																							<xsl:for-each select="T22:Country">
																								<xsl:for-each select="T3:Code">
																									<span>
																										<xsl:text>Държава: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T22:LegalForm">
																								<xsl:for-each select="T3:Code">
																									<br/>
																									<span>
																										<xsl:text>Код на правна форма: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T22:LegalStatute">
																								<xsl:for-each select="T3:Code">
																									<br/>
																									<span>
																										<xsl:text>Код на юридически статус: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T22:SubjectGroup">
																								<xsl:for-each select="T3:Code">
																									<br/>
																									<span>
																										<xsl:text>Код на група субекти: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T22:CyrillicFullName">
																								<br/>
																								<span>
																									<xsl:text>Пълно наименование на кирилица: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T22:CyrillicShortName">
																								<br/>
																								<span>
																									<xsl:text>Кратко наименование на кирилица: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T22:LatinFullName">
																								<br/>
																								<span>
																									<xsl:text>Пълно наименование на латиница: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T22:SubordinateLevel">
																								<xsl:for-each select="T3:Code">
																									<br/>
																									<span>
																										<xsl:text>Код на ниво на подчиненост: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T22:TRStatus">
																								<br/>
																								<span>
																									<xsl:text>Статус от Търговски регистър: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</td>
																						<td valign="top" width="40%">
																							<xsl:for-each select="E:EntryTime">
																								<span style="font-size:x-small; font-style:italic; ">
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																									<xsl:text> </xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:choose>
																										<xsl:when test="contains(string(string(.)), 'Z')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(string(string(.)), '+')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																											<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</span>
																							</xsl:for-each>
																						</td>
																					</tr>
																				</tbody>
																			</table>
																		</xsl:for-each>
																		<xsl:for-each select="ns2:NaturalPersonSubject">
																			<xsl:choose>
																				<xsl:when test="string-length( E:EntryTime ) &gt; 0 or
string-length( T23:Country/T3:Code )&gt; 0 or
string-length( T23:EGN )&gt; 0 or
string-length( T23:LNC )&gt; 0 or
string-length( T23:CyrillicName )&gt; 0 or
string-length( T23:LatinName )&gt; 0 or
string-length( T23:BirthDate )&gt; 0 or
string-length( T23:IdentificationDoc/E:EntryTime ) &gt; 0 or
string-length(  T23:IdentificationDoc/n1:IDType/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IDNumber )  &gt; 0 or
string-length( T23:IdentificationDoc/n1:Country/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IssueDate ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:ExpiryDate )&gt; 0">
																					<table border="0" width="100%">
																						<tbody>
																							<tr>
																								<td valign="top" width="220">
																									<div style="font-weight:bold; ">
																										<span>
																											<xsl:text>Физическо лице:</xsl:text>
																										</span>
																									</div>
																								</td>
																								<td valign="top">
																									<xsl:for-each select="T23:Country">
																										<xsl:for-each select="T3:Code">
																											<span>
																												<xsl:text>Гражданство (код на държава): </xsl:text>
																											</span>
																											<xsl:apply-templates/>
																										</xsl:for-each>
																									</xsl:for-each>
																									<xsl:for-each select="T23:EGN">
																										<br/>
																										<span>
																											<xsl:text>ЕГН: </xsl:text>
																										</span>
																										<xsl:apply-templates/>
																									</xsl:for-each>
																									<xsl:for-each select="T23:LNC">
																										<br/>
																										<span>
																											<xsl:text>ЛНЧ: </xsl:text>
																										</span>
																										<xsl:apply-templates/>
																									</xsl:for-each>
																									<xsl:for-each select="T23:CyrillicName">
																										<br/>
																										<span>
																											<xsl:text>Име на кирилица: </xsl:text>
																										</span>
																										<xsl:apply-templates/>
																									</xsl:for-each>
																									<xsl:for-each select="T23:LatinName">
																										<br/>
																										<span>
																											<xsl:text>Име на латиница: </xsl:text>
																										</span>
																										<xsl:apply-templates/>
																									</xsl:for-each>
																									<xsl:for-each select="T23:BirthDate">
																										<br/>
																										<span>
																											<xsl:text>Дата на раждане: </xsl:text>
																										</span>
																										<span>
																											<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																											<xsl:text>.</xsl:text>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																											<xsl:text>.</xsl:text>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																										</span>
																									</xsl:for-each>
																								</td>
																								<td valign="top" width="40%">
																									<xsl:for-each select="E:EntryTime">
																										<span style="font-size:x-small; font-style:italic; ">
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																											<xsl:text>.</xsl:text>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																											<xsl:text>.</xsl:text>
																											<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																											<xsl:text> </xsl:text>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																											<xsl:text>:</xsl:text>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																											<xsl:text>:</xsl:text>
																											<xsl:choose>
																												<xsl:when test="contains(string(string(.)), 'Z')">
																													<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																												</xsl:when>
																												<xsl:when test="contains(string(string(.)), '+')">
																													<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																												</xsl:when>
																												<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																													<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																												</xsl:when>
																												<xsl:otherwise>
																													<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																												</xsl:otherwise>
																											</xsl:choose>
																										</span>
																									</xsl:for-each>
																								</td>
																							</tr>
																						</tbody>
																					</table>
																					<table border="0" width="100%">
																						<tbody>
																							<tr>
																								<td valign="top" width="220"/>
																								<td valign="top">
																									<xsl:for-each select="T23:IdentificationDoc">
																										<span>
																											<xsl:text>Документ за самоличност</xsl:text>
																										</span>
																										<br/>
																										<table border="0" cellpadding="0" cellspacing="0">
																											<tbody>
																												<tr>
																													<th style="font-weight:normal; padding-left:10%; " align="left">
																														<span>
																															<xsl:text>Вид документ за самоличност:</xsl:text>
																														</span>
																													</th>
																													<td align="left">
																														<xsl:for-each select="n1:IDType">
																															<xsl:for-each select="T3:Code">
																																<xsl:apply-templates/>
																															</xsl:for-each>
																														</xsl:for-each>
																													</td>
																												</tr>
																												<tr>
																													<th style="font-weight:normal; padding-left:10%; " align="left">
																														<span>
																															<xsl:text>Номер на документ за самоличност:</xsl:text>
																														</span>
																													</th>
																													<td align="left">
																														<xsl:for-each select="n1:IDNumber">
																															<xsl:apply-templates/>
																														</xsl:for-each>
																													</td>
																												</tr>
																												<tr>
																													<th style="font-weight:normal; padding-left:10%; " align="left">
																														<span>
																															<xsl:text>Държава издала документа:</xsl:text>
																														</span>
																													</th>
																													<td align="left">
																														<xsl:for-each select="n1:Country">
																															<xsl:for-each select="T3:Code">
																																<xsl:apply-templates/>
																															</xsl:for-each>
																														</xsl:for-each>
																													</td>
																												</tr>
																												<tr>
																													<th style="font-weight:normal; padding-left:10%; " align="left">
																														<span>
																															<xsl:text>Дата на издаване:</xsl:text>
																														</span>
																													</th>
																													<td align="left">
																														<xsl:for-each select="n1:IssueDate">
																															<span>
																																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																																<xsl:text>.</xsl:text>
																																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																																<xsl:text>.</xsl:text>
																																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																															</span>
																														</xsl:for-each>
																													</td>
																												</tr>
																												<tr>
																													<th style="font-weight:normal; padding-left:10%; " align="left">
																														<span>
																															<xsl:text>Дата на валидност:</xsl:text>
																														</span>
																													</th>
																													<td align="left">
																														<xsl:for-each select="n1:ExpiryDate">
																															<span>
																																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																																<xsl:text>.</xsl:text>
																																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																																<xsl:text>.</xsl:text>
																																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																															</span>
																														</xsl:for-each>
																													</td>
																												</tr>
																											</tbody>
																										</table>
																									</xsl:for-each>
																								</td>
																								<td valign="top" width="40%">
																									<xsl:for-each select="T23:IdentificationDoc">
																										<xsl:for-each select="E:EntryTime">
																											<span style="font-size:x-small; font-style:italic; ">
																												<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																												<xsl:text>.</xsl:text>
																												<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																												<xsl:text>.</xsl:text>
																												<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																												<xsl:text> </xsl:text>
																												<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																												<xsl:text>:</xsl:text>
																												<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																												<xsl:text>:</xsl:text>
																												<xsl:choose>
																													<xsl:when test="contains(string(string(.)), 'Z')">
																														<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																													</xsl:when>
																													<xsl:when test="contains(string(string(.)), '+')">
																														<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																													</xsl:when>
																													<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																														<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																													</xsl:when>
																													<xsl:otherwise>
																														<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																													</xsl:otherwise>
																												</xsl:choose>
																											</span>
																										</xsl:for-each>
																									</xsl:for-each>
																								</td>
																							</tr>
																						</tbody>
																					</table>
																				</xsl:when>
																				<xsl:otherwise/>
																			</xsl:choose>
																		</xsl:for-each>
																		<xsl:for-each select="ns2:CountrySubject">
																			<table border="0" width="100%">
																				<tbody>
																					<tr>
																						<td valign="top" width="220">
																							<div style="font-weight:bold; ">
																								<span>
																									<xsl:text>Държава:</xsl:text>
																								</span>
																							</div>
																						</td>
																						<td valign="top">
																							<xsl:for-each select="T3:Code">
																								<span>
																									<xsl:text>Код: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</td>
																						<td valign="top" width="40%"/>
																					</tr>
																				</tbody>
																			</table>
																		</xsl:for-each>
																		<table border="0" width="100%">
																			<thead>
																				<tr>
																					<td valign="top" width="20%">
																						<div style="font-weight:bold; ">
																							<span style="text-decoration:underline; ">
																								<xsl:text>Комуникации</xsl:text>
																							</span>
																						</div>
																					</td>
																					<th align="left" valign="top"/>
																					<th align="left" valign="top" width="40%"/>
																				</tr>
																			</thead>
																			<tbody>
																				<xsl:for-each select="ns2:Communications">
																					<tr>
																						<td valign="top" width="20%"/>
																						<td valign="top">
																							<xsl:for-each select="T28:Type">
																								<xsl:for-each select="T3:Code">
																									<span>
																										<xsl:text>Код: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T28:Value">
																								<span>
																									<xsl:text> - Стойност: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</td>
																						<td valign="top" width="40%">
																							<xsl:for-each select="E:EntryTime">
																								<span style="font-size:x-small; font-style:italic; ">
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																									<xsl:text> </xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:choose>
																										<xsl:when test="contains(string(string(.)), 'Z')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(string(string(.)), '+')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																											<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</span>
																							</xsl:for-each>
																						</td>
																					</tr>
																				</xsl:for-each>
																			</tbody>
																		</table>
																		<table border="0" width="100%">
																			<thead>
																				<tr>
																					<th align="left" valign="top" width="20%">
																						<div style="font-weight:bold; ">
																							<span>
																								<xsl:text>Адреси:</xsl:text>
																							</span>
																						</div>
																					</th>
																					<th align="left" valign="top"/>
																					<th align="left" valign="top" width="40%"/>
																				</tr>
																			</thead>
																			<tbody>
																				<xsl:for-each select="ns2:Addresses">
																					<tr>
																						<td valign="top">
																							<xsl:for-each select="T8:AddressType">
																								<xsl:for-each select="T3:Code">
																									<span>
																										<xsl:text>Вид на адреса (код): </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</td>
																						<td valign="top">
																							<xsl:for-each select="T8:Country">
																								<xsl:for-each select="T3:Code">
																									<span>
																										<xsl:text>Код на държава: </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T8:PostalCode">
																								<br/>
																								<span>
																									<xsl:text>Пощенски код: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:PostalBox">
																								<br/>
																								<span>
																									<xsl:text>Пощенска кутия: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:ForeignLocation">
																								<br/>
																								<span>
																									<xsl:text>Населено място в чужбина: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Location">
																								<xsl:for-each select="T3:Code">
																									<br/>
																									<span>
																										<xsl:text>Населено място в България (код от ЕКАТТЕ): </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Region">
																								<xsl:for-each select="T3:Code">
																									<br/>
																									<span>
																										<xsl:text>Район (код от ЕКАТТЕ): </xsl:text>
																									</span>
																									<xsl:apply-templates/>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Street">
																								<br/>
																								<span>
																									<xsl:text>Улица/булевард/ж.к : </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:StreetNumber">
																								<br/>
																								<span>
																									<xsl:text>Номер: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Building">
																								<br/>
																								<span>
																									<xsl:text>Сграда: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Entrance">
																								<br/>
																								<span>
																									<xsl:text>Вход: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Floor">
																								<br/>
																								<span>
																									<xsl:text>Етаж: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																							<xsl:for-each select="T8:Apartment">
																								<br/>
																								<span>
																									<xsl:text>Апартамент: </xsl:text>
																								</span>
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</td>
																						<td valign="top" width="40%">
																							<xsl:for-each select="E:EntryTime">
																								<span style="font-size:x-small; font-style:italic; ">
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																									<xsl:text>.</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																									<xsl:text> </xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																									<xsl:text>:</xsl:text>
																									<xsl:choose>
																										<xsl:when test="contains(string(string(.)), 'Z')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(string(string(.)), '+')">
																											<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																											<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</span>
																							</xsl:for-each>
																						</td>
																					</tr>
																				</xsl:for-each>
																			</tbody>
																		</table>
																		<xsl:for-each select="ns2:Remark">
																			<span style="font-weight:bold; ">
																				<xsl:text>Забележки:</xsl:text>
																			</span>
																			<span>
																				<xsl:text>&#160;</xsl:text>
																			</span>
																			<xsl:apply-templates/>
																		</xsl:for-each>
																	</xsl:for-each>
																</td>
															</tr>
														</xsl:for-each>
													</tbody>
												</table>
											</td>
										</tr>
									</xsl:for-each>
								</tbody>
							</table>
							<xsl:for-each select="ns21:AdditionalActivities2008">
								<table bgcolor="#e1e1e1" border="0" width="100%">
									<tbody>
										<tr bgcolor="#e1e1e1" valign="top">
											<td colspan="2" valign="top">
												<h3 style="text-decoration:underline; ">
													<span style="font-size:24px; ">
														<xsl:text>Допълнителни дейности по КИД2008</xsl:text>
													</span>
												</h3>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns6:KID2008">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Код:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T3:Code">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<br/>
							</xsl:for-each>
							<table border="0" width="100%">
								<thead>
									<tr bgcolor="#e1e1e1" valign="top">
										<td valign="top">
											<h3 style="text-decoration:underline; ">
												<span style="font-size:24px; ">
													<xsl:text>Професии</xsl:text>
												</span>
											</h3>
										</td>
										<th valign="top" width="40%"/>
									</tr>
								</thead>
								<tbody>
									<xsl:for-each select="ns21:Professions">
										<tr>
											<td valign="top" width="40%">
												<xsl:for-each select="ns20:Profession">
													<xsl:for-each select="T3:Code">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:for-each>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</xsl:for-each>
								</tbody>
							</table>
							<h3 style="background-color:#b3b3b3; ">
								<span>
									<xsl:text>Връзки на субекта на БУЛСТАТ с други субекти</xsl:text>
								</span>
							</h3>
							<table bgcolor="#e1e1e1" border="0" width="100%">
								<tbody>
									<tr bgcolor="#e1e1e1" valign="top">
										<td colspan="2" valign="top">
											<h3 style="text-decoration:underline; ">
												<span style="font-size:24px; ">
													<xsl:text>Управители</xsl:text>
												</span>
											</h3>
										</td>
										<td valign="top" width="40%"/>
									</tr>
								</tbody>
							</table>
							<xsl:for-each select="ns21:Managers">
								<table border="0" width="100%">
									<tbody>
										<tr bgcolor="#d2d2d2">
											<td colspan="2" valign="top" width="220">
												<div style="font-weight:bold; ">
													<span>
														<xsl:text>Управител</xsl:text>
													</span>
												</div>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns14:Position">
									<table border="0" width="100%">
										<tbody>
											<tr>
												<td valign="top" width="220">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Позиция:</xsl:text>
														</span>
													</div>
												</td>
												<td valign="top">
													<xsl:for-each select="T3:Code">
														<xsl:apply-templates/>
													</xsl:for-each>
												</td>
												<td valign="top" width="40%"/>
											</tr>
										</tbody>
									</table>
								</xsl:for-each>
								<xsl:for-each select="ns14:RelatedSubject">
									<xsl:for-each select="ns2:UIC">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Код по булстат:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T25:UIC">
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T25:UICType">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text> - </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:SubjectType">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div>
															<span style="font-weight:bold; ">
																<xsl:text>Вид на субект (НФЛ, ФЗЛ, Държава, Неизвестен):</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%"/>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:LegalEntitySubject">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Юридическо лице:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T22:Country">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Държава: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:LegalForm">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на правна форма: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:LegalStatute">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на юридически статус: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:SubjectGroup">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на група субекти: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:CyrillicFullName">
															<br/>
															<span>
																<xsl:text>Пълно наименование на кирилица: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:CyrillicShortName">
															<br/>
															<span>
																<xsl:text>Кратко наименование на кирилица: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:LatinFullName">
															<br/>
															<span>
																<xsl:text>Пълно наименование на латиница: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:SubordinateLevel">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на ниво на подчиненост: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:TRStatus">
															<br/>
															<span>
																<xsl:text>Статус от Търговски регистър: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:NaturalPersonSubject">
										<xsl:choose>
											<xsl:when test="string-length( E:EntryTime ) &gt; 0 or
string-length( T23:Country/T3:Code )&gt; 0 or
string-length( T23:EGN )&gt; 0 or
string-length( T23:LNC )&gt; 0 or
string-length( T23:CyrillicName )&gt; 0 or
string-length( T23:LatinName )&gt; 0 or
string-length( T23:BirthDate )&gt; 0 or
string-length( T23:IdentificationDoc/E:EntryTime ) &gt; 0 or
string-length(  T23:IdentificationDoc/n1:IDType/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IDNumber )  &gt; 0 or
string-length( T23:IdentificationDoc/n1:Country/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IssueDate ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:ExpiryDate )&gt; 0">
												<table border="0" width="100%">
													<tbody>
														<tr>
															<td valign="top" width="220">
																<div style="font-weight:bold; ">
																	<span>
																		<xsl:text>Физическо лице:</xsl:text>
																	</span>
																</div>
															</td>
															<td valign="top">
																<xsl:for-each select="T23:Country">
																	<xsl:for-each select="T3:Code">
																		<span>
																			<xsl:text>Гражданство (код на държава): </xsl:text>
																		</span>
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:for-each>
																<xsl:for-each select="T23:EGN">
																	<br/>
																	<span>
																		<xsl:text>ЕГН: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:LNC">
																	<br/>
																	<span>
																		<xsl:text>ЛНЧ: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:CyrillicName">
																	<br/>
																	<span>
																		<xsl:text>Име на кирилица: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:LatinName">
																	<br/>
																	<span>
																		<xsl:text>Име на латиница: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:BirthDate">
																	<br/>
																	<span>
																		<xsl:text>Дата на раждане: </xsl:text>
																	</span>
																	<span>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	</span>
																</xsl:for-each>
															</td>
															<td valign="top" width="40%">
																<xsl:for-each select="E:EntryTime">
																	<span style="font-size:x-small; font-style:italic; ">
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:choose>
																			<xsl:when test="contains(string(string(.)), 'Z')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(string(string(.)), '+')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																				<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</span>
																</xsl:for-each>
															</td>
														</tr>
													</tbody>
												</table>
												<table border="0" width="100%">
													<tbody>
														<tr>
															<td valign="top" width="220"/>
															<td valign="top">
																<xsl:for-each select="T23:IdentificationDoc">
																	<span>
																		<xsl:text>Документ за самоличност</xsl:text>
																	</span>
																	<br/>
																	<table border="0" cellpadding="0" cellspacing="0">
																		<tbody>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Вид документ за самоличност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IDType">
																						<xsl:for-each select="T3:Code">
																							<xsl:apply-templates/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Номер на документ за самоличност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IDNumber">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Държава издала документа:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:Country">
																						<xsl:for-each select="T3:Code">
																							<xsl:apply-templates/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Дата на издаване:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IssueDate">
																						<span>
																							<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																						</span>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Дата на валидност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:ExpiryDate">
																						<span>
																							<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																						</span>
																					</xsl:for-each>
																				</td>
																			</tr>
																		</tbody>
																	</table>
																</xsl:for-each>
															</td>
															<td valign="top" width="40%">
																<xsl:for-each select="T23:IdentificationDoc">
																	<xsl:for-each select="E:EntryTime">
																		<span style="font-size:x-small; font-style:italic; ">
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			<xsl:text> </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:choose>
																				<xsl:when test="contains(string(string(.)), 'Z')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(string(string(.)), '+')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																					<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</span>
																	</xsl:for-each>
																</xsl:for-each>
															</td>
														</tr>
													</tbody>
												</table>
											</xsl:when>
											<xsl:otherwise/>
										</xsl:choose>
									</xsl:for-each>
									<xsl:for-each select="ns2:CountrySubject">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Държава:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<span>
																<xsl:text>Код: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%"/>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<table border="0" width="100%">
										<thead>
											<tr>
												<td valign="top" width="20%">
													<div style="font-weight:bold; ">
														<span style="text-decoration:underline; ">
															<xsl:text>Комуникации</xsl:text>
														</span>
													</div>
												</td>
												<th align="left" valign="top"/>
												<th align="left" valign="top" width="40%"/>
											</tr>
										</thead>
										<tbody>
											<xsl:for-each select="ns2:Communications">
												<tr>
													<td valign="top" width="20%"/>
													<td valign="top">
														<xsl:for-each select="T28:Type">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Код: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T28:Value">
															<span>
																<xsl:text> - Стойност: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</xsl:for-each>
										</tbody>
									</table>
									<table border="0" width="100%">
										<thead>
											<tr>
												<th align="left" valign="top" width="20%">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Адреси:</xsl:text>
														</span>
													</div>
												</th>
												<th align="left" valign="top"/>
												<th align="left" valign="top" width="40%"/>
											</tr>
										</thead>
										<tbody>
											<xsl:for-each select="ns2:Addresses">
												<tr>
													<td valign="top">
														<xsl:for-each select="T8:AddressType">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Вид на адреса (код): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
													</td>
													<td valign="top">
														<xsl:for-each select="T8:Country">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Код на държава: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:PostalCode">
															<br/>
															<span>
																<xsl:text>Пощенски код: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:PostalBox">
															<br/>
															<span>
																<xsl:text>Пощенска кутия: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:ForeignLocation">
															<br/>
															<span>
																<xsl:text>Населено място в чужбина: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Location">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Населено място в България (код от ЕКАТТЕ): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:Region">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Район (код от ЕКАТТЕ): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:Street">
															<br/>
															<span>
																<xsl:text>Улица/булевард/ж.к : </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:StreetNumber">
															<br/>
															<span>
																<xsl:text>Номер: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Building">
															<br/>
															<span>
																<xsl:text>Сграда: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Entrance">
															<br/>
															<span>
																<xsl:text>Вход: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Floor">
															<br/>
															<span>
																<xsl:text>Етаж: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Apartment">
															<br/>
															<span>
																<xsl:text>Апартамент: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</xsl:for-each>
										</tbody>
									</table>
									<xsl:for-each select="ns2:Remark">
										<span style="font-weight:bold; ">
											<xsl:text>Забележки:</xsl:text>
										</span>
										<span>
											<xsl:text>&#160;</xsl:text>
										</span>
										<xsl:apply-templates/>
									</xsl:for-each>
								</xsl:for-each>
								<xsl:for-each select="ns14:RepresentedSubjects">
									<div style="background-color:silver; font-weight:bold; ">
										<span>
											<xsl:text>Субект, който представлява</xsl:text>
										</span>
									</div>
									<xsl:for-each select="ns2:UIC">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Код по булстат:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T25:UIC">
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T25:UICType">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text> - </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:SubjectType">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div>
															<span style="font-weight:bold; ">
																<xsl:text>Вид на субект (НФЛ, ФЗЛ, Държава, Неизвестен):</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%"/>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:LegalEntitySubject">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Юридическо лице:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T22:Country">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Държава: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:LegalForm">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на правна форма: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:LegalStatute">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на юридически статус: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:SubjectGroup">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на група субекти: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:CyrillicFullName">
															<br/>
															<span>
																<xsl:text>Пълно наименование на кирилица: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:CyrillicShortName">
															<br/>
															<span>
																<xsl:text>Кратко наименование на кирилица: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:LatinFullName">
															<br/>
															<span>
																<xsl:text>Пълно наименование на латиница: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:SubordinateLevel">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на ниво на подчиненост: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:TRStatus">
															<br/>
															<span>
																<xsl:text>Статус от Търговски регистър: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:NaturalPersonSubject">
										<xsl:choose>
											<xsl:when test="string-length( E:EntryTime ) &gt; 0 or
string-length( T23:Country/T3:Code )&gt; 0 or
string-length( T23:EGN )&gt; 0 or
string-length( T23:LNC )&gt; 0 or
string-length( T23:CyrillicName )&gt; 0 or
string-length( T23:LatinName )&gt; 0 or
string-length( T23:BirthDate )&gt; 0 or
string-length( T23:IdentificationDoc/E:EntryTime ) &gt; 0 or
string-length(  T23:IdentificationDoc/n1:IDType/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IDNumber )  &gt; 0 or
string-length( T23:IdentificationDoc/n1:Country/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IssueDate ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:ExpiryDate )&gt; 0">
												<table border="0" width="100%">
													<tbody>
														<tr>
															<td valign="top" width="220">
																<div style="font-weight:bold; ">
																	<span>
																		<xsl:text>Физическо лице:</xsl:text>
																	</span>
																</div>
															</td>
															<td valign="top">
																<xsl:for-each select="T23:Country">
																	<xsl:for-each select="T3:Code">
																		<span>
																			<xsl:text>Гражданство (код на държава): </xsl:text>
																		</span>
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:for-each>
																<xsl:for-each select="T23:EGN">
																	<br/>
																	<span>
																		<xsl:text>ЕГН: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:LNC">
																	<br/>
																	<span>
																		<xsl:text>ЛНЧ: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:CyrillicName">
																	<br/>
																	<span>
																		<xsl:text>Име на кирилица: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:LatinName">
																	<br/>
																	<span>
																		<xsl:text>Име на латиница: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:BirthDate">
																	<br/>
																	<span>
																		<xsl:text>Дата на раждане: </xsl:text>
																	</span>
																	<span>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	</span>
																</xsl:for-each>
															</td>
															<td valign="top" width="40%">
																<xsl:for-each select="E:EntryTime">
																	<span style="font-size:x-small; font-style:italic; ">
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:choose>
																			<xsl:when test="contains(string(string(.)), 'Z')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(string(string(.)), '+')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																				<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</span>
																</xsl:for-each>
															</td>
														</tr>
													</tbody>
												</table>
												<table border="0" width="100%">
													<tbody>
														<tr>
															<td valign="top" width="220"/>
															<td valign="top">
																<xsl:for-each select="T23:IdentificationDoc">
																	<span>
																		<xsl:text>Документ за самоличност</xsl:text>
																	</span>
																	<br/>
																	<table border="0" cellpadding="0" cellspacing="0">
																		<tbody>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Вид документ за самоличност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IDType">
																						<xsl:for-each select="T3:Code">
																							<xsl:apply-templates/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Номер на документ за самоличност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IDNumber">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Държава издала документа:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:Country">
																						<xsl:for-each select="T3:Code">
																							<xsl:apply-templates/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Дата на издаване:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IssueDate">
																						<span>
																							<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																						</span>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Дата на валидност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:ExpiryDate">
																						<span>
																							<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																						</span>
																					</xsl:for-each>
																				</td>
																			</tr>
																		</tbody>
																	</table>
																</xsl:for-each>
															</td>
															<td valign="top" width="40%">
																<xsl:for-each select="T23:IdentificationDoc">
																	<xsl:for-each select="E:EntryTime">
																		<span style="font-size:x-small; font-style:italic; ">
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			<xsl:text> </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:choose>
																				<xsl:when test="contains(string(string(.)), 'Z')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(string(string(.)), '+')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																					<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</span>
																	</xsl:for-each>
																</xsl:for-each>
															</td>
														</tr>
													</tbody>
												</table>
											</xsl:when>
											<xsl:otherwise/>
										</xsl:choose>
									</xsl:for-each>
									<xsl:for-each select="ns2:CountrySubject">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Държава:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<span>
																<xsl:text>Код: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%"/>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<table border="0" width="100%">
										<thead>
											<tr>
												<td valign="top" width="20%">
													<div style="font-weight:bold; ">
														<span style="text-decoration:underline; ">
															<xsl:text>Комуникации</xsl:text>
														</span>
													</div>
												</td>
												<th align="left" valign="top"/>
												<th align="left" valign="top" width="40%"/>
											</tr>
										</thead>
										<tbody>
											<xsl:for-each select="ns2:Communications">
												<tr>
													<td valign="top" width="20%"/>
													<td valign="top">
														<xsl:for-each select="T28:Type">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Код: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T28:Value">
															<span>
																<xsl:text> - Стойност: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</xsl:for-each>
										</tbody>
									</table>
									<table border="0" width="100%">
										<thead>
											<tr>
												<th align="left" valign="top" width="20%">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Адреси:</xsl:text>
														</span>
													</div>
												</th>
												<th align="left" valign="top"/>
												<th align="left" valign="top" width="40%"/>
											</tr>
										</thead>
										<tbody>
											<xsl:for-each select="ns2:Addresses">
												<tr>
													<td valign="top">
														<xsl:for-each select="T8:AddressType">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Вид на адреса (код): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
													</td>
													<td valign="top">
														<xsl:for-each select="T8:Country">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Код на държава: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:PostalCode">
															<br/>
															<span>
																<xsl:text>Пощенски код: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:PostalBox">
															<br/>
															<span>
																<xsl:text>Пощенска кутия: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:ForeignLocation">
															<br/>
															<span>
																<xsl:text>Населено място в чужбина: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Location">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Населено място в България (код от ЕКАТТЕ): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:Region">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Район (код от ЕКАТТЕ): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:Street">
															<br/>
															<span>
																<xsl:text>Улица/булевард/ж.к : </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:StreetNumber">
															<br/>
															<span>
																<xsl:text>Номер: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Building">
															<br/>
															<span>
																<xsl:text>Сграда: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Entrance">
															<br/>
															<span>
																<xsl:text>Вход: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Floor">
															<br/>
															<span>
																<xsl:text>Етаж: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Apartment">
															<br/>
															<span>
																<xsl:text>Апартамент: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</xsl:for-each>
										</tbody>
									</table>
									<xsl:for-each select="ns2:Remark">
										<span style="font-weight:bold; ">
											<xsl:text>Забележки:</xsl:text>
										</span>
										<span>
											<xsl:text>&#160;</xsl:text>
										</span>
										<xsl:apply-templates/>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
							<table bgcolor="#e1e1e1" border="0" width="100%">
								<tbody>
									<tr bgcolor="#e1e1e1" valign="top">
										<td colspan="2" valign="top">
											<h3 style="text-decoration:underline; ">
												<span style="font-size:24px; ">
													<xsl:text>Собственици/ съдружници</xsl:text>
												</span>
											</h3>
										</td>
										<td valign="top" width="40%"/>
									</tr>
								</tbody>
							</table>
							<xsl:for-each select="ns21:Partners">
								<table border="0" width="100%">
									<tbody>
										<tr bgcolor="#d2d2d2">
											<td colspan="2" valign="top" width="220">
												<div style="font-weight:bold; ">
													<span>
														<xsl:text>Съдружник</xsl:text>
													</span>
												</div>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
												<xsl:for-each select="T40:OperationType">
													<span style="font-style:italic; ">
														<xsl:text>(</xsl:text>
													</span>
													<span style="font-style:italic; ">
														<xsl:apply-templates/>
													</span>
													<span style="font-style:italic; ">
														<xsl:text>)</xsl:text>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns15:Role">
									<span style="font-weight:bold; ">
										<xsl:text>Роля в собствеността: </xsl:text>
									</span>
									<xsl:for-each select="T3:Code">
										<xsl:apply-templates/>
									</xsl:for-each>
								</xsl:for-each>
								<xsl:for-each select="ns15:Percent">
									<br/>
									<span style="font-weight:bold; ">
										<xsl:text>Процент разпределение на собств. без капитал: </xsl:text>
									</span>
									<span style="font-weight:bold; ">
										<xsl:apply-templates/>
									</span>
								</xsl:for-each>
								<xsl:for-each select="ns15:Amount">
									<br/>
									<span style="font-weight:bold; ">
										<xsl:text>Дял в собствеността: </xsl:text>
									</span>
									<span style="font-weight:bold; ">
										<xsl:apply-templates/>
									</span>
								</xsl:for-each>
								<xsl:for-each select="ns15:RelatedSubject">
									<xsl:for-each select="ns2:UIC">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Код по булстат:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T25:UIC">
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T25:UICType">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text> - </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:SubjectType">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div>
															<span style="font-weight:bold; ">
																<xsl:text>Вид на субект (НФЛ, ФЗЛ, Държава, Неизвестен):</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%"/>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:LegalEntitySubject">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Юридическо лице:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T22:Country">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Държава: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:LegalForm">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на правна форма: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:LegalStatute">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на юридически статус: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:SubjectGroup">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на група субекти: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:CyrillicFullName">
															<br/>
															<span>
																<xsl:text>Пълно наименование на кирилица: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:CyrillicShortName">
															<br/>
															<span>
																<xsl:text>Кратко наименование на кирилица: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:LatinFullName">
															<br/>
															<span>
																<xsl:text>Пълно наименование на латиница: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:SubordinateLevel">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на ниво на подчиненост: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:TRStatus">
															<br/>
															<span>
																<xsl:text>Статус от Търговски регистър: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:NaturalPersonSubject">
										<xsl:choose>
											<xsl:when test="string-length( E:EntryTime ) &gt; 0 or
string-length( T23:Country/T3:Code )&gt; 0 or
string-length( T23:EGN )&gt; 0 or
string-length( T23:LNC )&gt; 0 or
string-length( T23:CyrillicName )&gt; 0 or
string-length( T23:LatinName )&gt; 0 or
string-length( T23:BirthDate )&gt; 0 or
string-length( T23:IdentificationDoc/E:EntryTime ) &gt; 0 or
string-length(  T23:IdentificationDoc/n1:IDType/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IDNumber )  &gt; 0 or
string-length( T23:IdentificationDoc/n1:Country/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IssueDate ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:ExpiryDate )&gt; 0">
												<table border="0" width="100%">
													<tbody>
														<tr>
															<td valign="top" width="220">
																<div style="font-weight:bold; ">
																	<span>
																		<xsl:text>Физическо лице:</xsl:text>
																	</span>
																</div>
															</td>
															<td valign="top">
																<xsl:for-each select="T23:Country">
																	<xsl:for-each select="T3:Code">
																		<span>
																			<xsl:text>Гражданство (код на държава): </xsl:text>
																		</span>
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:for-each>
																<xsl:for-each select="T23:EGN">
																	<br/>
																	<span>
																		<xsl:text>ЕГН: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:LNC">
																	<br/>
																	<span>
																		<xsl:text>ЛНЧ: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:CyrillicName">
																	<br/>
																	<span>
																		<xsl:text>Име на кирилица: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:LatinName">
																	<br/>
																	<span>
																		<xsl:text>Име на латиница: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:BirthDate">
																	<br/>
																	<span>
																		<xsl:text>Дата на раждане: </xsl:text>
																	</span>
																	<span>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	</span>
																</xsl:for-each>
															</td>
															<td valign="top" width="40%">
																<xsl:for-each select="E:EntryTime">
																	<span style="font-size:x-small; font-style:italic; ">
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:choose>
																			<xsl:when test="contains(string(string(.)), 'Z')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(string(string(.)), '+')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																				<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</span>
																</xsl:for-each>
															</td>
														</tr>
													</tbody>
												</table>
												<table border="0" width="100%">
													<tbody>
														<tr>
															<td valign="top" width="220"/>
															<td valign="top">
																<xsl:for-each select="T23:IdentificationDoc">
																	<span>
																		<xsl:text>Документ за самоличност</xsl:text>
																	</span>
																	<br/>
																	<table border="0" cellpadding="0" cellspacing="0">
																		<tbody>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Вид документ за самоличност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IDType">
																						<xsl:for-each select="T3:Code">
																							<xsl:apply-templates/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Номер на документ за самоличност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IDNumber">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Държава издала документа:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:Country">
																						<xsl:for-each select="T3:Code">
																							<xsl:apply-templates/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Дата на издаване:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IssueDate">
																						<span>
																							<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																						</span>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Дата на валидност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:ExpiryDate">
																						<span>
																							<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																						</span>
																					</xsl:for-each>
																				</td>
																			</tr>
																		</tbody>
																	</table>
																</xsl:for-each>
															</td>
															<td valign="top" width="40%">
																<xsl:for-each select="T23:IdentificationDoc">
																	<xsl:for-each select="E:EntryTime">
																		<span style="font-size:x-small; font-style:italic; ">
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			<xsl:text> </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:choose>
																				<xsl:when test="contains(string(string(.)), 'Z')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(string(string(.)), '+')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																					<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</span>
																	</xsl:for-each>
																</xsl:for-each>
															</td>
														</tr>
													</tbody>
												</table>
											</xsl:when>
											<xsl:otherwise/>
										</xsl:choose>
									</xsl:for-each>
									<xsl:for-each select="ns2:CountrySubject">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Държава:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<span>
																<xsl:text>Код: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%"/>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<table border="0" width="100%">
										<thead>
											<tr>
												<td valign="top" width="20%">
													<div style="font-weight:bold; ">
														<span style="text-decoration:underline; ">
															<xsl:text>Комуникации</xsl:text>
														</span>
													</div>
												</td>
												<th align="left" valign="top"/>
												<th align="left" valign="top" width="40%"/>
											</tr>
										</thead>
										<tbody>
											<xsl:for-each select="ns2:Communications">
												<tr>
													<td valign="top" width="20%"/>
													<td valign="top">
														<xsl:for-each select="T28:Type">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Код: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T28:Value">
															<span>
																<xsl:text> - Стойност: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</xsl:for-each>
										</tbody>
									</table>
									<table border="0" width="100%">
										<thead>
											<tr>
												<th align="left" valign="top" width="20%">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Адреси:</xsl:text>
														</span>
													</div>
												</th>
												<th align="left" valign="top"/>
												<th align="left" valign="top" width="40%"/>
											</tr>
										</thead>
										<tbody>
											<xsl:for-each select="ns2:Addresses">
												<tr>
													<td valign="top">
														<xsl:for-each select="T8:AddressType">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Вид на адреса (код): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
													</td>
													<td valign="top">
														<xsl:for-each select="T8:Country">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Код на държава: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:PostalCode">
															<br/>
															<span>
																<xsl:text>Пощенски код: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:PostalBox">
															<br/>
															<span>
																<xsl:text>Пощенска кутия: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:ForeignLocation">
															<br/>
															<span>
																<xsl:text>Населено място в чужбина: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Location">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Населено място в България (код от ЕКАТТЕ): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:Region">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Район (код от ЕКАТТЕ): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:Street">
															<br/>
															<span>
																<xsl:text>Улица/булевард/ж.к : </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:StreetNumber">
															<br/>
															<span>
																<xsl:text>Номер: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Building">
															<br/>
															<span>
																<xsl:text>Сграда: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Entrance">
															<br/>
															<span>
																<xsl:text>Вход: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Floor">
															<br/>
															<span>
																<xsl:text>Етаж: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Apartment">
															<br/>
															<span>
																<xsl:text>Апартамент: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</xsl:for-each>
										</tbody>
									</table>
									<xsl:for-each select="ns2:Remark">
										<span style="font-weight:bold; ">
											<xsl:text>Забележки:</xsl:text>
										</span>
										<span>
											<xsl:text>&#160;</xsl:text>
										</span>
										<xsl:apply-templates/>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
							<table bgcolor="#e1e1e1" border="0" width="100%">
								<tbody>
									<tr bgcolor="#e1e1e1" valign="top">
										<td colspan="2" valign="top">
											<h3 style="text-decoration:underline; ">
												<span style="font-size:24px; ">
													<xsl:text>Правоприемство</xsl:text>
												</span>
											</h3>
										</td>
										<td valign="top" width="40%"/>
									</tr>
								</tbody>
							</table>
							<xsl:for-each select="ns21:Assignee">
								<table border="0" width="100%">
									<tbody>
										<tr bgcolor="#d2d2d2">
											<td colspan="2" valign="top" width="220">
												<div style="font-weight:bold; ">
													<span>
														<xsl:text>Правоприемник</xsl:text>
													</span>
												</div>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
												<xsl:for-each select="T40:OperationType">
													<span style="font-style:italic; ">
														<xsl:text>(</xsl:text>
													</span>
													<span style="font-style:italic; ">
														<xsl:apply-templates/>
													</span>
													<span style="font-style:italic; ">
														<xsl:text>)</xsl:text>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns16:Type">
									<xsl:for-each select="T3:Code">
										<span>
											<xsl:text>Вид правоприемство: </xsl:text>
										</span>
										<xsl:apply-templates/>
									</xsl:for-each>
								</xsl:for-each>
								<xsl:for-each select="ns16:RelatedSubjects">
									<xsl:for-each select="ns2:UIC">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Код по булстат:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T25:UIC">
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T25:UICType">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text> - </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:SubjectType">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div>
															<span style="font-weight:bold; ">
																<xsl:text>Вид на субект (НФЛ, ФЗЛ, Държава, Неизвестен):</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%"/>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:LegalEntitySubject">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Юридическо лице:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T22:Country">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Държава: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:LegalForm">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на правна форма: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:LegalStatute">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на юридически статус: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:SubjectGroup">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на група субекти: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:CyrillicFullName">
															<br/>
															<span>
																<xsl:text>Пълно наименование на кирилица: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:CyrillicShortName">
															<br/>
															<span>
																<xsl:text>Кратко наименование на кирилица: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:LatinFullName">
															<br/>
															<span>
																<xsl:text>Пълно наименование на латиница: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:SubordinateLevel">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на ниво на подчиненост: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:TRStatus">
															<br/>
															<span>
																<xsl:text>Статус от Търговски регистър: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:NaturalPersonSubject">
										<xsl:choose>
											<xsl:when test="string-length( E:EntryTime ) &gt; 0 or
string-length( T23:Country/T3:Code )&gt; 0 or
string-length( T23:EGN )&gt; 0 or
string-length( T23:LNC )&gt; 0 or
string-length( T23:CyrillicName )&gt; 0 or
string-length( T23:LatinName )&gt; 0 or
string-length( T23:BirthDate )&gt; 0 or
string-length( T23:IdentificationDoc/E:EntryTime ) &gt; 0 or
string-length(  T23:IdentificationDoc/n1:IDType/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IDNumber )  &gt; 0 or
string-length( T23:IdentificationDoc/n1:Country/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IssueDate ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:ExpiryDate )&gt; 0">
												<table border="0" width="100%">
													<tbody>
														<tr>
															<td valign="top" width="220">
																<div style="font-weight:bold; ">
																	<span>
																		<xsl:text>Физическо лице:</xsl:text>
																	</span>
																</div>
															</td>
															<td valign="top">
																<xsl:for-each select="T23:Country">
																	<xsl:for-each select="T3:Code">
																		<span>
																			<xsl:text>Гражданство (код на държава): </xsl:text>
																		</span>
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:for-each>
																<xsl:for-each select="T23:EGN">
																	<br/>
																	<span>
																		<xsl:text>ЕГН: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:LNC">
																	<br/>
																	<span>
																		<xsl:text>ЛНЧ: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:CyrillicName">
																	<br/>
																	<span>
																		<xsl:text>Име на кирилица: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:LatinName">
																	<br/>
																	<span>
																		<xsl:text>Име на латиница: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:BirthDate">
																	<br/>
																	<span>
																		<xsl:text>Дата на раждане: </xsl:text>
																	</span>
																	<span>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	</span>
																</xsl:for-each>
															</td>
															<td valign="top" width="40%">
																<xsl:for-each select="E:EntryTime">
																	<span style="font-size:x-small; font-style:italic; ">
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:choose>
																			<xsl:when test="contains(string(string(.)), 'Z')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(string(string(.)), '+')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																				<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</span>
																</xsl:for-each>
															</td>
														</tr>
													</tbody>
												</table>
												<table border="0" width="100%">
													<tbody>
														<tr>
															<td valign="top" width="220"/>
															<td valign="top">
																<xsl:for-each select="T23:IdentificationDoc">
																	<span>
																		<xsl:text>Документ за самоличност</xsl:text>
																	</span>
																	<br/>
																	<table border="0" cellpadding="0" cellspacing="0">
																		<tbody>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Вид документ за самоличност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IDType">
																						<xsl:for-each select="T3:Code">
																							<xsl:apply-templates/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Номер на документ за самоличност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IDNumber">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Държава издала документа:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:Country">
																						<xsl:for-each select="T3:Code">
																							<xsl:apply-templates/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Дата на издаване:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IssueDate">
																						<span>
																							<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																						</span>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Дата на валидност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:ExpiryDate">
																						<span>
																							<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																						</span>
																					</xsl:for-each>
																				</td>
																			</tr>
																		</tbody>
																	</table>
																</xsl:for-each>
															</td>
															<td valign="top" width="40%">
																<xsl:for-each select="T23:IdentificationDoc">
																	<xsl:for-each select="E:EntryTime">
																		<span style="font-size:x-small; font-style:italic; ">
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			<xsl:text> </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:choose>
																				<xsl:when test="contains(string(string(.)), 'Z')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(string(string(.)), '+')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																					<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</span>
																	</xsl:for-each>
																</xsl:for-each>
															</td>
														</tr>
													</tbody>
												</table>
											</xsl:when>
											<xsl:otherwise/>
										</xsl:choose>
									</xsl:for-each>
									<xsl:for-each select="ns2:CountrySubject">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Държава:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<span>
																<xsl:text>Код: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%"/>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<table border="0" width="100%">
										<thead>
											<tr>
												<td valign="top" width="20%">
													<div style="font-weight:bold; ">
														<span style="text-decoration:underline; ">
															<xsl:text>Комуникации</xsl:text>
														</span>
													</div>
												</td>
												<th align="left" valign="top"/>
												<th align="left" valign="top" width="40%"/>
											</tr>
										</thead>
										<tbody>
											<xsl:for-each select="ns2:Communications">
												<tr>
													<td valign="top" width="20%"/>
													<td valign="top">
														<xsl:for-each select="T28:Type">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Код: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T28:Value">
															<span>
																<xsl:text> - Стойност: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</xsl:for-each>
										</tbody>
									</table>
									<table border="0" width="100%">
										<thead>
											<tr>
												<th align="left" valign="top" width="20%">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Адреси:</xsl:text>
														</span>
													</div>
												</th>
												<th align="left" valign="top"/>
												<th align="left" valign="top" width="40%"/>
											</tr>
										</thead>
										<tbody>
											<xsl:for-each select="ns2:Addresses">
												<tr>
													<td valign="top">
														<xsl:for-each select="T8:AddressType">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Вид на адреса (код): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
													</td>
													<td valign="top">
														<xsl:for-each select="T8:Country">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Код на държава: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:PostalCode">
															<br/>
															<span>
																<xsl:text>Пощенски код: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:PostalBox">
															<br/>
															<span>
																<xsl:text>Пощенска кутия: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:ForeignLocation">
															<br/>
															<span>
																<xsl:text>Населено място в чужбина: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Location">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Населено място в България (код от ЕКАТТЕ): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:Region">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Район (код от ЕКАТТЕ): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:Street">
															<br/>
															<span>
																<xsl:text>Улица/булевард/ж.к : </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:StreetNumber">
															<br/>
															<span>
																<xsl:text>Номер: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Building">
															<br/>
															<span>
																<xsl:text>Сграда: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Entrance">
															<br/>
															<span>
																<xsl:text>Вход: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Floor">
															<br/>
															<span>
																<xsl:text>Етаж: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Apartment">
															<br/>
															<span>
																<xsl:text>Апартамент: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</xsl:for-each>
										</tbody>
									</table>
									<xsl:for-each select="ns2:Remark">
										<span style="font-weight:bold; ">
											<xsl:text>Забележки:</xsl:text>
										</span>
										<span>
											<xsl:text>&#160;</xsl:text>
										</span>
										<xsl:apply-templates/>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
							<table bgcolor="#e1e1e1" border="0" width="100%">
								<tbody>
									<tr bgcolor="#e1e1e1" valign="top">
										<td colspan="2" valign="top">
											<h3 style="text-decoration:underline; ">
												<span style="font-size:24px; ">
													<xsl:text>Принадлежност</xsl:text>
												</span>
											</h3>
										</td>
										<td valign="top" width="40%"/>
									</tr>
								</tbody>
							</table>
							<xsl:for-each select="ns21:Belonging">
								<table border="0" width="100%">
									<tbody>
										<tr bgcolor="#d2d2d2">
											<td colspan="2" valign="top" width="220">
												<div style="font-weight:bold; ">
													<span>
														<xsl:text>Субект</xsl:text>
													</span>
												</div>
											</td>
											<td valign="top" width="40%">
												<xsl:for-each select="E:EntryTime">
													<span style="font-size:x-small; font-style:italic; ">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
														<xsl:text> </xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
														<xsl:text>:</xsl:text>
														<xsl:choose>
															<xsl:when test="contains(string(string(.)), 'Z')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(string(string(.)), '+')">
																<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
															</xsl:when>
															<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
															</xsl:otherwise>
														</xsl:choose>
													</span>
												</xsl:for-each>
												<xsl:for-each select="T40:OperationType">
													<span style="font-style:italic; ">
														<xsl:text>(</xsl:text>
													</span>
													<span style="font-style:italic; ">
														<xsl:apply-templates/>
													</span>
													<span style="font-style:italic; ">
														<xsl:text>)</xsl:text>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:for-each select="ns17:Type">
									<xsl:for-each select="T3:Code">
										<span>
											<xsl:text>Вид принадлежност: </xsl:text>
										</span>
										<xsl:apply-templates/>
									</xsl:for-each>
								</xsl:for-each>
								<xsl:for-each select="ns17:RelatedSubject">
									<xsl:for-each select="ns2:UIC">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Код по булстат:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T25:UIC">
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T25:UICType">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text> - </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:SubjectType">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div>
															<span style="font-weight:bold; ">
																<xsl:text>Вид на субект (НФЛ, ФЗЛ, Държава, Неизвестен):</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%"/>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:LegalEntitySubject">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Юридическо лице:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T22:Country">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Държава: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:LegalForm">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на правна форма: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:LegalStatute">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на юридически статус: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:SubjectGroup">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на група субекти: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:CyrillicFullName">
															<br/>
															<span>
																<xsl:text>Пълно наименование на кирилица: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:CyrillicShortName">
															<br/>
															<span>
																<xsl:text>Кратко наименование на кирилица: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:LatinFullName">
															<br/>
															<span>
																<xsl:text>Пълно наименование на латиница: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T22:SubordinateLevel">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Код на ниво на подчиненост: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T22:TRStatus">
															<br/>
															<span>
																<xsl:text>Статус от Търговски регистър: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<xsl:for-each select="ns2:NaturalPersonSubject">
										<xsl:choose>
											<xsl:when test="string-length( E:EntryTime ) &gt; 0 or
string-length( T23:Country/T3:Code )&gt; 0 or
string-length( T23:EGN )&gt; 0 or
string-length( T23:LNC )&gt; 0 or
string-length( T23:CyrillicName )&gt; 0 or
string-length( T23:LatinName )&gt; 0 or
string-length( T23:BirthDate )&gt; 0 or
string-length( T23:IdentificationDoc/E:EntryTime ) &gt; 0 or
string-length(  T23:IdentificationDoc/n1:IDType/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IDNumber )  &gt; 0 or
string-length( T23:IdentificationDoc/n1:Country/T3:Code ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:IssueDate ) &gt; 0 or
string-length( T23:IdentificationDoc/n1:ExpiryDate )&gt; 0">
												<table border="0" width="100%">
													<tbody>
														<tr>
															<td valign="top" width="220">
																<div style="font-weight:bold; ">
																	<span>
																		<xsl:text>Физическо лице:</xsl:text>
																	</span>
																</div>
															</td>
															<td valign="top">
																<xsl:for-each select="T23:Country">
																	<xsl:for-each select="T3:Code">
																		<span>
																			<xsl:text>Гражданство (код на държава): </xsl:text>
																		</span>
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:for-each>
																<xsl:for-each select="T23:EGN">
																	<br/>
																	<span>
																		<xsl:text>ЕГН: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:LNC">
																	<br/>
																	<span>
																		<xsl:text>ЛНЧ: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:CyrillicName">
																	<br/>
																	<span>
																		<xsl:text>Име на кирилица: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:LatinName">
																	<br/>
																	<span>
																		<xsl:text>Име на латиница: </xsl:text>
																	</span>
																	<xsl:apply-templates/>
																</xsl:for-each>
																<xsl:for-each select="T23:BirthDate">
																	<br/>
																	<span>
																		<xsl:text>Дата на раждане: </xsl:text>
																	</span>
																	<span>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	</span>
																</xsl:for-each>
															</td>
															<td valign="top" width="40%">
																<xsl:for-each select="E:EntryTime">
																	<span style="font-size:x-small; font-style:italic; ">
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:choose>
																			<xsl:when test="contains(string(string(.)), 'Z')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(string(string(.)), '+')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																				<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</span>
																</xsl:for-each>
															</td>
														</tr>
													</tbody>
												</table>
												<table border="0" width="100%">
													<tbody>
														<tr>
															<td valign="top" width="220"/>
															<td valign="top">
																<xsl:for-each select="T23:IdentificationDoc">
																	<span>
																		<xsl:text>Документ за самоличност</xsl:text>
																	</span>
																	<br/>
																	<table border="0" cellpadding="0" cellspacing="0">
																		<tbody>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Вид документ за самоличност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IDType">
																						<xsl:for-each select="T3:Code">
																							<xsl:apply-templates/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Номер на документ за самоличност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IDNumber">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Държава издала документа:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:Country">
																						<xsl:for-each select="T3:Code">
																							<xsl:apply-templates/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Дата на издаване:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:IssueDate">
																						<span>
																							<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																						</span>
																					</xsl:for-each>
																				</td>
																			</tr>
																			<tr>
																				<th style="font-weight:normal; padding-left:10%; " align="left">
																					<span>
																						<xsl:text>Дата на валидност:</xsl:text>
																					</span>
																				</th>
																				<td align="left">
																					<xsl:for-each select="n1:ExpiryDate">
																						<span>
																							<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																							<xsl:text>.</xsl:text>
																							<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																						</span>
																					</xsl:for-each>
																				</td>
																			</tr>
																		</tbody>
																	</table>
																</xsl:for-each>
															</td>
															<td valign="top" width="40%">
																<xsl:for-each select="T23:IdentificationDoc">
																	<xsl:for-each select="E:EntryTime">
																		<span style="font-size:x-small; font-style:italic; ">
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			<xsl:text> </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																			<xsl:text>:</xsl:text>
																			<xsl:choose>
																				<xsl:when test="contains(string(string(.)), 'Z')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(string(string(.)), '+')">
																					<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																					<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</span>
																	</xsl:for-each>
																</xsl:for-each>
															</td>
														</tr>
													</tbody>
												</table>
											</xsl:when>
											<xsl:otherwise/>
										</xsl:choose>
									</xsl:for-each>
									<xsl:for-each select="ns2:CountrySubject">
										<table border="0" width="100%">
											<tbody>
												<tr>
													<td valign="top" width="220">
														<div style="font-weight:bold; ">
															<span>
																<xsl:text>Държава:</xsl:text>
															</span>
														</div>
													</td>
													<td valign="top">
														<xsl:for-each select="T3:Code">
															<span>
																<xsl:text>Код: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%"/>
												</tr>
											</tbody>
										</table>
									</xsl:for-each>
									<table border="0" width="100%">
										<thead>
											<tr>
												<td valign="top" width="20%">
													<div style="font-weight:bold; ">
														<span style="text-decoration:underline; ">
															<xsl:text>Комуникации</xsl:text>
														</span>
													</div>
												</td>
												<th align="left" valign="top"/>
												<th align="left" valign="top" width="40%"/>
											</tr>
										</thead>
										<tbody>
											<xsl:for-each select="ns2:Communications">
												<tr>
													<td valign="top" width="20%"/>
													<td valign="top">
														<xsl:for-each select="T28:Type">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Код: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T28:Value">
															<span>
																<xsl:text> - Стойност: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</xsl:for-each>
										</tbody>
									</table>
									<table border="0" width="100%">
										<thead>
											<tr>
												<th align="left" valign="top" width="20%">
													<div style="font-weight:bold; ">
														<span>
															<xsl:text>Адреси:</xsl:text>
														</span>
													</div>
												</th>
												<th align="left" valign="top"/>
												<th align="left" valign="top" width="40%"/>
											</tr>
										</thead>
										<tbody>
											<xsl:for-each select="ns2:Addresses">
												<tr>
													<td valign="top">
														<xsl:for-each select="T8:AddressType">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Вид на адреса (код): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
													</td>
													<td valign="top">
														<xsl:for-each select="T8:Country">
															<xsl:for-each select="T3:Code">
																<span>
																	<xsl:text>Код на държава: </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:PostalCode">
															<br/>
															<span>
																<xsl:text>Пощенски код: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:PostalBox">
															<br/>
															<span>
																<xsl:text>Пощенска кутия: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:ForeignLocation">
															<br/>
															<span>
																<xsl:text>Населено място в чужбина: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Location">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Населено място в България (код от ЕКАТТЕ): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:Region">
															<xsl:for-each select="T3:Code">
																<br/>
																<span>
																	<xsl:text>Район (код от ЕКАТТЕ): </xsl:text>
																</span>
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="T8:Street">
															<br/>
															<span>
																<xsl:text>Улица/булевард/ж.к : </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:StreetNumber">
															<br/>
															<span>
																<xsl:text>Номер: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Building">
															<br/>
															<span>
																<xsl:text>Сграда: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Entrance">
															<br/>
															<span>
																<xsl:text>Вход: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Floor">
															<br/>
															<span>
																<xsl:text>Етаж: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
														<xsl:for-each select="T8:Apartment">
															<br/>
															<span>
																<xsl:text>Апартамент: </xsl:text>
															</span>
															<xsl:apply-templates/>
														</xsl:for-each>
													</td>
													<td valign="top" width="40%">
														<xsl:for-each select="E:EntryTime">
															<span style="font-size:x-small; font-style:italic; ">
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																<xsl:text>.</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																<xsl:text> </xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																<xsl:text>:</xsl:text>
																<xsl:choose>
																	<xsl:when test="contains(string(string(.)), 'Z')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(string(string(.)), '+')">
																		<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																		<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																	</xsl:otherwise>
																</xsl:choose>
															</span>
														</xsl:for-each>
													</td>
												</tr>
											</xsl:for-each>
										</tbody>
									</table>
									<xsl:for-each select="ns2:Remark">
										<span style="font-weight:bold; ">
											<xsl:text>Забележки:</xsl:text>
										</span>
										<span>
											<xsl:text>&#160;</xsl:text>
										</span>
										<xsl:apply-templates/>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:for-each>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
