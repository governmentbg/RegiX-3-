<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Professional Edition 2013 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:n1="http://egov.bg/RegiX/MVR/MPS/MotorVehicleRegistrationResponse" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link n1 sps xbrldi xbrli xlink xs xsi">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:decimal-format name="format1" grouping-separator=" " decimal-separator=","/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
				<meta name="generator" content="Altova StyleVision Professional Edition 2013 sp1 (http://www.altova.com)"/>
				<meta http-equiv="X-UA-Compatible" content="IE=9"/>
				<xsl:comment>[if IE]&gt;&lt;STYLE type=&quot;text/css&quot;&gt;.altova-rotate-left-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)} .altova-rotate-right-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)} &lt;/STYLE&gt;&lt;![endif]</xsl:comment>
				<xsl:comment>[if !IE]&gt;&lt;!</xsl:comment>
				<style type="text/css">.altova-rotate-left-textbox{-webkit-transform: rotate(-90deg) translate(-100%, 0%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(-90deg) translate(-100%, 0%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(-90deg) translate(-100%, 0%); -ms-transform-origin: 0% 0%;}.altova-rotate-right-textbox{-webkit-transform: rotate(90deg) translate(0%, -100%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(90deg) translate(0%, -100%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(90deg) translate(0%, -100%); -ms-transform-origin: 0% 0%;}</style>
				<xsl:comment>&lt;![endif]</xsl:comment>
				<style type="text/css">@page { margin-left:0.60in; margin-right:0.60in; margin-top:0.79in; margin-bottom:0.79in } @media print { br.altova-page-break { page-break-before: always; } }</style>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<xsl:for-each select="n1:MotorVehicleRegistrationResponse">
						<h3 style="text-align:center; ">
							<span>
								<xsl:text>Справка за МПС по регистрационен номер</xsl:text>
							</span>
						</h3>
						<xsl:for-each select="n1:Vehicles">
							<ol>
								<li>
									<xsl:for-each select="n1:Vehicle">
										<h4>
											<span>
												<xsl:text>Информация за МПС</xsl:text>
											</span>
										</h4>
										<xsl:for-each select="n1:VehicleRegistrationNumber">
											<span style="font-weight:bold; ">
												<xsl:text>Регистрационен номер на МПС: </xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:FirstRegistrationDate">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Дата на първа регистрация:</xsl:text>
											</span>
											<span>
												<xsl:text>&#160;</xsl:text>
											</span>
											<span>
												<xsl:variable name="altova:seqContentStrings_0">
													<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
												</xsl:variable>
												<xsl:variable name="altova:sContent_0" select="string($altova:seqContentStrings_0)"/>
												<xsl:value-of select="$altova:sContent_0"/>
											</span>
										</xsl:for-each>
										<xsl:for-each select="n1:MotorVehicleRegistrationCertificateNumber">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Номер на документ:</xsl:text>
											</span>
											<span>
												<xsl:text>&#160;</xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<br/>
										<xsl:if test="string-length( n1:OwnerPersonData/n1:EGN )&gt;0 or string-length( n1:OwnerPersonData/n1:FirsName )&gt;0 or string-length( n1:OwnerPersonData/n1:Surname )&gt;0 or string-length( n1:OwnerPersonData/n1:FamilyName )&gt;0 or string-length( n1:OwnerPersonData/n1:FirstNameLatin )&gt;0 or string-length( n1:OwnerPersonData/n1:SurnameLatin )&gt;0 or string-length( n1:OwnerPersonData/n1:LastNameLatin )&gt;0 or string-length( n1:OwnerEntityData/n1:Identifier )&gt;0 or string-length( n1:OwnerEntityData/n1:Name )&gt;0 or string-length( n1:OwnerEntityData/n1:NameLatin )&gt;0">
											<h4>
												<span>
													<xsl:text>Собственик на МПС:</xsl:text>
												</span>
											</h4>
										</xsl:if>
										<xsl:for-each select="n1:OwnerPersonData">
											<xsl:for-each select="n1:EGN">
												<span style="font-weight:bold; ">
													<xsl:text>ЕГН: </xsl:text>
												</span>
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:if test="string-length( n1:FirsName )&gt;0 or string-length( n1:Surname )&gt;0 or string-length( n1:FamilyName )&gt;0 or string-length( n1:FirstNameLatin )&gt;0 or string-length( n1:SurnameLatin )&gt;0 or string-length( n1:LastNameLatin )&gt;0">
												<br/>
												<span style="font-weight:bold; ">
													<xsl:text>Име: </xsl:text>
												</span>
											</xsl:if>
											<xsl:for-each select="n1:FirstName">
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:for-each select="n1:Surname">
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
												<xsl:apply-templates/>
											</xsl:for-each>
											<span>
												<xsl:text>&#160;</xsl:text>
											</span>
											<xsl:for-each select="n1:FamilyName">
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:if test="string-length( n1:FirstNameLatin )&gt;0 or string-length( n1:SurnameLatin )&gt;0 or string-length( n1:LastNameLatin )">
												<span>
													<xsl:text> (</xsl:text>
												</span>
											</xsl:if>
											<xsl:for-each select="n1:FirstNameLatin">
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:for-each select="n1:SurnameLatin">
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:for-each select="n1:LastNameLatin">
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:if test="string-length( n1:FirstNameLatin )&gt;0 or string-length( n1:SurnameLatin )&gt;0 or string-length( n1:LastNameLatin )&gt;0">
												<span>
													<xsl:text>)</xsl:text>
												</span>
											</xsl:if>
											<br/>
											<xsl:if test="count(n1:BirthDate/node()) &gt; 0">
												<span style="font-weight:bold; ">
													<xsl:text>Дата на раждане:</xsl:text>
												</span>
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
											</xsl:if>
											<xsl:for-each select="n1:BirthDate">
												<span>
													<xsl:variable name="altova:seqContentStrings_1">
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
													</xsl:variable>
													<xsl:variable name="altova:sContent_1" select="string($altova:seqContentStrings_1)"/>
													<xsl:value-of select="$altova:sContent_1"/>
												</span>
											</xsl:for-each>
											<br/>
											<xsl:if test="string-length(n1:GenderName) &gt; 0 or string-length(n1:GenderNameLatin) &gt; 0">
												<span style="font-weight:bold; ">
													<xsl:text>Пол:</xsl:text>
												</span>
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
											</xsl:if>
											<xsl:for-each select="n1:GenderName">
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:if test="string-length(n1:GenderName) &gt; 0 and string-length(n1:GenderNameLatin) &gt; 0">
												<span>
													<xsl:text> (</xsl:text>
												</span>
											</xsl:if>
											<xsl:for-each select="n1:GenderNameLatin">
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:if test="string-length(n1:GenderName) &gt; 0 or string-length(n1:GenderNameLatin) &gt; 0">
												<span>
													<xsl:text>)</xsl:text>
												</span>
											</xsl:if>
											<br/>
										</xsl:for-each>
										<xsl:for-each select="n1:OwnerEntityData">
											<xsl:for-each select="n1:Identifier">
												<span style="font-weight:bold; ">
													<xsl:text>ЕИК: </xsl:text>
												</span>
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:if test="string-length( n1:Name )&gt; 0 or string-length( n1:NameLatin )&gt;0">
												<br/>
												<span style="font-weight:bold; ">
													<xsl:text>Име: </xsl:text>
												</span>
											</xsl:if>
											<xsl:for-each select="n1:Name">
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:if test="string-length(n1:Name) &gt; 0 and string-length(n1:NameLatin) &gt; 0">
												<span>
													<xsl:text> (</xsl:text>
												</span>
											</xsl:if>
											<xsl:for-each select="n1:NameLatin">
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:if test="string-length(n1:Name) &gt; 0 and string-length(n1:NameLatin) &gt; 0">
												<span>
													<xsl:text>)</xsl:text>
												</span>
											</xsl:if>
										</xsl:for-each>
										<xsl:for-each select="n1:OwnerForeignerPersonData">
											<br/>
											<xsl:for-each select="n1:EGN">
												<span style="font-weight:bold; ">
													<xsl:text>ЕГН:</xsl:text>
												</span>
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
												<xsl:apply-templates/>
												<br/>
											</xsl:for-each>
											<xsl:for-each select="n1:LNCh">
												<span style="font-weight:bold; ">
													<xsl:text>ЛНЧ:</xsl:text>
												</span>
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
												<xsl:apply-templates/>
												<br/>
											</xsl:for-each>
											<xsl:for-each select="n1:Names">
												<span style="font-weight:bold; ">
													<xsl:text>Имена:</xsl:text>
												</span>
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:if test="string-length(n1:Names) &gt; 0 and string-length(n1:NamesLatin) &gt; 0">
												<span>
													<xsl:text> (</xsl:text>
												</span>
											</xsl:if>
											<xsl:for-each select="n1:NamesLatin">
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:if test="string-length(n1:Names) &gt; 0 and string-length(n1:NamesLatin) &gt; 0">
												<span>
													<xsl:text>)</xsl:text>
												</span>
											</xsl:if>
											<br/>
											<xsl:if test="string-length(n1:GenderName) &gt; 0 or string-length(n1:GenderNameLatin) &gt; 0">
												<span style="font-weight:bold; ">
													<xsl:text>Пол: </xsl:text>
												</span>
											</xsl:if>
											<xsl:for-each select="n1:GenderName">
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:if test="string-length(n1:GenderName) &gt; 0 and string-length(n1:GenderNameLatin) &gt; 0">
												<span>
													<xsl:text> (</xsl:text>
												</span>
											</xsl:if>
											<xsl:for-each select="n1:GenderNameLatin">
												<xsl:apply-templates/>
											</xsl:for-each>
											<xsl:if test="string-length(n1:GenderName) &gt; 0 or string-length(n1:GenderNameLatin) &gt; 0">
												<span>
													<xsl:text>)</xsl:text>
												</span>
											</xsl:if>
										</xsl:for-each>
										<br/>
										<br/>
										<xsl:for-each select="n1:MotorVehicleType">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Вид МПС на кирилица:</xsl:text>
											</span>
											<span>
												<xsl:text>&#160;</xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:MotorVehicleTypeLatin">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Вид МПС на латиница: </xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:MotorVehicleModel">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Марка (модел) на кирилица: </xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:MotorVehicleModelLatin">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Марка (модел) на латиница:</xsl:text>
											</span>
											<span>
												<xsl:text>&#160;</xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:MotorVehicleModelType">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Тип, вариант и версия на МПС на кирилица:</xsl:text>
											</span>
											<span>
												<xsl:text>&#160;</xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:TradeDescription">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Търговско описание на кирилица: </xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:TradeDescriptionLatin">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Търговско описание на латиница: </xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:VINNumber">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Идентификационен номер на МПС (VIN): </xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:IssueDate">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Дата на издаване на свидетелството: </xsl:text>
											</span>
											<span>
												<xsl:variable name="altova:seqContentStrings_2">
													<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
												</xsl:variable>
												<xsl:variable name="altova:sContent_2" select="string($altova:seqContentStrings_2)"/>
												<xsl:value-of select="$altova:sContent_2"/>
											</span>
										</xsl:for-each>
										<xsl:for-each select="n1:Category">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Категория на превозното средство:</xsl:text>
											</span>
											<span>
												<xsl:text>&#160;</xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:Color">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Цвят на МПС на кирилица: </xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:ColorLatin">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Цвят на МПС на латиница: </xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:EngineNumber">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Номер на двигател:</xsl:text>
											</span>
											<span>
												<xsl:text>&#160;</xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:ColorSecondary">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Допълнителен цвят на МПС на кирилица: </xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<xsl:for-each select="n1:ColorSecondaryLatin">
											<br/>
											<span style="font-weight:bold; ">
												<xsl:text>Допълнителен цвят на МПС на латиница: </xsl:text>
											</span>
											<xsl:apply-templates/>
										</xsl:for-each>
										<br/>
									</xsl:for-each>
								</li>
							</ol>
						</xsl:for-each>
					</xsl:for-each>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
