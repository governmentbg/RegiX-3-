<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:common="http://egov.bg/RegiX/MZH" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:n1="http://egov.bg/RegiX/MZH/PastureMeadowLandResponse" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.0 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:decimal-format name="format1" grouping-separator=" " decimal-separator=","/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<xsl:for-each select="n1:PastureMeadowLandResponse">
						<h2 align="center">
							<span style="font-weight:bold; ">
								<xsl:text>Справка за ползване на пасища, мери и ливади</xsl:text>
							</span>
						</h2>
						<br/>
						<p style="padding-left:5%; ">
							<span>
								<xsl:text>Идентификатор на ползвател : </xsl:text>
							</span>
							<xsl:for-each select="BeneficiaryIdentifier">
								<xsl:apply-templates/>
							</xsl:for-each>
						</p>
						<p style="padding-left:5%; ">
							<span>
								<xsl:text>Наименование на ползвател: </xsl:text>
							</span>
							<xsl:for-each select="BeneficiaryName">
								<xsl:apply-templates/>
							</xsl:for-each>
						</p>
						<p style="padding-left:5%; ">
							<span>
								<xsl:text>Вид ползвател: </xsl:text>
							</span>
							<xsl:for-each select="BeneficiaryType">
								<xsl:apply-templates/>
							</xsl:for-each>
						</p>
						<p align="center">
							<span style="font-weight:bold; ">
								<xsl:text>Пасища, мери или ливади на ползвател</xsl:text>
							</span>
						</p>
						<table style="padding:0.5%; " align="center" border="1" cellpadding="0" cellspacing="0" width="90%">
							<thead style="padding:0.5%; ">
								<tr style="padding:0.5%; ">
									<th style="padding:0.5%; ">
										<span>
											<xsl:text>Област</xsl:text>
										</span>
									</th>
									<th style="padding:0.5%; ">
										<span>
											<xsl:text>Община </xsl:text>
										</span>
									</th>
									<th style="padding:0.5%; ">
										<span>
											<xsl:text>Землище</xsl:text>
										</span>
									</th>
									<th style="padding:0.5%; ">
										<span>
											<xsl:text>Площ в дка</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>Дата на данните от регистъра</xsl:text>
										</span>
									</th>
								</tr>
							</thead>
							<tbody>
								<xsl:for-each select="PastureLands">
									<xsl:for-each select="PastureLand">
										<tr style="padding:0.5%; ">
											<td style="padding:0.5%; " align="left">
												<xsl:for-each select="District">
													<xsl:apply-templates/>
												</xsl:for-each>
											</td>
											<td style="padding:0.5%; " align="left">
												<xsl:for-each select="Municipality">
													<xsl:apply-templates/>
												</xsl:for-each>
											</td>
											<td style="padding:0.5%; " align="left">
												<xsl:for-each select="Territory">
													<xsl:apply-templates/>
												</xsl:for-each>
											</td>
											<td style="padding:0.5%; " align="left">
												<xsl:for-each select="Acreage">
													<xsl:apply-templates/>
												</xsl:for-each>
											</td>
											<td style="padding:0.5%; " align="left">
												<xsl:for-each select="ReportDate">
													<span>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
														<xsl:text>.</xsl:text>
														<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
													</span>
													<span>
														<xsl:text> г.</xsl:text>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</xsl:for-each>
								</xsl:for-each>
							</tbody>
						</table>
					</xsl:for-each>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
