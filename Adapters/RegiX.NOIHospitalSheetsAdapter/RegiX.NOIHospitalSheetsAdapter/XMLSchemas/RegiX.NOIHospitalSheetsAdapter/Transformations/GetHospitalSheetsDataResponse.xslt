<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.0 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<xsl:for-each select="GetHospitalSheetsDataResponse">
						<h3 align="center">
							<span>
								<xsl:text>Национален осигурителен институт</xsl:text>
							</span>
						</h3>
						<xsl:for-each select="Title">
							<h2 align="center">
								<xsl:for-each select="Name">
									<xsl:apply-templates/>
								</xsl:for-each>
								<span>
									<xsl:text> за </xsl:text>
								</span>
								<xsl:for-each select="NamesEGN">
									<xsl:apply-templates/>
								</xsl:for-each>
								<span>
									<xsl:text> с </xsl:text>
								</span>
								<xsl:for-each select="FlagEGN">
									<xsl:apply-templates/>
								</xsl:for-each>
								<span>
									<xsl:text>&#160;</xsl:text>
								</span>
								<xsl:for-each select="EGN">
									<xsl:apply-templates/>
								</xsl:for-each>
								<span>
									<xsl:text> към </xsl:text>
								</span>
								<xsl:for-each select="ReportDate">
									<span>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
										<xsl:text> г. </xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00')"/>
										<xsl:text>:</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00')"/>
										<xsl:text>:</xsl:text>
										<xsl:choose>
											<xsl:when test="contains(string(string(.)), 'Z')">
												<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00')"/>
											</xsl:when>
											<xsl:when test="contains(string(string(.)), '+')">
												<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00')"/>
											</xsl:when>
											<xsl:when test="contains(substring(string(string(.)), 18), '-')">
												<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00')"/>
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00')"/>
											</xsl:otherwise>
										</xsl:choose>
										<xsl:text> ч.</xsl:text>
									</span>
								</xsl:for-each>
							</h2>
						</xsl:for-each>
						<br/>
						<xsl:for-each select="ePatCharts">
							<xsl:for-each select="ePatChart">
								<span>
									<xsl:value-of select="position()"/>
								</span>
								<span>
									<xsl:text> .</xsl:text>
								</span>
								<br/>
								<xsl:for-each select="IssuedHospitalSheetNumber">
									<span style="font-weight:bold; ">
										<xsl:text>Издаден болничен лист №: </xsl:text>
									</span>
									<xsl:apply-templates/>
								</xsl:for-each>
								<xsl:for-each select="HospitalSheetOperation">
									<br/>
									<span style="font-weight:bold; ">
										<xsl:text>Вид на операция:</xsl:text>
									</span>
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
									<xsl:apply-templates/>
								</xsl:for-each>
								<xsl:for-each select="TemporaryDisibilityReason">
									<br/>
									<span style="font-weight:bold; ">
										<xsl:text>Причина за временна неработоспособност: </xsl:text>
									</span>
									<xsl:apply-templates/>
								</xsl:for-each>
								<xsl:for-each select="VacationFromDate">
									<br/>
									<span style="font-weight:bold; ">
										<xsl:text>В отпуск от: </xsl:text>
									</span>
									<xsl:apply-templates/>
								</xsl:for-each>
								<xsl:for-each select="VacationToDate">
									<br/>
									<span style="font-weight:bold; ">
										<xsl:text>В отпуск до: </xsl:text>
									</span>
									<xsl:apply-templates/>
								</xsl:for-each>
								<xsl:for-each select="CanceledHospitalSheetNumber">
									<br/>
									<span style="font-weight:bold; ">
										<xsl:text>Анулиран болничен лист №:</xsl:text>
									</span>
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
									<xsl:apply-templates/>
								</xsl:for-each>
								<xsl:for-each select="HospitalSheetIssueDate">
									<br/>
									<span style="font-weight:bold; ">
										<xsl:text>Дата на издаване на болничен лист: </xsl:text>
									</span>
									<xsl:apply-templates/>
								</xsl:for-each>
								<xsl:for-each select="MedicalCentreName">
									<br/>
									<span style="font-weight:bold; ">
										<xsl:text>Наименование на лечебно заведение: </xsl:text>
									</span>
									<xsl:apply-templates/>
								</xsl:for-each>
								<xsl:for-each select="SysDate">
									<br/>
									<span style="font-weight:bold; ">
										<xsl:text>Дата на постъпване на данните в ЕРБЛРО: </xsl:text>
									</span>
									<span>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
										<xsl:text> г. </xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00')"/>
										<xsl:text>:</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00')"/>
										<xsl:text>:</xsl:text>
										<xsl:choose>
											<xsl:when test="contains(string(string(.)), 'Z')">
												<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00')"/>
											</xsl:when>
											<xsl:when test="contains(string(string(.)), '+')">
												<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00')"/>
											</xsl:when>
											<xsl:when test="contains(substring(string(string(.)), 18), '-')">
												<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00')"/>
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00')"/>
											</xsl:otherwise>
										</xsl:choose>
										<xsl:text> ч.</xsl:text>
									</span>
								</xsl:for-each>
								<hr/>
								<br/>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:for-each>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
